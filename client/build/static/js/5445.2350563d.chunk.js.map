{"version":3,"file":"static/js/5445.2350563d.chunk.js","mappings":"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","sources":["view/pages/Protected.jsx","view/pages/treeview/MyTreeView.jsx","view/pages/documents/index.jsx","view/storage.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst ProtectedAppPage = () => {\r\n  const isLogIn = localStorage?.getItem(\"user\");\r\n  console.log(isLogIn, \"loggin\");\r\n  if (!isLogIn) {\r\n    return <Redirect to=\"/pages/authentication/login\" />;\r\n  }\r\n\r\n  return null;\r\n};\r\nexport default ProtectedAppPage;\r\n","\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport FolderIcon from '@mui/icons-material/Folder';\r\nimport FolderSpecialIcon from '@mui/icons-material/FolderSpecial';\r\nimport FolderOpenIcon from '@mui/icons-material/Folder';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 7,\r\n    maxWidth: 1300,\r\n  },\r\n  projectNode: {\r\n    backgroundColor: '#ffffff',\r\n    fontSize: '30px',\r\n    padding: '15px',\r\n    borderRadius: '9px',\r\n    marginBottom: '15px',\r\n    transition: 'background-color 0.2s ease',\r\n    fontWeight: 'bold',\r\n\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n  },\r\n  mdrNode: {\r\n    backgroundColor: '#ffffff',\r\n    fontSize: '24px',\r\n    padding: '15px',\r\n    borderRadius: '9px',\r\n    marginLeft: '16px',\r\n    marginBottom: '12px',\r\n    transition: 'background-color 0.3s ease',\r\n    fontWeight: 'bold',\r\n\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n  },\r\n  departmentIdNode: {\r\n    backgroundColor: '#ffffff',\r\n    fontSize: '20px',\r\n    padding: '15px',\r\n    borderRadius: '9px',\r\n    marginLeft: '16px',\r\n    marginBottom: '12px',\r\n    transition: 'background-color 0.3s ease',\r\n    fontWeight: 'bold',\r\n\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n  },\r\n  titleNode: {\r\n    backgroundColor: '#ffffff',\r\n    fontSize: '20px',\r\n    padding: '8px',\r\n    borderRadius: '4px',\r\n    marginLeft: '16px',\r\n    transition: 'background-color 0.3s ease',\r\n    fontWeight: 'bold',\r\n\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n  },\r\n  icon: {\r\n    marginRight: '8px',\r\n    fontWeight: 'bold',\r\n\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '8px',\r\n    padding: '6px',\r\n  },\r\n  status: {\r\n    marginRight: '12px',\r\n    fontSize: '14px',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\nconst MyTreeView = () => {\r\n  const [information,setInformation]=useState()\r\n  const [user] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n  const [data, setData] = useState({});\r\n\r\n  console.log(\"user\",user)\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const fetchInformation = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://novacon.live/api/projects/information?companyId=${user?.user?.companyId}`,\r\n          {\r\n            headers: {\r\n              Authorization: user?.accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (isMounted) {\r\n          setInformation(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching projects:\", error?.message);\r\n      }\r\n    };\r\n\r\n    fetchInformation();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user?.user?.companyId]);\r\n\r\n  \r\n  useEffect(() => {\r\n    // Modify the processData function\r\n// Modify the processData function\r\nconst processData = () => {\r\n  if (!information || information.length === 0) {\r\n    // Handle the case where information is undefined or an empty array\r\n    return;\r\n  }\r\n\r\n  const newData = {};\r\n  console.log(information, \"information\");\r\n\r\n\r\n  information.forEach((info) => {\r\n    if (!newData[info.title]) {\r\n      newData[info.title] = {};\r\n      console.log(newData, 'newData1');\r\n    }\r\n  \r\n    info.mdrs.forEach((mdr) => {\r\n      if (!newData[info.title][mdr.title]) {\r\n        newData[info.title][mdr.title] = {};\r\n      }\r\n  \r\n      console.log(newData, 'newData2');\r\n  \r\n      // Split department names and ensure documents exist\r\n      const departmentNames = mdr.departmentName?.split(\",\") ?? [];\r\n      const documents = mdr.documents ?? [];\r\n      // Split department suffixes\r\n      const departmentSuffixes = info.departmentSuffix?.split(\",\") ?? [];\r\n  \r\n      // Iterate over department names and suffixes\r\n      departmentNames.forEach((departmentName, index) => {\r\n        // Trim department name and suffix\r\n        const trimmedDepartmentName = departmentName.trim();\r\n        const trimmedSuffix = departmentSuffixes[index]?.trim();\r\n  \r\n        console.log(trimmedDepartmentName, 'trimmedDepartmentName', trimmedSuffix, 'trimmedSuffix');\r\n        console.log(newData, 'newData');\r\n  \r\n        // Initialize department array if not present\r\n        if (!newData[info.title][mdr.title][trimmedDepartmentName]) {\r\n          newData[info.title][mdr.title][trimmedDepartmentName] = [];\r\n        }\r\n  \r\n        // Iterate over documents\r\n        documents.forEach((document) => {\r\n          // Trim document title and check if it includes the trimmed suffix\r\n          const trimmedTitle = document.title.trim();\r\n          if (trimmedSuffix && trimmedTitle.includes(trimmedSuffix)) {\r\n            // Push document data to department array\r\n            newData[info.title][mdr.title][trimmedDepartmentName].push({\r\n              title: document.title,\r\n              docTitle: trimmedTitle,\r\n              status: document.status,\r\n              version: document.version\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n  });\r\n  \r\n  console.log(newData, 'finalNewData');\r\n  \r\n  \r\n  console.log(newData,\"newData\");\r\n  setData(newData);\r\n};\r\n\r\n    processData();\r\n  }, [information]);\r\n  const classes = useStyles();\r\n  const BACKEND_URL = \"https://novacon.live\"; // Update with your backend URL\r\n\r\n  const handleOpenDocument = async (document) => {\r\n    // Handle open document logic here\r\n    console.log('documentsss',document);\r\n    alert(`Opening document: ${document.docTitle}`);\r\n    const responseData=await fetchAppRev(document.docTitle);\r\n    console.log('helllooo',responseData);\r\n     // Replace 'John' with the actual doc's name\r\n     const docName = document.docTitle;\r\n     const url= `${BACKEND_URL}/uploads/${docName}-${document.version}.pdf` \r\n     console.log(user.user.roleId,user.user.firstName,user);\r\n     let allowed='false';\r\n if(responseData){\r\n allowed='true';\r\n }\r\n try {\r\n  const response = await axios.get(\r\n    `https://novacon.live/api/documents/checkDocuments?companyId=${user?.user?.companyId}&docName=${document.docTitle}&masterDocumentCode=${\"1472-1\"}&version=${document.version}&roleId=${user?.user.roleId}`,\r\n    {\r\n      headers: {\r\n        Authorization: user?.accessToken,\r\n        // Add other headers if needed\r\n      },\r\n    }\r\n  );\r\n  if (response.data.status) {\r\n          console.log(\"response.data.status\");\r\n          \r\n          // Document exists, proceed with redirect\r\n          window.location.href = `https://novacon.live/react-pdf-highlighter/?docName=${record.docName}.pdf&url=${url}&allowed=${allowed}&user=${user.user.roleId} ${user.user.firstName}`;\r\n        } else {\r\n          // Document does not exist, show an alert\r\n          message.warning('Document not uploaded yet.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking document:', error);\r\n        alert('An error occurred while checking the document.');\r\n      }\r\n      };\r\n\r\n\r\n//   const handleOpen = async (record) => {\r\n//     const responseData=await fetchAppRev(record.title);\r\n//     console.log('helllooo',responseData);\r\n//      // Replace 'John' with the actual doc's name\r\n//      const docName = record.title;\r\n//      const url= `${BACKEND_URL}/uploads/${docName}-${record.version}.pdf` \r\n//      console.log(user.user.roleId,user.user.firstName,user);\r\n//      let allowed='false';\r\n//  if(responseData){\r\n//  allowed='true';\r\n//  }\r\n \r\n \r\n//          };\r\n  const fetchAppRev = async (title) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/documents/establishment?companyId=${user?.user?.companyId}&userId=${user.user.id}&docName=${title}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n        \r\n\r\n\r\n      console.log(response.data,\"received\");\r\n      return response.data;\r\n    \r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <TreeView\r\n        defaultCollapseIcon={<FolderIcon />}\r\n        defaultExpandIcon={<FolderOpenIcon />}\r\n        defaultEndIcon={<DescriptionIcon />}\r\n      >\r\n        {Object.entries(data).map(([projectId, mdrs]) => (\r\n          <TreeItem\r\n            key={projectId}\r\n            nodeId={projectId}\r\n            label={`Project Title: ${projectId}`}\r\n            className={classes.projectNode}\r\n            icon={<FolderIcon className={classes.icon} />}\r\n            sx={{ display: \"inline-flex\" }} // Display child nodes inline\r\n          >\r\n            {Object.entries(mdrs).map(([mdr, departments]) => (\r\n              <TreeItem\r\n                key={`${projectId}-${mdr}`}\r\n                nodeId={`${projectId}-${mdr}`}\r\n                label={`MDR Title: ${mdr}`}\r\n                className={classes.mdrNode}\r\n                icon={<FolderSpecialIcon className={classes.icon} />}\r\n                sx={{ display: \"inline-flex\" }} // Display child nodes inline\r\n              >\r\n                {Object.entries(departments).map(([department, documents]) => (\r\n                  <TreeItem\r\n                    key={`${projectId}-${mdr}-${department}`}\r\n                    nodeId={`${projectId}-${mdr}-${department}`}\r\n                    label={`Department Name: ${department}`}\r\n                    className={classes.departmentIdNode}\r\n                    icon={<FolderIcon className={classes.icon} />}\r\n                    sx={{ display: \"inline-flex\" }} // Display child nodes inline\r\n                  >\r\n                    {documents.map((document, index) => (\r\n                      <TreeItem\r\n                        key={`${projectId}-${mdr}-${department}-${index}`}\r\n                        nodeId={`${projectId}-${mdr}-${department}-${index}`}\r\n                        label={`Title: ${document.docTitle} (${document.title})`}\r\n                        className={classes.titleNode}\r\n                        icon={<DescriptionIcon className={classes.icon} />}\r\n                        sx={{ display: \"inline-flex\" }}\r\n                      >\r\n                        <div className={classes.buttonContainer}>\r\n                          <span className={classes.status}>Status: {document.status}</span>\r\n                          <Button\r\n                            onClick={() => handleOpenDocument(document)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            size='10px'\r\n                          >\r\n                            Open Document\r\n                          </Button>\r\n                        </div>\r\n                      </TreeItem>\r\n                    ))}\r\n                  </TreeItem>\r\n                ))}\r\n              </TreeItem>\r\n            ))}\r\n          </TreeItem>\r\n        ))}\r\n      </TreeView>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyTreeView;","// import React, { useEffect, useState } from \"react\";\r\n// import { FormattedMessage } from \"react-intl\";\r\n// import { saveData, loadData, getAllKeys } from '../../storage';\r\n// import { useHistory } from 'react-router-dom'; \r\n// import MyTreeView from \"../treeview/MyTreeView\";\r\n// import { DownOutlined } from '@ant-design/icons';\r\n// import {Row,Col,Divider,notification,Form,Menu,Dropdown,Space,Checkbox,Table,Select,Tag,Input,DatePicker,TimePicker,Button,Modal,message,Upload,\r\n// } from \"antd\";\r\n// import { Radio } from \"antd\";\r\n// import axios from \"axios\";\r\n// import { RiCloseFill, RiCalendarLine } from \"react-icons/ri\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { UploadOutlined } from \"@ant-design/icons\";\r\n// import ProtectedAppPage from \"../Protected\";\r\n// import ReactQuill from \"react-quill\";\r\n// import \"react-quill/dist/quill.snow.css\";\r\n// import { SearchOutlined } from '@ant-design/icons';\r\n// import Highlighter from 'react-highlight-words';\r\n// import { useRef } from \"react\";\r\n\r\n// const uploadProps = {\r\n//   name: \"file\",\r\n//   action: \"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\",\r\n//   headers: {\r\n//     authorization: \"authorization-text\",\r\n//   },\r\n//   onChange(info) {\r\n//     if (info.file.status !== \"uploading\") {\r\n//       console.log(info.file, info.fileList);\r\n//     }\r\n//     if (info.file.status === \"done\") {\r\n//       message.success(`${info.file.name} file uploaded successfully`);\r\n//     } else if (info.file.status === \"error\") {\r\n//       message.error(`${info.file.name} file upload failed.`);\r\n//     }\r\n//   },\r\n// };\r\n\r\n// export default function Document() {\r\n//   const menu = (\r\n//     <Menu>\r\n//       <Menu.Item onClick={() => handleAll()}>All</Menu.Item>\r\n//       <Menu.Item onClick={() => handleReviewed()}>Reviewed</Menu.Item>\r\n//       <Menu.Item onClick={() => handleApproved()}>Approved</Menu.Item>\r\n//       <Menu.Item onClick={() => handleCompleted()}>Completed</Menu.Item>\r\n//       <Menu.Item onClick={() => handleUploaded()}>Uploaded</Menu.Item>\r\n//     </Menu>\r\n//   );\r\n\r\n//   const handleAll=()=>{\r\n//     setData(dataArray)\r\n//   }\r\n//   const handleReviewed=()=>{\r\n//     setData(dataArray)\r\n//   }\r\n//   const handleApproved=()=>{\r\n//     setData(dataArray)\r\n//   }\r\n//   const handleCompleted=()=>{\r\n//     const completedData = dataArray.filter(item => item.status === 'completed');\r\n//     setData(completedData)\r\n//   }\r\n//   const handleUploaded=()=>{\r\n//     const ongoingData = dataArray.filter(item => item.status === 'ongoing');\r\n//     setData(ongoingData)\r\n\r\n//   }\r\n\r\n//   const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n//     confirm();\r\n//     setSearchText(selectedKeys[0]);\r\n//     setSearchedColumn(dataIndex);\r\n//   };\r\n//   const handleReset = (clearFilters) => {\r\n//     clearFilters();\r\n//     setSearchText('');\r\n//   };\r\n\r\n\r\n//   const getColumnSearchProps = (dataIndex) => ({\r\n//     filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\r\n//       <div style={{ padding: 8 }}>\r\n//         <Input\r\n//           ref={searchInput}\r\n//           placeholder={`Search ${dataIndex}`}\r\n//           value={selectedKeys[0]}\r\n//           onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n//           onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n//           style={{ marginBottom: 8, display: 'block' }}\r\n//         />\r\n//         <Space>\r\n//           <Button\r\n//             type=\"primary\"\r\n//             onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n//             icon={<SearchOutlined />}\r\n//             size=\"small\"\r\n//             style={{ width: 90 }}\r\n//           >\r\n//             Search\r\n//           </Button>\r\n//           <Button onClick={() => clearFilters && handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n//             Reset\r\n//           </Button>\r\n          \r\n//         </Space>\r\n//       </div>\r\n//     ),\r\n//     filterIcon: (filtered) => (\r\n//       <SearchOutlined style={{ color: filtered ? '#1677ff' : undefined }} />\r\n//     ),\r\n//     onFilter: (value, record) =>\r\n//       record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n//     onFilterDropdownOpenChange: (visible) => {\r\n//       if (visible) {\r\n//         setTimeout(() => searchInput.current?.select(), 100);\r\n//       }\r\n//     },\r\n//     render: (text) =>\r\n//       searchedColumn === dataIndex ? (\r\n//         <Highlighter\r\n//           highlightStyle={{\r\n//             backgroundColor: '#ffc069',\r\n//             padding: 0,\r\n//           }}\r\n//           searchWords={[searchText]}\r\n//           autoEscape\r\n//           textToHighlight={text ? text.toString() : ''}\r\n//         />\r\n//       ) : (\r\n//         text\r\n//       ),\r\n//   });\r\n\r\n\r\n//   const BACKEND_URL = \"https://novacon.live\"; // Update with your backend URL\r\n\r\n//   const history = useHistory();\r\n\r\n//   const columns = [\r\n//     {\r\n//       title: \"Mdr Code\",\r\n//       dataIndex: \"masterDocumentId\",\r\n//       key: \"masterDocumentId\",\r\n//       ...getColumnSearchProps('masterDocumentId'),\r\n\r\n//     },\r\n//     {\r\n//       title: \"Document Name\",\r\n//       dataIndex: \"title\",\r\n//       key: \"title\",\r\n//       ...getColumnSearchProps('title'),\r\n\r\n//     }, {\r\n//       title: \"Version\",\r\n//       dataIndex: \"version\",\r\n//       key: \"version\",\r\n//     },\r\n//     // {\r\n//     //   title: \".exe\",\r\n//     //   dataIndex: \"extension\",\r\n//     //   key: \"extension\",\r\n//     // },\r\n//     {\r\n//       title: (\r\n//         \"Status\"\r\n//       ),\r\n//       key: \"status\",\r\n//       dataIndex: \"status\",\r\n  \r\n//   filters: [\r\n//     {\r\n//       text: 'Initialized',\r\n//       value: 'Initialized',\r\n//     },\r\n//         {\r\n//           text: 'Reviewed',\r\n//           value: 'Reviewed',\r\n//         },\r\n//         {\r\n//           text: 'Approved',\r\n//           value: 'Approved',\r\n//         },\r\n//         {\r\n//           text: 'Completed',\r\n//           value: 'Completed',\r\n//         },\r\n//         {\r\n//           text: 'Uploaded',\r\n//           value: 'Uploaded',\r\n//         },\r\n//       ],\r\n//       onFilter:  (value, record) =>record.status === value,\r\n//     },\r\n//     {\r\n//       title: \"Assigned To\",\r\n//       dataIndex: \"assignedTo\",\r\n//       key: \"assignedTo\",\r\n//     },\r\n//     {\r\n//       title: \"Action\",\r\n//       key: \"action\",\r\n//       render: (_, record) => (\r\n//         <Space size=\"middle\">\r\n//           {user.user.roleId != 1 ? record.status=='Initialized' || record.status=='Reviewers Rejected' || record.status=='Approvers Rejected'? (\r\n//                     <Space size=\"middle\">\r\n\r\n//             <input type=\"file\" onChange={(e)=>handleFileChange(e,record)}>\r\n             \r\n\r\n//             </input>\r\n//             <a onClick={() => assignModalShow(record)}>Assign Document</a>\r\n\r\n//             </Space>\r\n\r\n            \r\n//           ) : user.user.id == record.assignedTo ?(\r\n//             <Space size=\"middle\">\r\n//             <a onClick={() => handleOpen(record)}>Open</a>\r\n            \r\n//             <input type=\"file\" onChange={(e)=>handleFileChange(e,record)}/>\r\n//             </Space>\r\n\r\n//           ): (\r\n//             <>\r\n// <a onClick={() => handleOpen(record)}>Open</a>\r\n//               {/* <a onClick={() => history.push(`/pages/mypdf?documentId=${record.title}`)}>Open</a> */}\r\n//               {/* <a onClick={() => statusModalShow(record)}>Add Status</a> */}\r\n//             </>\r\n//           ):record.status =='Initialized'?              <a onClick={() => assignModalShow(record)}>Assign Document</a>\r\n//           :(\r\n//             <>\r\n// <a onClick={() => handleOpen(record)}>Open</a>\r\n//               {/* <a onClick={() => history.push(`/pages/mypdf?documentId=${record.title}`)}>Open</a> */}\r\n//               {/* <a onClick={() => statusModalShow(record)}>Add Status</a> */}\r\n//             </>\r\n//           )}\r\n//         </Space>\r\n//       ),\r\n//     }\r\n//   ];\r\n//   const [assignModalVisible, setAssignModalVisible] = useState(false);\r\n//   const [selectedDocument, setSelectedDocument] = useState(null);\r\n//   const [documentModalVisible, setDocumentModalVisible] = useState(false);\r\n//   const [docTitle, setDocTitle] = useState(\"\");\r\n//   const [projectId, setProjectId] = useState(\"\");\r\n//   const [departmentId, setDepartmentId] = useState(\"\");\r\n//   const [extension, setExtension] = useState(\"\");\r\n//   const [mdr, setMDR] = useState(\"\");\r\n//   const [file, setFile] = useState(null);\r\n//   const [textEditorValue, setTextEditorValue] = useState(\"\");\r\n//   const [departmentOptions, setDepartments] = useState([]);\r\n//   const [projectOptions, setProjects] = useState([]);\r\n//   const [mdrOptions, setMdrData] = useState([]);\r\n//   const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n//   const [data, setData] = useState([]);\r\n//   const [dataArray, setDataArray] = useState([]);\r\n//   const [projectCode, setProjectCode] = useState(\"\");\r\n//   const [areaCode, setAreaCode] = useState(\"\");\r\n//   const [deptSuffix, setDeptSuffix] = useState(\"\");\r\n//   const [departments,setDepartment] = useState([])\r\n//   const [projects,setProject] = useState([])\r\n//   const [showTreeView, setShowTreeView] = useState(false);\r\n//   const [userOption, setUserDatalist] = useState([]);\r\n//   const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n//   const [myrecord,setMyRecord]=useState({});\r\n//   const [searchText, setSearchText] = useState('');\r\n//   const [searchedColumn, setSearchedColumn] = useState('');\r\n//   const searchInput = useRef(null);\r\n\r\n  \r\n\r\n//   const assignModalShow = async (record) => {\r\n//     console.log('recorddddd',record);\r\n//     setMyRecord(record);\r\n//     console.log('hellloooo',myrecord);\r\n//     await  fetchUsers();\r\n   \r\n//     setAssignModalVisible(true);\r\n\r\n//   };\r\n\r\n//   const assignModalCancel = () => {\r\n//     setAssignModalVisible(false);\r\n//   };\r\n\r\n//   const handleDoubleClick = () => {\r\n//     setShowTreeView(false);\r\n//   };\r\n\r\n//   const handleDocumentWiseClick = () => {\r\n//     console.log(\"clicked\");\r\n//     setShowTreeView(true);\r\n//   };\r\n\r\n  \r\n \r\n//   const documentModalShow = () => {\r\n//     setDocumentModalVisible(true);\r\n//   };\r\n//   const handleOpen = async (record) => {\r\n//    const responseData=await fetchAppRev(record.title);\r\n//    console.log('helllooo',responseData);\r\n//     // Replace 'John' with the actual doc's name\r\n//     const docName = record.title;\r\n//     const url= `${BACKEND_URL}/uploads/${docName}-${record.version}.pdf` \r\n//     console.log(user.user.roleId,user.user.firstName,user);\r\n//     let allowed='false';\r\n// if(responseData){\r\n// allowed='true';\r\n// }\r\n//     // Redirect to the external URL\r\n//      window.location.href = `https://novacon.live/react-pdf-highlighter/?docName=${docName}.pdf&url=${url}&allowed=${allowed}&user=${user.user.roleId} ${user.user.firstName}`;\r\n//   };\r\n//   const documentModalCancel = () => {\r\n//     setMDR(\"\");\r\n//     setDocTitle(\"\");\r\n//     setExtension(\"\");\r\n//     setProjectId(\"\");\r\n//     setDepartmentId(\"\");\r\n//     setTextEditorValue(\"\");\r\n//     setDocumentModalVisible(false);\r\n//   };\r\n  \r\n//   const fetchAppRev = async (title) => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://novacon.live/api/documents/establishment?companyId=${user?.user?.companyId}&userId=${user.user.id}&docName=${title}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: user?.accessToken,\r\n//             // Add other headers if needed\r\n//           },\r\n//         }\r\n//       );\r\n        \r\n\r\n\r\n//       console.log(response.data,\"received\");\r\n//       return response.data;\r\n    \r\n//     } catch (error) {\r\n//       console.error(\"Error fetching documents:\", error?.message);\r\n//     }\r\n//   };\r\n//   const handleFileChange = async (e, record) => {\r\n//     const formData = new FormData();\r\n\r\n//     const uploadedFile = e.target.files[0];\r\n//     console.log(record);\r\n//     const title=record.title;\r\n//     console.log(record.title,record.version);\r\n//     if (uploadedFile.name === `${record.title}-${record.version}.pdf`) {\r\n//       setFile(uploadedFile);\r\n// console.log(formData,'formdata');\r\n//       console.log('Uploaded file:', uploadedFile);\r\n\r\n//       const obj = {\r\n//         title: title,\r\n//         companyId: user?.user?.companyId,\r\n//         roleId: user?.user?.roleId,\r\n//         userId: user?.user?.id,\r\n//         userName: `${user?.user?.firstName} ${user?.user?.lastName}`,\r\n//         \"file\": uploadedFile\r\n//       };\r\n//       Object.entries(obj).forEach(([key, value]) => {\r\n//         formData.append(key, value);\r\n//       });\r\n//       try {\r\n       \r\n       \r\n\r\n//         const response = await axios.post(\r\n//           `https://novacon.live/api/documents/upload`,        \r\n//           formData,\r\n//           {\r\n//             headers: {\r\n//               Authorization: user?.accessToken,\r\n//               // Add other headers if needed\r\n//             },\r\n//           }\r\n//         );\r\n//         // Handle the response as needed\r\n//         console.log(response);\r\n//         message.success(response?.data?.message);\r\n       \r\n//       } catch (error) {\r\n//         // Handle errors\r\n  \r\n//         message.error(error);\r\n//       }\r\n\r\n//     } else {\r\n//       // Show an error message or take appropriate action\r\n//       message.error('File name does not match '+ record.title);\r\n//       // Clear the file input field\r\n//       e.target.value = null;\r\n//     }\r\n//   };\r\n\r\n//   const fetchUsers = async () => {\r\n\r\n    \r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://novacon.live/api/users?companyId=${user?.user?.companyId}&roleId=2`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: user?.accessToken,\r\n//             // Add other headers if needed\r\n//           },\r\n//         }\r\n//       );\r\n//       console.log(response?.data, \"Users\");\r\n//       const option = [];\r\n//       let role='';\r\n//       console.log(\"uuuu\",user?.user.roleId,user?.user.companyId,user?.user.id);\r\n// if(user.user.roleId == 1){\r\n\r\n//   for (const item of response?.data) {\r\n//     console.log(myrecord,myrecord.departmentId,item.departmentId,\"data\");\r\n//    if(item.roleId ==2  && myrecord.departmentId.indexOf(item.departmentId) !== -1){\r\n\r\n//     role =`Head of ${item.department}`\r\n//     option.push({\r\n//       value:item?.id,\r\n//       label: `${item?.firstName} ${role} `,\r\n//     });\r\n//  } \r\n// //    if(item.roleId==4 && item.departmentId==user.user.departmentId){\r\n// //      role = `Junior ${item.department}`\r\n// //      option.push({\r\n// //       value:item?.id,\r\n// //       label: `${item?.firstName} ${role} `,\r\n// //     });\r\n// //   }\r\n// //   if(item.roleId==5 && item.departmentId==user.user.departmentId){\r\n// //     role ='Designer/Draughtsmen'\r\n// //     option.push({\r\n// //       value:item?.id,\r\n// //       label: `${item?.firstName} ${role} `,\r\n// //     });\r\n// //  } \r\n//    } }\r\n// if(user.user.roleId==2 ){\r\n//       for (const item of response?.data) {\r\n//        if(item.roleId==3 && item.departmentId==user.user.departmentId){\r\n//         role =`Senior Engineer ${item.department}`\r\n//         option.push({\r\n//           value:item?.id,\r\n//           label: `${item?.firstName} ${role} `,\r\n//         });\r\n//      } \r\n//   //    if(item.roleId==4 && item.departmentId==user.user.departmentId){\r\n//   //      role = `Junior ${item.department}`\r\n//   //      option.push({\r\n//   //       value:item?.id,\r\n//   //       label: `${item?.firstName} ${role} `,\r\n//   //     });\r\n//   //   }\r\n//   //   if(item.roleId==5 && item.departmentId==user.user.departmentId){\r\n//   //     role ='Designer/Draughtsmen'\r\n//   //     option.push({\r\n//   //       value:item?.id,\r\n//   //       label: `${item?.firstName} ${role} `,\r\n//   //     });\r\n//   //  } \r\n//        } }\r\n//        if(user.user.roleId==3){\r\n//         for (const item of response?.data) {\r\n//          if(item.roleId==3 && item.departmentId==user.user.departmentId){\r\n//           role =`Senior Engineer ${item.department}`\r\n//           option.push({\r\n//             value:item?.id,\r\n//             label: `${item?.firstName} ${role} `,\r\n//           });\r\n//        } \r\n//        if(item.roleId==4 && item.departmentId==user.user.departmentId){\r\n//          role = `Junior ${item.department}`\r\n//          option.push({\r\n//           value:item?.id,\r\n//           label: `${item?.firstName} ${role} `,\r\n//         });\r\n//       }\r\n//       if(item.roleId==5 && item.departmentId==user.user.departmentId){\r\n//         role ='Designer/Draughtsmen'\r\n//         option.push({\r\n//           value:item?.id,\r\n//           label: `${item?.firstName} ${role} `,\r\n//         });\r\n//      } \r\n//          } }\r\n//          console.log(\"option\",option);\r\n//       setUserDatalist(option);\r\n//        // Assuming the response.data is an array of DocumentPermissions\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching Users:\", error?.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleFile = (e) => {\r\n//     const uploadedFile = e.target.files[0];\r\n    \r\n//       setFile(uploadedFile);\r\n//       console.log('Uploaded file:', uploadedFile);\r\n   \r\n//   };\r\n\r\n\r\n//   const addDocument = async () => {\r\n//     if (!docTitle || !mdrObj?.departmentId || !mdrObj?.projectId) {\r\n//       // If any required field is missing, display a validation error notification\r\n//       notification.error({\r\n//         message: 'Validation Error',\r\n//         description: 'Please fill in all required fields.',\r\n//         style: {\r\n//           backgroundColor: '#f5222d', // Red color background\r\n//           color: '#fff', // White text color\r\n//         },\r\n//       });\r\n//       return; // Exit early if validation fails\r\n//     }\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"file\", file);\r\n//       const mdrObj = mdrOptions.find((item) => item?.value == mdr);\r\n//       console.log(mdrObj, mdr, user);\r\n//       const obj = {\r\n//         title: docTitle,\r\n//         departmentId: mdrObj?.departmentId,\r\n//         projectId: mdrObj?.projectId,\r\n//         masterDocumentId: mdr,\r\n//         content: textEditorValue,\r\n//         extension,\r\n//         companyId: user?.user?.companyId,\r\n//         roleId: user?.user?.roleId,\r\n//         userId: user?.user?.id,\r\n//         userName: `${user?.user?.firstName} ${user?.user?.lastName}`,\r\n//       };\r\n//       Object.entries(obj).forEach(([key, value]) => {\r\n//         formData.append(key, value);\r\n//       });\r\n//       console.log(formData);\r\n//       const response = await axios.post(\r\n//         `https://novacon.live/api/documents/?projectCode=${projectCode}&areaCode=${areaCode}&deptSuffix=${deptSuffix}`,        \r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             Authorization: user?.accessToken,\r\n//             // Add other headers if needed\r\n//           },\r\n//         }\r\n//       );\r\n//       // Handle the response as needed\r\n//       console.log(response);\r\n//       message.success(response?.data?.message);\r\n//      await fetchData();\r\n//       documentModalCancel();\r\n//     } catch (error) {\r\n//       // Handle errors\r\n\r\n//       if (error?.message == \"Request failed with status code 403\") {\r\n//         message.error(\"Permission Denied to create document on this MDR\");\r\n//       }\r\n//     }\r\n//   };\r\n//   const fetchData = async () => {\r\n    \r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://novacon.live/api/documents?companyId=${user?.user?.companyId}&assignedBy=${user.user.roleId}&userId=${user.user.id}&department=${user.user.departmentId}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: user?.accessToken,\r\n//             // Add other headers if needed\r\n//           },\r\n//         }\r\n//       );\r\n        \r\n\r\n\r\n//       console.log(response.data,\"received\");\r\n//       // Check if response.data is an array before including it in the setData call\r\n//       const newData = Array.isArray(response.data) ? response.data : [];\r\n\r\n//       setDataArray([...newData])\r\n//       setData([...newData]);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching documents:\", error?.message);\r\n//     }\r\n//   };\r\n  \r\n//   const fetchDepartments = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://novacon.live/api/departments?companyId=${user?.user?.companyId}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: user?.accessToken,\r\n//             // Add other headers if needed\r\n//           },\r\n//         }\r\n//       );\r\n//       setDepartment(response.data)\r\n//       const options = [];\r\n//       for (const item of response?.data) {\r\n//         options.push({ value: item?.suffix, label: item?.suffix });\r\n//       }\r\n//       setDepartments(options); // Assuming the response.data is an array of projects\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching departments:\", error?.message);\r\n//     }\r\n//   };\r\n//   const fetchProjects = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://novacon.live/api/projects?companyId=${user?.user?.companyId}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: user?.accessToken,\r\n//             // Add other headers if needed\r\n//           },\r\n//         }\r\n//       );\r\n//       setProject(response.data)\r\n//       const options = [];\r\n//       for (const item of response?.data) {\r\n//         options.push({ value: item?.code, label: item?.code });\r\n//       }\r\n//       setProjects(options); // Assuming the response.data is an array of projects\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching departments:\", error?.message);\r\n//     }\r\n//   };\r\n//   const fetchMDR = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://novacon.live/api/documents/mdr?companyId=${user?.user?.companyId}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: user?.accessToken,\r\n//             // Add other headers if needed\r\n//           },\r\n//         }\r\n//       );\r\n//       const options = [];\r\n//       for (const item of response?.data) {\r\n//         options.push({\r\n//           value: item?.id,\r\n//           label: item?.title,\r\n//           projectId: item?.projectId,\r\n//           departmentId: item?.departmentId,\r\n//         });\r\n//       }\r\n\r\n//       setMdrData(options); // Assuming the response.data is an array of projects\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching departments:\", error?.message);\r\n//     }\r\n//   };\r\n//   const [statusModalVisible, setStatusModalVisible] = useState(false);\r\n// const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n// const statusModalShow = (record) => {\r\n//   setSelectedDocument(record);\r\n//   setStatusModalVisible(true);\r\n// };\r\n\r\n// const statusModalCancel = () => {\r\n//   setSelectedStatus(\"\");\r\n//   setStatusModalVisible(false);\r\n// };\r\n// const [updatedData, setUpdatedData] = useState([]);\r\n\r\n// const handleStatusChange = () => {\r\n//   // Check if the selected document is available\r\n//   if (selectedDocument) {\r\n//     // Perform your logic to update the status here\r\n//     // You can use the selectedStatus along with the record data\r\n//     // to update the status in the data array or make an API call\r\n\r\n//     const updatedRecord = { ...selectedDocument, status: selectedStatus };\r\n\r\n//     // Update the data array with the modified record\r\n//     const updatedDataArray = data.map((item) =>\r\n//       item.id === selectedDocument.id ? updatedRecord : item\r\n//     );\r\n//     console.log(selectedDocument)\r\n//     saveData(selectedDocument.id, { 'status': selectedStatus });\r\n\r\n//     // Load data from the specific key\r\n//     const loadedData = loadData(selectedDocument.id);\r\n//     console.log('status',loadedData);\r\n\r\n//     // Trigger a re-render with the updated data\r\n//     setUpdatedData(updatedDataArray);\r\n\r\n//     // Close the status modal\r\n//     statusModalCancel();\r\n//   }\r\n// };\r\n\r\n\r\n// useEffect(() => {\r\n//   setUser(JSON.parse(localStorage?.getItem(\"user\")));\r\n//   // Fetch data when the component mounts\r\n//   fetchDepartments();\r\n//   fetchProjects();\r\n//   fetchMDR();\r\n//   fetchData();\r\n//   fetchUsers()\r\n// }, [myrecord]); // Add updatedData as a dependency\r\n\r\n// useEffect(() => {\r\n//   // Update the data state with the updatedData\r\n//   setData(updatedData);\r\n// }, [updatedData]);\r\n// const assignDoc = async(assignedEmployees,myrecord)=>{\r\n//   try {\r\n//     console.log(assignedEmployees,\"employees\");\r\n//     console.log('aaaa',myrecord.title);\r\n//     // console.log(allUsers);\r\n//     // const assignedUser = allUsers.find(user => user.id == assignedEmployees)      \r\n//     // console.log(assignedUser);\r\n//     const project = projectOptions.find((item) => item?.value == projectId);\r\n//     const department = departmentOptions.find(\r\n//       (item) => item?.value == departmentId\r\n//     );\r\n//     const response = await axios.put(\r\n//       `https://novacon.live/api/documents/?assignedTo=${assignedEmployees}&assignedBy=${user.user.roleId}&assignedFrom=${user.user.id}&docName=${myrecord.title}`,\r\n//       {},\r\n//       {\r\n//         headers: {\r\n//           Authorization: user?.accessToken,\r\n//           // Add other headers if needed\r\n//         },\r\n//       }\r\n//     );\r\n//     setAssignModalVisible(false)\r\n//     fetchData()\r\n//   } catch (error) {\r\n//     console.error(\"Error assigning documents:\", error);\r\n//   }\r\n// }\r\n\r\n//   return (\r\n//     <>\r\n//     <Modal\r\n//   title=\"Change Status\"\r\n//   width={400}\r\n//   centered\r\n//   visible={statusModalVisible}\r\n//   onCancel={statusModalCancel}\r\n//   footer={null}\r\n//   closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\r\n// >\r\n//   <Row justify=\"space-between\" align=\"center\">\r\n//     <Col span={20}>\r\n//       <Form layout=\"vertical\" name=\"basic\">\r\n//         <Form.Item\r\n//           label=\"Select Status\"\r\n//           name=\"selectedStatus\"\r\n//           rules={[\r\n//             {\r\n//               required: true,\r\n//               message: \"Please select a status\",\r\n//             },\r\n//           ]}\r\n//         >\r\n//           <Select\r\n//             options={[\r\n//               { label: \"In-Progress\", value: \"in-progress\" },\r\n//       { label: \"Hold\", value: \"hold\" },\r\n//       { label: \"Pending Review (In-House)\", value: \"pending-review-in-house\" },\r\n//       { label: \"Pending Approval (In-House)\", value: \"pending-approval-in-house\" },\r\n//       { label: \"Reviewed (In-House)\", value: \"reviewed-in-house\" },\r\n//       { label: \"Approved (In-House)\", value: \"approved-in-house\" },\r\n//       { label: \"Pending Review (Client)\", value: \"pending-review-client\" },\r\n//       { label: \"Pending Endorsement (Client)\", value: \"pending-endorsement-client\" },\r\n//       { label: \"Endorsed (Client)\", value: \"endorsed-client\" },\r\n//       { label: \"Document Ready to Publish\", value: \"ready-to-publish\" },\r\n//             ]}\r\n//             value={selectedStatus}\r\n//             onChange={(value) => setSelectedStatus(value)}\r\n//           />\r\n//         </Form.Item>\r\n//         {/* ... (your existing code) */}\r\n//         <Row>\r\n//           <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n//             <Button\r\n//               block\r\n//               type=\"primary\"\r\n//               htmlType=\"submit\"\r\n//               onClick={() => handleStatusChange(selectedStatus)}\r\n//             >\r\n//               Submit\r\n//             </Button>\r\n//           </Col>\r\n//           <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n//             <Button block onClick={statusModalCancel}>\r\n//               Cancel\r\n//             </Button>\r\n//           </Col>\r\n//         </Row>\r\n//       </Form>\r\n//     </Col>\r\n//   </Row>\r\n// </Modal>\r\n\r\n\r\n// <Modal\r\n//         title=\"Assign Document\"\r\n//         width={400}\r\n//         centered\r\n//         visible={assignModalVisible}\r\n//         onCancel={assignModalCancel}\r\n//         footer={null}\r\n//         closeIcon={\r\n//           <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n//         }\r\n//       >\r\n//         <Row justify=\"space-between\" align=\"center\">\r\n//           <Col span={20}>\r\n//             <Form layout=\"vertical\" name=\"basic\">\r\n//                 <Form.Item\r\n//                 label=\"Assign Document to\"\r\n//                 name=\"assignDoc\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: \"Please Assign Document\",\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//               <Checkbox.Group\r\n//               options={userOption}\r\n//               value={assignedEmployees}\r\n//               onChange={(value) => setAssignedEmployees(value)}\r\n//   />\r\n//                 </Form.Item>\r\n\r\n//               <Row>           \r\n//               <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n//                   <Button block onClick={()=>assignDoc(assignedEmployees,myrecord)} type=\"primary\"htmlType=\"submit\">Assign</Button>\r\n//                 </Col>\r\n              \r\n//               </Row>\r\n//             </Form>\r\n//           </Col>\r\n//         </Row>\r\n//       </Modal>\r\n\r\n\r\n\r\n//       <Modal\r\n//         title=\"Upload Document\"\r\n//         width={1000}\r\n//         centered\r\n//         visible={documentModalVisible}\r\n//         onCancel={documentModalCancel}\r\n//         footer={null}\r\n//         closeIcon={\r\n//           <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n//         }\r\n//       >\r\n//         <Row justify=\"space-between\" align=\"center\">\r\n//           <Col span={15}>\r\n//             <ReactQuill\r\n//               style={{ height: \"300px\" }}\r\n//               theme=\"snow\"\r\n//               value={textEditorValue}\r\n//               onChange={setTextEditorValue}\r\n//             />\r\n//           </Col>\r\n//           <Col span={7}>\r\n//             <Form layout=\"vertical\" name=\"basic\">\r\n//               <Form.Item\r\n//                 label=\"Document Title\"\r\n//                 name=\"docTitle\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: \"Please input your title\",\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Input\r\n//                   value={docTitle}\r\n//                   onChange={(e) => setDocTitle(e.target.value)}\r\n//                 />\r\n//               </Form.Item>\r\n\r\n\r\n//               <Form.Item\r\n//                 label=\"MDR\"\r\n//                 name=\"mdr\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: \"Please select MDR\",\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Select\r\n//                   options={mdrOptions}\r\n//                   value={mdr}\r\n//                   onChange={(value) => setMDR(value)}\r\n//                 />\r\n//               </Form.Item>\r\n\r\n//               <Form.Item\r\n//                 label=\"Project Code\"\r\n//                 name=\"projectCode\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: \"Please select Project Code\",\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Select\r\n//                   options={projectOptions}\r\n//                   value={projectCode}\r\n//                   onChange={(value) => setProjectCode(value)}\r\n//                 />\r\n//               </Form.Item>\r\n\r\n//               <Form.Item\r\n//                 label=\"Area Code\"\r\n//                 name=\"areaCode\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: \"Please select Area Code\",\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Select\r\n//             options={[\r\n//               { label: \"01\", value: \"01\" },\r\n//               { label: \"02\", value: \"02\" },\r\n\r\n//             ]}\r\n//                   value={areaCode}\r\n//                   onChange={(value) => setAreaCode(value)}\r\n//                 />\r\n//               </Form.Item>\r\n\r\n//               <Form.Item\r\n//                 label=\"Department Suffix\"\r\n//                 name=\"deptSuffix\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: \"Please Add Department Suffix\",\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Select\r\n//             options={departmentOptions}\r\n//                   value={deptSuffix}\r\n//                   onChange={(value) => setDeptSuffix(value)}\r\n//                 />\r\n//               </Form.Item>\r\n\r\n//               <Form.Item\r\n//                 label=\"Extension\"\r\n//                 name=\"extension\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: \"Please select Extention\",\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Select\r\n//                   options={[\r\n//                     { value: \".pdf\", label: \".pdf\" },\r\n//                     { value: \".docx\", label: \".docx\" },\r\n//                   ]}\r\n//                   value={extension}\r\n//                   onChange={(value) => setExtension(value)}\r\n//                 />\r\n//               </Form.Item>\r\n\r\n//               {/* <Upload {...uploadProps}>\r\n//                 <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n//               </Upload> */}\r\n//               <input type=\"file\" onChange={handleFile} />\r\n//               <Row>\r\n//                 <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n//                   <Button\r\n//                     block\r\n//                     type=\"primary\"\r\n//                     htmlType=\"submit\"\r\n//                     onClick={() => addDocument()}\r\n//                   >\r\n//                     Submit\r\n//                   </Button>\r\n//                 </Col>\r\n\r\n//                 <Col\r\n//                   md={12}\r\n//                   span={24}\r\n//                   className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\"\r\n//                 >\r\n//                   <Button block onClick={documentModalCancel}>\r\n//                     Cancel\r\n//                   </Button>\r\n//                 </Col>\r\n//               </Row>\r\n//             </Form>\r\n//           </Col>\r\n//         </Row>\r\n//       </Modal>\r\n//       <div style={{ textAlign: \"right\", marginBottom: \"16px\" ,padding:\"15px\", gap:\"15px\"}}>\r\n//         <Button\r\n//           type=\"primary\"\r\n//           onClick={documentModalShow}\r\n//           style={{ marginRight: '10px' }}\r\n\r\n//           disabled={user?.user?.roleId == 3}\r\n//         >\r\n//           Add Documents\r\n//         </Button>\r\n\r\n\r\n//         <Button\r\n//           type=\"primary\"\r\n//           onClick={handleDocumentWiseClick}\r\n//           disabled={user?.user?.roleId == 3}\r\n//           onDoubleClick={handleDoubleClick}\r\n//         >Document Tree\r\n//         </Button>\r\n//       </div>\r\n//       {\r\n//         showTreeView?<MyTreeView />:      <div style={{ overflowX: \"auto\" }}>\r\n//         <Table columns={columns} dataSource={data}  bordered size=\"middle\"\r\n//       title={() => 'All Documents Information'}\r\n//       footer={() => 'You may filter Documents'}/></div>\r\n//       }\r\n      \r\n//       <ProtectedAppPage />      \r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { saveData, loadData, getAllKeys } from '../../storage';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport MyTreeView from \"../treeview/MyTreeView\";\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport {Row,Col,Divider,notification,Form,Menu,Dropdown,Space,Checkbox,Table,Select,Tag,Input,DatePicker,TimePicker,Button,Modal,message,Upload, Tooltip, InputNumber,\r\n} from \"antd\";\r\nimport { Radio } from \"antd\";\r\nimport axios from \"axios\";\r\nimport jsondata from '../initialMDR/data.json';\r\n\r\nimport { RiCloseFill, RiCalendarLine } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport ProtectedAppPage from \"../Protected\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { useRef } from \"react\";\r\nimport { Assignment, DeleteOutlined, OpenInFull } from \"@mui/icons-material\";\r\n\r\n\r\nconst uploadProps = {\r\n  name: \"file\",\r\n  action: \"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\",\r\n  headers: {\r\n    authorization: \"authorization-text\",\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nexport default function Document() {\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item onClick={() => handleAll()}>All</Menu.Item>\r\n      <Menu.Item onClick={() => handleReviewed()}>Reviewed</Menu.Item>\r\n      <Menu.Item onClick={() => handleApproved()}>Approved</Menu.Item>\r\n      <Menu.Item onClick={() => handleCompleted()}>Completed</Menu.Item>\r\n      <Menu.Item onClick={() => handleUploaded()}>Uploaded</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const handleAll=()=>{\r\n    setData(dataArray)\r\n  }\r\n  const handleReviewed=()=>{\r\n    setData(dataArray)\r\n  }\r\n  const handleApproved=()=>{\r\n    setData(dataArray)\r\n  }\r\n  const handleCompleted=()=>{\r\n    const completedData = dataArray.filter(item => item.status === 'completed');\r\n    setData(completedData)\r\n  }\r\n  const handleUploaded=()=>{\r\n    const ongoingData = dataArray.filter(item => item.status === 'ongoing');\r\n    setData(ongoingData)\r\n\r\n  }\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => clearFilters && handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          \r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? '#1677ff' : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n\r\n  const BACKEND_URL = \"https://novacon.live\"; // Update with your backend URL\r\n\r\n  const history = useHistory();\r\n\r\n\r\n\r\n\r\n\r\n  const [assignModalVisible, setAssignModalVisible] = useState(false);\r\n  const [selectedDocument, setSelectedDocument] = useState(null);\r\n  const [documentModalVisible, setDocumentModalVisible] = useState(false);\r\n  const [docTitle, setDocTitle] = useState(\"\");\r\n  const [projectId, setProjectId] = useState(\"\");\r\n  const [departmentId, setDepartmentId] = useState(\"\");\r\n  const [extension, setExtension] = useState(\"\");\r\n  const [mdr, setMDR] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [textEditorValue, setTextEditorValue] = useState(\"\");\r\n  const [departmentOptions, setDepartments] = useState([]);\r\n  const [projectOptions, setProjects] = useState([]);\r\n  const [docTypeOptions, setDocTypeOptions] = useState([]);\r\n\r\n  const [mdrOptions, setMdrData] = useState([]);\r\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n  const [data, setData] = useState([]);\r\n  const [dataArray, setDataArray] = useState([]);\r\n  const [projectCode, setProjectCode] = useState(\"\");\r\n  const [docType, setDocType] = useState(\"\");\r\n  const [count, setCount] = useState(\"\");\r\n\r\n  const [areaCode, setAreaCode] = useState(\"\");\r\n  const [deptSuffix, setDeptSuffix] = useState(\"\");\r\n  const [departments,setDepartment] = useState([])\r\n  const [projects,setProject] = useState([])\r\n  const [showTreeView, setShowTreeView] = useState(false);\r\n  const [userOption, setUserDatalist] = useState([]);\r\n  const [Users, setUsers] = useState();\r\n\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [record, setRecord] = useState(null);\r\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\r\n\r\n  const [myrecord,setMyRecord]=useState({});\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n\r\n  const [form] = Form.useForm();\r\n  const[docuementForm]= Form.useForm()\r\n\r\n\r\n  const handleAddDocument = () => {\r\n    docuementForm.validateFields().then((values) => {\r\n      addDocument()\r\n      docuementForm.resetFields();\r\n    });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Document Code\",\r\n      dataIndex: \"masterDocumentId\",\r\n      key: \"masterDocumentId\",\r\n      ...getColumnSearchProps('masterDocumentId'),\r\n\r\n    },\r\n    {\r\n      title: \"Document Name\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      ...getColumnSearchProps('title'),\r\n\r\n    }, {\r\n      title: \"Version\",\r\n      dataIndex: \"version\",\r\n      key: \"version\",\r\n    },\r\n    // {\r\n    //   title: \".exe\",\r\n    //   dataIndex: \"extension\",\r\n    //   key: \"extension\",\r\n    // },\r\n    {\r\n      title: (\r\n        \"Status\"\r\n      ),\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n  \r\n  filters: [\r\n    {\r\n      text: 'Initialized',\r\n      value: 'Initialized',\r\n    },\r\n        {\r\n          text: 'Reviewed',\r\n          value: 'Reviewed',\r\n        },\r\n        {\r\n          text: 'Approved',\r\n          value: 'Approved',\r\n        },\r\n        {\r\n          text: 'Completed',\r\n          value: 'Completed',\r\n        },\r\n        {\r\n          text: 'Uploaded',\r\n          value: 'Uploaded',\r\n        },\r\n      ],\r\n      onFilter:  (value, record) =>record.status === value,\r\n    },\r\n    {\r\n      title: \"Assigned To\",\r\n      dataIndex: \"assignedToName\",\r\n      key: \"assignedToName\",\r\n      render: (_, record) => {\r\n    \r\n        // Check if assignedToName is already present\r\n        if (record.assignedToName) {\r\n          return record.assignedToName;\r\n        }\r\n    \r\n        // If assignedToName is not present, proceed with splitting and mapping\r\n        const assigned = record.assignedTo;\r\n        const assignedToNames = assigned?.split(\",\");\r\n    \r\n        return (\r\n          assignedToNames && \r\n          <Space size=\"middle\">\r\n            {assignedToNames.map((name, index) => (\r\n              <span key={index}>{Users && Users[name]}</span>\r\n            ))}\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n    \r\n    \r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          {user.user.roleId != 1 ? record.status=='Initialized' || record.status=='Reviewers Rejected' || record.status=='Approvers Rejected'? (\r\n                    <Space size=\"middle\">\r\n\r\n            <input type=\"file\" onChange={(e)=>handleFileChange(e,record)}>\r\n             \r\n\r\n            </input>\r\n\r\n            {/* <Button\r\n            size=\"middle\"\r\n            icon={<Assignment />}\r\n            onClick={() => assignModalShow(record)}\r\n          /> */}\r\n\r\n<Tooltip title=\"Assign Doc\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<Assignment />}\r\n    // disabled={user?.user?.roleId !== 1}\r\n    onClick={() => assignModalShow(record)}\r\n  />\r\n</Tooltip>\r\n\r\n            {/* <a onClick={() => assignModalShow(record)}>Assign Document</a> */}\r\n\r\n            </Space>\r\n\r\n            \r\n          ) : user.user.id == record.assignedTo ?(\r\n            <Space size=\"middle\">\r\n\r\n            {/* <a onClick={() => handleOpen(record)}>Open</a> */}\r\n            <Tooltip title=\"Open\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<OpenInFull />}\r\n    // disabled={user?.user?.roleId !== 1}\r\n    onClick={() => handleOpen(record)}\r\n  />\r\n</Tooltip>\r\n            \r\n            <input type=\"file\" onChange={(e)=>handleFileChange(e,record)}/>\r\n            </Space>\r\n\r\n          ): (\r\n            <>\r\n          {/* <a onClick={() => handleOpen(record)}>Open</a> */}\r\n          <Tooltip title=\"Open\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<OpenInFull />}\r\n    // disabled={user?.user?.roleId !== 1}\r\n    onClick={() => handleOpen(record)}\r\n  />\r\n</Tooltip>\r\n              {/* <a onClick={() => history.push(`/pages/mypdf?documentId=${record.title}`)}>Open</a> */}\r\n              {/* <a onClick={() => statusModalShow(record)}>Add Status</a> */}\r\n            </>\r\n          ):record.status =='Initialized'?              \r\n        //   <Button\r\n        //   size=\"middle\"\r\n        //   icon={<Assignment />}\r\n        //   onClick={() => assignModalShow(record)}\r\n        // />\r\n        <Tooltip title=\"Assign Doc\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<Assignment />}\r\n    // disabled={user?.user?.roleId !== 1}\r\n    onClick={() => assignModalShow(record)}\r\n  />\r\n</Tooltip>\r\n          // <a onClick={() => assignModalShow(record)}>Assign Document</a>\r\n          :(\r\n            <>\r\n        {/* <a onClick={() => handleOpen(record)}>Open</a> */}\r\n        <Tooltip title=\"Open\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<OpenInFull />}\r\n    // disabled={user?.user?.roleId !== 1}\r\n    onClick={() => handleOpen(record)}\r\n  />\r\n</Tooltip>\r\n              {/* <a onClick={() => history.push(`/pages/mypdf?documentId=${record.title}`)}>Open</a> */}\r\n              {/* <a onClick={() => statusModalShow(record)}>Add Status</a> */}\r\n            </>\r\n          )}\r\n          {/* <Button\r\n            size=\"middle\"\r\n            icon={<DeleteOutlined />}\r\n            disabled={user?.user?.roleId !== 1}\r\n            onClick={() => deleteModalShow(record)}\r\n          />\r\n           */}\r\n           <Tooltip title=\"Delete\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<DeleteOutlined />}\r\n    disabled={user?.user?.roleId !== 1}\r\n    onClick={() => deleteModalShow(record)}\r\n  />\r\n</Tooltip>\r\n          {/* <a onClick={() => deleteModalShow(record)} disabled={user?.user?.roleId !== 1}>Delete</a> */}\r\n\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  const handleSubmit = () => {\r\n    form.validateFields().then((values) => {\r\n      assignDoc(assignedEmployees,myrecord)\r\n    form.resetFields();\r\n    });\r\n  };\r\n\r\n  const deleteModalShow = (record) => {\r\n    setRecord(record)\r\n    setDeleteModalVisible(true);\r\n  };\r\n  const deleteModalCancel = () => {\r\n    setDeleteModalVisible(false);\r\n  };\r\n\r\n  const assignModalShow = async (record) => {\r\n    console.log(userOption,'Options');\r\n    \r\n    console.log('recorddddd',record);\r\n    setMyRecord(record);\r\n    console.log('hellloooo',myrecord);\r\n    // fetchUsers();\r\n   \r\n    setAssignModalVisible(true);\r\n\r\n  };\r\n\r\n  const assignModalCancel = () => {\r\n    setAssignModalVisible(false);\r\n  };\r\n\r\n  const handleDoubleClick = () => {\r\n    setShowTreeView(false);\r\n  };\r\n\r\n  const handleDocumentWiseClick = () => {\r\n    console.log(\"clicked\");\r\n    setShowTreeView(true);\r\n  };\r\n\r\n  \r\n  const handleDelete = async (record) => {\r\n    // Your delete logic here\r\n    const id = record.id\r\n    console.log(id);\r\n    const response = await axios.delete(\r\n      `https://novacon.live/api/users?delete=5&recordId=${record.id}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n    message.success(response.data.message)\r\n    deleteModalCancel()\r\n    fetchData()\r\n  \r\n  };\r\n  const documentModalShow = () => {\r\n    setDocumentModalVisible(true);\r\n  };\r\n  const handleOpen = async (record) => {\r\n   const responseData=await fetchAppRev(record.title);\r\n   console.log('helllooo',responseData);\r\n    // Replace 'John' with the actual doc's name\r\n    const docName = record.title;\r\n    const url= `${BACKEND_URL}/uploads/${docName}-${record.version}.pdf` \r\n    console.log(user.user.roleId,user.user.firstName,user);\r\n    let allowed='false';\r\nif(responseData){\r\nallowed='true';\r\n}\r\n\r\ntry {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/documents/checkDocuments?companyId=${user?.user?.companyId}&docName=${record.title}&masterDocumentCode=${record.masterDocumentId}&version=${record.version}&roleId=${user?.user.roleId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      if (response.data.status) {\r\n              console.log(\"response.data.status\");\r\n              \r\n              // Document exists, proceed with redirect\r\n              window.location.href = `https://novacon.live/react-pdf-highlighter/?docName=${record.docName}.pdf&url=${url}&allowed=${allowed}&user=${user.user.roleId} ${user.user.firstName}`;\r\n            } else {\r\n              // Document does not exist, show an alert\r\n              message.warning('Document not uploaded yet.');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error checking document:', error);\r\n            alert('An error occurred while checking the document.');\r\n          }\r\n        };\r\n\r\n  //   // Redirect to the external URL\r\n  //    window.location.href = `https://novacon.live/react-pdf-highlighter/?docName=${docName}.pdf&url=${url}&allowed=${allowed}&user=${user.user.roleId} ${user.user.firstName}`;\r\n  // };\r\n\r\n\r\n  // const handleOpen = async (record) => {\r\n  //   console.log(record, 'record');\r\n    \r\n  //   const responseData = await fetchAppRev(record.title);\r\n  //   console.log('helllooo', responseData);\r\n    \r\n  //   const docName = record.title;\r\n  //   const url = `${BACKEND_URL}/uploads/${record.docName}-${record.version}.pdf`;\r\n  //   console.log(user.user.roleId, user.user.firstName, user);\r\n    \r\n  //   let allowed = 'false';\r\n  //   if (responseData) {\r\n  //     allowed = 'true';\r\n  //   }\r\n  //   console.log(record.version,'version');\r\n  //   const version = record.version\r\n\r\n  //   // Check if the document exists\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `https://novacon.live/api/documents/checkDocuments?companyId=${user?.user?.companyId}&docName=${record.docName}&masterDocumentCode=${record.masterDocumentCode}&version=${record.version}&roleId=${user?.user.roleId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: user?.accessToken,\r\n  //           // Add other headers if needed\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //     console.log(response,response.data.status,\"checkDocuments\");\r\n      \r\n  //     if (response.data.status) {\r\n  //       console.log(\"response.data.status\");\r\n        \r\n  //       // Document exists, proceed with redirect\r\n  //       window.location.href = `https://novacon.live/react-pdf-highlighter/?docName=${record.docName}.pdf&url=${url}&allowed=${allowed}&user=${user.user.roleId} ${user.user.firstName}`;\r\n  //     } else {\r\n  //       // Document does not exist, show an alert\r\n  //       message.warning('Document not uploaded yet.');\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('Error checking document:', error);\r\n  //     alert('An error occurred while checking the document.');\r\n  //   }\r\n  // };\r\n  \r\n  const documentModalCancel = () => {\r\n    setMDR(\"\");\r\n    setDocTitle(\"\");\r\n    setExtension(\"\");\r\n    setProjectId(\"\");\r\n    setDepartmentId(\"\");\r\n    setTextEditorValue(\"\");\r\n    setDocumentModalVisible(false);\r\n  };\r\n  \r\n  const fetchAppRev = async (title) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/documents/establishment?companyId=${user?.user?.companyId}&userId=${user.user.id}&docName=${title}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n        \r\n\r\n\r\n      console.log(response.data,\"received\");\r\n      return response.data;\r\n    \r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  const handleFileChange = async (e, record) => {\r\n    const formData = new FormData();\r\n\r\n    const uploadedFile = e.target.files[0];\r\n    console.log(record);\r\n    const title=record.title;\r\n    console.log(record.title,record.version);\r\n    if (uploadedFile.name === `${record.title}-${record.version}.pdf`) {\r\n      setFile(uploadedFile);\r\nconsole.log(formData,'formdata');\r\n      console.log('Uploaded file:', uploadedFile);\r\n\r\n      const obj = {\r\n        title: title,\r\n        companyId: user?.user?.companyId,\r\n        roleId: user?.user?.roleId,\r\n        userId: user?.user?.id,\r\n        userName: `${user?.user?.firstName} ${user?.user?.lastName}`,\r\n        \"file\": uploadedFile\r\n      };\r\n      Object.entries(obj).forEach(([key, value]) => {\r\n        formData.append(key, value);\r\n      });\r\n      try {\r\n       \r\n       \r\n\r\n        const response = await axios.post(\r\n          `https://novacon.live/api/documents/upload`,        \r\n          formData,\r\n          {\r\n            headers: {\r\n              Authorization: user?.accessToken,\r\n              // Add other headers if needed\r\n            },\r\n          }\r\n        );\r\n        // Handle the response as needed\r\n        console.log(response);\r\n        message.success(response?.data?.message);\r\n       \r\n      } catch (error) {\r\n        // Handle errors\r\n  \r\n        message.error(error);\r\n      }\r\n\r\n    } else {\r\n      // Show an error message or take appropriate action\r\n      message.error('File name does not match '+ record.title);\r\n      // Clear the file input field\r\n      e.target.value = null;\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n\r\n    \r\n    try {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/users?companyId=${user?.user?.companyId}&roleId=2`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      console.log(response?.data, \"Users\");\r\n      const option = [];\r\n      let options = {}\r\n\r\n      let role='';\r\n      console.log(\"uuuu\",user?.user.roleId,user?.user.companyId,user?.user.id);\r\nif(user.user.roleId == 1){\r\n\r\n  for (const item of response?.data) {\r\n    console.log(myrecord,myrecord.departmentId,item.departmentId,\"data\");\r\n    options[item.id] = `${item.firstName}`\r\n  //  if(item.roleId ==2  && myrecord.departmentId.indexOf(item.departmentId) !== -1){\r\n    if(item.roleId ==2){\r\n\r\n    role =`Head of ${item.department}`\r\n    option.push({\r\n      value:item?.id,\r\n      label: `${item?.firstName} ${role} `,\r\n    });\r\n } \r\n\r\n   } }\r\nif(user.user.roleId==2 ){\r\n      for (const item of response?.data) {\r\n       if(item.roleId==3 && item.departmentId==user.user.departmentId){\r\n        role =`Senior Engineer ${item.department}`\r\n        option.push({\r\n          value:item?.id,\r\n          label: `${item?.firstName} ${role} `,\r\n        });\r\n     } \r\n       } }\r\n       if(user.user.roleId==3){\r\n        for (const item of response?.data) {\r\n         if(item.roleId==3 && item.departmentId==user.user.departmentId){\r\n          role =`Senior Engineer ${item.department}`\r\n          option.push({\r\n            value:item?.id,\r\n            label: `${item?.firstName} ${role} `,\r\n          });\r\n       } \r\n       if(item.roleId==4 && item.departmentId==user.user.departmentId){\r\n         role = `Junior ${item.department}`\r\n         option.push({\r\n          value:item?.id,\r\n          label: `${item?.firstName} ${role} `,\r\n        });\r\n      }\r\n      if(item.roleId==5 && item.departmentId==user.user.departmentId){\r\n        role ='Designer/Draughtsmen'\r\n        option.push({\r\n          value:item?.id,\r\n          label: `${item?.firstName} ${role} `,\r\n        });\r\n     } \r\n         } }\r\n         console.log(\"option\",option);\r\n      setUserDatalist(option);\r\n      setUsers(options)\r\n       // Assuming the response.data is an array of DocumentPermissions\r\n    } catch (error) {\r\n      console.error(\"Error fetching Users:\", error?.message);\r\n    }\r\n  };\r\n\r\n  const handleFile = (e) => {\r\n    const uploadedFile = e.target.files[0];\r\n    \r\n      setFile(uploadedFile);\r\n      console.log('Uploaded file:', uploadedFile);\r\n   \r\n  };\r\n\r\n\r\n  const addDocument = async () => {\r\n    if (!docTitle || !mdr ||!projectCode ||!areaCode ||!docType|| !deptSuffix ) {\r\n      // If any required field is missing, display a validation error notification\r\n      notification.error({\r\n        message: 'Validation Error',\r\n        description: 'Please fill in all required fields.',\r\n        style: {\r\n          backgroundColor: '#f5222d', // Red color background\r\n          color: '#fff', // White text color\r\n        },\r\n      });\r\n      return; // Exit early if validation fails\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        `https://novacon.live/api/documents/addingDoc`,        \r\n        {\r\n          title: docTitle,\r\n          masterDocumentCode: mdr,\r\n          projectCode:projectCode,\r\n          areaCode:areaCode,\r\n          docType:docType,\r\n          deptSuffix:deptSuffix,\r\n          companyId: user?.user?.companyId,\r\n          roleId: user?.user?.roleId,\r\n          userId: user?.user?.id,\r\n          userName: `${user?.user?.firstName} ${user?.user?.lastName}`,\r\n          count,\r\n\r\n        },        \r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      // Handle the response as needed\r\n      console.log(response,'responses');\r\n      message.success(response?.data?.message);\r\n      await fetchData();\r\n      documentModalCancel();\r\n    } catch (error) {\r\n      if (error?.message == \"Request failed with status code 403\") {\r\n        message.error(\"Permission Denied to create document on this MDR\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    \r\n    try {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/documents?companyId=${user?.user?.companyId}&assignedBy=${user.user.roleId}&userId=${user.user.id}&department=${user.user.departmentId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n        \r\n      console.log(response.data,\"received\");\r\n      const data = response.data\r\n      console.log(data,'dat');\r\n      const filter = data.filter(item  => item.removed == 0)\r\n      console.log(filter,'filter');\r\n      setDataArray([...filter])\r\n      setData([...filter]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  \r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/departments?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      setDepartment(response.data)\r\n      const options = [];\r\n      for (const item of response?.data) {\r\n        options.push({ value: item?.suffix, label: item?.suffix });\r\n      }\r\n      setDepartments(options); // Assuming the response.data is an array of projects\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/projects?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      setProject(response.data)\r\n      const options = [];\r\n      for (const item of response?.data) {\r\n        options.push({ value: item?.code, label: item?.code });\r\n      }\r\n      setProjects(options); // Assuming the response.data is an array of projects\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n\r\n  const fetchMDRIndividual = async (projectCode) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://novacon.live/api/documents/mdr?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      const options = [];\r\n      for (const item of response?.data ) {\r\n        if(item.projectCode == projectCode){\r\n          options.push({\r\n            value: item?.mdrCode,\r\n            label: item?.title,\r\n          });\r\n        }\r\n      }\r\n\r\n      setMdrData(options); // Assuming the response.data is an array of projects\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n\r\n  const fetchDocType = async (departmentSuffix) => {\r\n    try {\r\n      \r\n      const matchingDocuments = jsondata.filter(doc => doc.departmentCode === departmentSuffix);\r\n      \r\n      // If documents are found, return the document codes (or other relevant details)\r\n      if (matchingDocuments.length > 0) {\r\n        const options = [];\r\n        for (const item of matchingDocuments) {\r\n          options.push({ value: item?.documentContentCode, label: `${item.documentTitle} (${item.documentContentCode})` });\r\n      }\r\n      setDocTypeOptions(options); // Assuming the response.data is an array of projects\r\n        return matchingDocuments.map(doc => doc.documentContentCode); // Return the 'document' field\r\n      } else {\r\n        throw new Error(\"No documents found for the specified department code\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching document codes:\", error?.message);\r\n    }\r\n  };\r\n  \r\n  // Example usage:\r\n  \r\n  \r\n  const [statusModalVisible, setStatusModalVisible] = useState(false);\r\nconst [selectedStatus, setSelectedStatus] = useState(\"\");\r\nconst statusModalShow = (record) => {\r\n  setSelectedDocument(record);\r\n  setStatusModalVisible(true);\r\n};\r\n\r\nconst statusModalCancel = () => {\r\n  setSelectedStatus(\"\");\r\n  setStatusModalVisible(false);\r\n};\r\nconst [updatedData, setUpdatedData] = useState([]);\r\n\r\nconst handleStatusChange = () => {\r\n  // Check if the selected document is available\r\n  if (selectedDocument) {\r\n    // Perform your logic to update the status here\r\n    // You can use the selectedStatus along with the record data\r\n    // to update the status in the data array or make an API call\r\n\r\n    const updatedRecord = { ...selectedDocument, status: selectedStatus };\r\n\r\n    // Update the data array with the modified record\r\n    const updatedDataArray = data.map((item) =>\r\n      item.id === selectedDocument.id ? updatedRecord : item\r\n    );\r\n    console.log(selectedDocument)\r\n    saveData(selectedDocument.id, { 'status': selectedStatus });\r\n\r\n    // Load data from the specific key\r\n    const loadedData = loadData(selectedDocument.id);\r\n    console.log('status',loadedData);\r\n\r\n    // Trigger a re-render with the updated data\r\n    setUpdatedData(updatedDataArray);\r\n\r\n    // Close the status modal\r\n    statusModalCancel();\r\n  }\r\n};\r\n\r\nconst handleProjectCodeChange = (value) => {\r\n  setProjectCode(value);\r\n  fetchMDRIndividual(value); // Fetch MDR options filtered by project code\r\n};\r\n\r\nconst handledepartmentSuffixChange = (value) => {\r\n  setDeptSuffix(value);\r\n  fetchDocType(value); // Fetch MDR options filtered by project code\r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  setUser(JSON.parse(localStorage?.getItem(\"user\")));\r\n  // Fetch data when the component mounts\r\n  fetchDepartments();\r\n  fetchProjects();\r\n  // fetchDocType(\"PM\").then(documentCodes => {\r\n  //   console.log(\"Fetched Document Codes:\", documentCodes);\r\n  // });\r\n  fetchUsers()\r\n\r\n  fetchData();\r\n}, [myrecord]); // Add updatedData as a dependency\r\n\r\nuseEffect(() => {\r\n  // Update the data state with the updatedData\r\n  setData(updatedData);\r\n}, [updatedData]);\r\nconst assignDoc = async(assignedEmployees,myrecord)=>{\r\n  try {\r\n    console.log(assignedEmployees,\"employees\");\r\n    console.log('aaaa',myrecord.title);\r\n    // console.log(allUsers);\r\n    // const assignedUser = allUsers.find(user => user.id == assignedEmployees)      \r\n    // console.log(assignedUser);\r\n    const project = projectOptions.find((item) => item?.value == projectId);\r\n    const department = departmentOptions.find(\r\n      (item) => item?.value == departmentId\r\n    );\r\n    const response = await axios.put(\r\n      `https://novacon.live/api/documents/?assignedTo=${assignedEmployees}&assignedBy=${user.user.roleId}&assignedFrom=${user.user.id}&companyId=${user.user.companyId}&docName=${myrecord.title}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n    setAssignModalVisible(false)\r\n    fetchData()\r\n  } catch (error) {\r\n    console.error(\"Error assigning documents:\", error);\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n    <Modal\r\n  title=\"Change Status\"\r\n  width={400}\r\n  centered\r\n  visible={statusModalVisible}\r\n  onCancel={statusModalCancel}\r\n  footer={null}\r\n  closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\r\n>\r\n  <Row justify=\"space-between\" align=\"center\">\r\n    <Col span={20}>\r\n      <Form layout=\"vertical\" name=\"basic\">\r\n        <Form.Item\r\n          label=\"Select Status\"\r\n          name=\"selectedStatus\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select a status\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            options={[\r\n              { label: \"In-Progress\", value: \"in-progress\" },\r\n      { label: \"Hold\", value: \"hold\" },\r\n      { label: \"Pending Review (In-House)\", value: \"pending-review-in-house\" },\r\n      { label: \"Pending Approval (In-House)\", value: \"pending-approval-in-house\" },\r\n      { label: \"Reviewed (In-House)\", value: \"reviewed-in-house\" },\r\n      { label: \"Approved (In-House)\", value: \"approved-in-house\" },\r\n      { label: \"Pending Review (Client)\", value: \"pending-review-client\" },\r\n      { label: \"Pending Endorsement (Client)\", value: \"pending-endorsement-client\" },\r\n      { label: \"Endorsed (Client)\", value: \"endorsed-client\" },\r\n      { label: \"Document Ready to Publish\", value: \"ready-to-publish\" },\r\n            ]}\r\n            value={selectedStatus}\r\n            onChange={(value) => setSelectedStatus(value)}\r\n          />\r\n        </Form.Item>\r\n        {/* ... (your existing code) */}\r\n        <Row>\r\n          <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n            <Button\r\n              block\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => handleStatusChange(selectedStatus)}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n          <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n            <Button block onClick={statusModalCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Col>\r\n  </Row>\r\n</Modal>\r\n<Modal\r\n  title=\"Delete Project\"\r\n  width={416}\r\n  centered\r\n  visible={deleteModalVisible}\r\n  onCancel={deleteModalCancel}\r\n  footer={null}\r\n  closeIcon={\r\n    <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n  }\r\n>\r\n  <div>\r\n    <p>Are you sure you want to delete this?</p>\r\n  </div>\r\n  <Row>\r\n    <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n      <Button\r\n        block\r\n        type=\"primary\"\r\n        danger\r\n        onClick={() => handleDelete(record)}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Col>\r\n    <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n      <Button block onClick={deleteModalCancel}>\r\n        Cancel\r\n      </Button>\r\n    </Col>\r\n  </Row>\r\n</Modal>\r\n\r\n<Modal\r\n        title=\"Assign Document\"\r\n        width={400}\r\n        centered\r\n        visible={assignModalVisible}\r\n        onCancel={assignModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Row justify=\"space-between\" align=\"center\">\r\n          <Col span={20}>\r\n            <Form form={form} onFinish={handleSubmit} layout=\"vertical\" name=\"basic\">\r\n                <Form.Item\r\n                label=\"Assign Document to\"\r\n                name=\"assignDoc\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please Assign Document\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Checkbox.Group\r\n              options={userOption}\r\n              value={assignedEmployees}\r\n              onChange={(value) => setAssignedEmployees(value)}\r\n  />\r\n                </Form.Item>\r\n\r\n              <Row>           \r\n              <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n                  <Button block \r\n                  // onClick={()=>assignDoc(assignedEmployees,myrecord)} \r\n                  type=\"primary\"htmlType=\"submit\">Assign</Button>\r\n                </Col>\r\n              \r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n\r\n\r\n\r\n      <Modal\r\n  title=\"Upload Document\"\r\n  width={1000}\r\n  centered\r\n  visible={documentModalVisible}\r\n  onCancel={documentModalCancel}\r\n  footer={null}\r\n  closeIcon={\r\n    <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n  }\r\n>\r\n  <Row justify=\"space-between\" align=\"center\">\r\n    <Col span={15}>\r\n      <ReactQuill\r\n        style={{ height: \"300px\" }}\r\n        theme=\"snow\"\r\n        value={textEditorValue}\r\n        onChange={setTextEditorValue}\r\n      />\r\n    </Col>\r\n    <Col span={7}>\r\n      <Form layout=\"vertical\" name=\"basic\" form={docuementForm} onFinish={handleAddDocument}>\r\n        <Form.Item\r\n          label=\"Document Title\"\r\n          name=\"docTitle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your title\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            value={docTitle}\r\n            onChange={(e) => setDocTitle(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Project Code\"\r\n          name=\"projectCode\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select Project Code\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            options={projectOptions}\r\n            value={projectCode}\r\n            onChange={handleProjectCodeChange}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"MDR\"\r\n          name=\"mdr\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select MDR\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            options={mdrOptions}\r\n            value={mdr}\r\n            onChange={(value) => setMDR(value)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Area Code\"\r\n          name=\"areaCode\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select Area Code\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            options={[\r\n              { label: \"01\", value: \"01\" },\r\n              { label: \"02\", value: \"02\" },\r\n            ]}\r\n            value={areaCode}\r\n            onChange={(value) => setAreaCode(value)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Department Suffix\"\r\n          name=\"deptSuffix\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please Add Department Suffix\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            options={departmentOptions}\r\n            value={deptSuffix}\r\n            onChange={handledepartmentSuffixChange}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Document Type\"\r\n          name=\"docType\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please Add Document Type\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            options={docTypeOptions}\r\n            value={docType}\r\n            onChange={(value) => setDocType(value)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Count\"\r\n          name=\"count\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the count\",\r\n            },\r\n            {\r\n              type: \"number\",\r\n              min: 1,\r\n              message: \"Count must be at least 1\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            min={1}\r\n            value={count}\r\n            onChange={(value) => setCount(value)}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Row>\r\n          <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n            <Button\r\n              block\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col\r\n            md={12}\r\n            span={24}\r\n            className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\"\r\n          >\r\n            <Button block onClick={documentModalCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Col>\r\n  </Row>\r\n</Modal>\r\n\r\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" ,padding:\"15px\", gap:\"15px\"}}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={documentModalShow}\r\n          style={{ marginRight: '10px' }}\r\n\r\n          disabled={user?.user?.roleId == 3}\r\n        >\r\n          Add Documents\r\n        </Button>\r\n\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleDocumentWiseClick}\r\n          onDoubleClick={handleDoubleClick}\r\n        >Document Tree\r\n        </Button>\r\n      </div>\r\n      {\r\n        showTreeView?<MyTreeView />:      <div style={{ overflowX: \"auto\" }}>\r\n        <Table columns={columns} dataSource={data}  bordered size=\"middle\"\r\n      title={() => 'All Documents Information'}\r\n      footer={() => 'You may filter Documents'}/></div>\r\n      }\r\n      \r\n      <ProtectedAppPage />      \r\n    </>\r\n  );\r\n}\r\n","// Storage.js\r\n\r\n// Save data to a cookie\r\nexport const saveData = (key, newData) => {\r\n    // Load existing data from the cookie\r\n    const existingData = loadData(key) || {};\r\n  \r\n    // Merge existing data with new data\r\n    const mergedData = { ...existingData, ...newData };\r\n  \r\n    // Save the merged data to the cookie\r\n    document.cookie = `${key}=${JSON.stringify(mergedData)}; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\r\n  };\r\n  \r\n  // Load data from a cookie\r\n  export const loadData = (key) => {\r\n    const cookieData = document.cookie\r\n      .split('; ')\r\n      .find((cookie) => cookie.startsWith(`${key}=`));\r\n  \r\n    return cookieData ? JSON.parse(cookieData.split('=')[1]) : null;\r\n  };\r\n  \r\n  // Get all keys from cookies\r\n  export const getAllKeys = (prefix) => {\r\n    return document.cookie\r\n      .split('; ')\r\n      .map((cookie) => cookie.split('=')[0])\r\n      .filter((key) => key.startsWith(prefix));\r\n  };\r\n  "],"names":["ProtectedAppPage","_localStorage","isLogIn","localStorage","getItem","console","log","_jsx","Redirect","to","useStyles","makeStyles","root","flexGrow","maxWidth","projectNode","backgroundColor","fontSize","padding","borderRadius","marginBottom","transition","fontWeight","mdrNode","marginLeft","departmentIdNode","titleNode","icon","marginRight","buttonContainer","display","alignItems","marginTop","status","MyTreeView","_user$user2","information","setInformation","useState","user","JSON","parse","data","setData","useEffect","isMounted","async","_user$user","response","axios","companyId","headers","Authorization","accessToken","error","message","fetchInformation","processData","length","newData","forEach","info","title","mdrs","mdr","_mdr$departmentName$s","_mdr$departmentName","_mdr$documents","_info$departmentSuffi","_info$departmentSuffi2","departmentNames","departmentName","split","documents","departmentSuffixes","departmentSuffix","index","_departmentSuffixes$i","trimmedDepartmentName","trim","trimmedSuffix","document","trimmedTitle","includes","push","docTitle","version","classes","fetchAppRev","_user$user4","id","className","children","TreeView","defaultCollapseIcon","FolderIcon","defaultExpandIcon","FolderOpenIcon","defaultEndIcon","DescriptionIcon","Object","entries","map","_ref","projectId","TreeItem","nodeId","label","sx","_ref2","departments","FolderSpecialIcon","_ref3","department","_jsxs","Button","onClick","alert","responseData","url","roleId","firstName","allowed","_user$user3","window","location","href","record","docName","warning","handleOpenDocument","variant","color","size","Document","_user$user19","Menu","Item","handleAll","dataArray","handleReviewed","handleApproved","handleCompleted","completedData","filter","item","handleUploaded","ongoingData","handleSearch","selectedKeys","confirm","dataIndex","setSearchText","setSearchedColumn","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","close","style","Input","ref","searchInput","placeholder","value","onChange","e","target","onPressEnter","Space","type","SearchOutlined","width","handleReset","filterIcon","filtered","undefined","onFilter","toString","toLowerCase","onFilterDropdownOpenChange","visible","setTimeout","_searchInput$current","current","select","render","text","searchedColumn","Highlighter","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","assignModalVisible","setAssignModalVisible","useHistory","selectedDocument","setSelectedDocument","documentModalVisible","setDocumentModalVisible","setDocTitle","setProjectId","departmentId","setDepartmentId","extension","setExtension","setMDR","file","setFile","textEditorValue","setTextEditorValue","departmentOptions","setDepartments","projectOptions","setProjects","docTypeOptions","setDocTypeOptions","mdrOptions","setMdrData","setUser","setDataArray","projectCode","setProjectCode","docType","setDocType","count","setCount","areaCode","setAreaCode","deptSuffix","setDeptSuffix","setDepartment","projects","setProject","showTreeView","setShowTreeView","userOption","setUserDatalist","Users","setUsers","assignedEmployees","setAssignedEmployees","setRecord","deleteModalVisible","setDeleteModalVisible","myrecord","setMyRecord","useRef","form","Form","useForm","docuementForm","columns","key","filters","_","assignedToName","assigned","assignedTo","assignedToNames","name","handleFileChange","Tooltip","Assignment","assignModalShow","OpenInFull","handleOpen","_Fragment","DeleteOutlined","disabled","deleteModalShow","deleteModalCancel","masterDocumentId","documentModalCancel","formData","FormData","uploadedFile","files","_user$user5","_user$user6","_user$user7","_user$user8","obj","userId","userName","lastName","append","_response$data","success","addDocument","_user$user10","_user$user11","_user$user12","_user$user13","_user$user14","_response$data2","masterDocumentCode","fetchData","notification","description","_user$user15","removed","statusModalVisible","setStatusModalVisible","selectedStatus","setSelectedStatus","statusModalCancel","updatedData","setUpdatedData","_localStorage2","_user$user16","options","suffix","fetchDepartments","_user$user17","code","fetchProjects","_user$user9","option","role","fetchUsers","assignDoc","find","Modal","centered","onCancel","footer","closeIcon","RiCloseFill","Row","justify","align","Col","span","layout","rules","required","Select","md","block","htmlType","handleStatusChange","updatedRecord","updatedDataArray","saveData","loadedData","loadData","danger","handleDelete","assignModalCancel","onFinish","handleSubmit","validateFields","then","values","resetFields","Checkbox","Group","ReactQuill","height","theme","handleAddDocument","_user$user18","mdrCode","fetchMDRIndividual","matchingDocuments","jsondata","doc","departmentCode","documentContentCode","documentTitle","Error","fetchDocType","min","InputNumber","textAlign","gap","documentModalShow","handleDocumentWiseClick","onDoubleClick","handleDoubleClick","overflowX","Table","dataSource","bordered","mergedData","cookie","stringify","cookieData","startsWith"],"sourceRoot":""}