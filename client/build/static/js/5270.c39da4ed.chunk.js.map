{"version":3,"file":"static/js/5270.c39da4ed.chunk.js","mappings":"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","sources":["view/pages/authentication/login/splashScreen.jsx","view/pages/authentication/login/index.jsx"],"sourcesContent":["import React from 'react';\nimport { Row, Col } from 'antd';\nimport novacon from \"../../../../assets/images/logo/novacon.jpg\";\n\nconst SplashScreen = () => {\n  return (\n    <Row\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        backgroundColor: 'white', // Background color\n      }}\n    >\n      <Col>\n        {/* Your logo and tagline */}\n        <img \n          src={novacon} \n          alt=\"Logo\" \n          style={{\n            width: '180px',\n            margin:\"18px\", \n            height: 'auto', \n            animation: 'scaleAnimation 1s infinite alternate', // Animation effect\n            cursor: 'pointer' // Optional: Change cursor to indicate interactivity\n          }} \n        />\n        <h1 style={{ marginTop: '16px', color: '#333',fontSize:\"64px\" }}>Project Prosperity, Simplified.</h1>\n      </Col>\n      <style>\n        {`\n          @keyframes scaleAnimation {\n            from {\n              transform: scale(0.9);\n            }\n            to {\n              transform: scale(1.25);\n            }\n          }\n        `}\n      </style>\n    </Row>\n  );\n};\n\nexport default SplashScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SplashScreen from \"./splashScreen\";\nimport { Row, Col, Form, Input, Button, Checkbox, message, Spin } from \"antd\";\nimport axios from \"axios\";\nimport LeftContent from \"../leftContent\";\nimport Footer from \"../footer\";\nimport { loginUser } from \"../../../../redux/auth/authActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state);\n  console.log(auth);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const loading = useSelector((state) => state.auth.loading);\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  const [showSplashScreen, setShowSplashScreen] = useState(true);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push(\"/\");\n    }\n  }, [isLoggedIn,history]);\n  useEffect(() => {\n    // Hide the splash screen after 3 seconds\n    const splashScreenTimeout = setTimeout(() => {\n      setShowSplashScreen(false);\n    }, 2000);\n\n    // Cleanup the timeout to avoid memory leaks\n    return () => clearTimeout(splashScreenTimeout);\n  }, []);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const onFinishFailed = () => {\n    message.error(\"Submit failed!\");\n  };\n\n  const login = async () => {\n    // await dispatch(loginUser({ email, password }));\n    try {\n      // Make the POST request using Axios with async/await\n      const response = await axios.post(\n        \"http://54.81.250.98:8083/api/auth/signin\",\n        {\n          email,\n          password,\n        }\n      );\n\n      // Handle success, you can access the response data in the 'data' property\n      console.log(\"Response:\", response);\n\n      if (response?.data) {\n        console.log(response?.data);\n        localStorage.setItem(\"user\", JSON.stringify(response?.data));\n        \n        message.success(\"Signed In Successfully \");\n        history.push(\"/pages/workspace\");\n      }\n      // message.success(\"Registered\");\n    } catch (error) {\n      // Handle error, you can access the error information in the 'response' property\n      if (error?.message == \"Request failed with status code 404\") {\n        message.error(\"User Not found.\");\n      } else if (error?.message == \"Request failed with status code 401\") {\n        message.error(\"Invalid Password.\");\n      } else {\n        message.error(\"Some Error Occured.\");\n      }\n      console.error(\"Error:\", error?.message);\n    }\n  };\n  return (\n    <>\n    {showSplashScreen ? (\n      <SplashScreen />\n    ) : (\n      <>\n    <Row gutter={[6, 0]} className=\"hp-authentication-page\">\n      \n      <LeftContent />\n\n      <Col lg={12} span={24} className=\"hp-py-sm-0 hp-py-md-64\">\n        <Row className=\"hp-h-100\" align=\"middle\" justify=\"center\">\n          <Col\n            xxl={11}\n            xl={15}\n            lg={20}\n            md={20}\n            sm={24}\n            className=\"hp-px-sm-8 hp-pt-24 hp-pb-48\"\n          >\n            <h1 className=\"hp-mb-sm-0\" style={{textAlign:\"center\",fontWeight:\"bold\"}}>Login</h1>\n            <p className=\"hp-mt-sm-0 hp-mt-8 hp-text-color-black-60\" style={{textAlign:\"center\"}}>\n              {/* Welcome back, please login to your account.\n               */}\n              <FormattedMessage id=\"login-welcome-back\" />\n            </p>\n\n            <Form\n              layout=\"vertical\"\n              name=\"basic\"\n              initialValues={{ remember: true }}\n              className=\"hp-mt-sm-16 hp-mt-32\"\n              onFinish={login}\n              form={form}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                label=\"Email :\"\n                className=\"hp-mb-16\"\n                name=\"email\"\n                rules={[\n                  {\n                    type: \"email\",\n                    message: \"The input is not valid E-mail!\",\n                  },\n                  {\n                    required: true,\n                    message: \"Please input your E-mail!\",\n                  },\n                ]}\n              >\n                <Input\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Password :\"\n                className=\"hp-mb-8\"\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input.Password\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Item>\n\n              <Row align=\"middle\" justify=\"space-between\">\n                <Form.Item className=\"hp-mb-0\">\n                  <Checkbox name=\"remember\">\n                    <FormattedMessage id=\"remember-me\" />\n                  </Checkbox>\n                </Form.Item>\n\n                <Link\n                  className=\"hp-button hp-text-color-black-80 hp-text-color-dark-40\"\n                  to=\"/pages/authentication/recover-password\"\n                >\n                  <FormattedMessage id=\"forgot-password\" />\n                </Link>\n              </Row>\n              {/* {loading && <Spin />} */}\n\n              <Form.Item className=\"hp-mt-16 hp-mb-8\">\n                {/* <Link to=\"/\"> */}\n                <Button\n                  loading={loading}\n                  block\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Sign in\n                </Button>\n                {/* </Link> */}\n              </Form.Item>\n            </Form>\n\n            <Col className=\"hp-form-info hp-text-center\">\n              <span className=\"hp-text-color-black-80 hp-text-color-dark-40 hp-caption hp-font-weight-400 hp-mr-4\">\n                {/* Don’t you have an account? */}\n                <FormattedMessage id=\"login-have-account\" />\n              </span>\n\n              <Link\n                className=\"hp-text-color-primary-1 hp-text-color-dark-primary-2 hp-caption\"\n                to=\"/pages/authentication/register\"\n              >\n                {/* Create an account */}\n                <FormattedMessage id=\"create-an-account\" />\n              </Link>\n            </Col>\n\n            <Footer />\n          </Col>\n        </Row>\n      </Col>\n      \n    </Row></>)}\n    </>\n  );\n}\n"],"names":["SplashScreen","_jsxs","Row","style","height","display","justifyContent","alignItems","textAlign","backgroundColor","children","Col","_jsx","src","novacon","alt","width","margin","animation","cursor","marginTop","color","fontSize","Login","useDispatch","auth","useSelector","state","console","log","form","Form","useForm","history","useHistory","loading","isLoggedIn","showSplashScreen","setShowSplashScreen","useState","useEffect","push","splashScreenTimeout","setTimeout","clearTimeout","email","setEmail","password","setPassword","_Fragment","gutter","className","LeftContent","lg","span","align","justify","xxl","xl","md","sm","fontWeight","FormattedMessage","id","layout","name","initialValues","remember","onFinish","async","response","axios","data","localStorage","setItem","JSON","stringify","message","success","error","onFinishFailed","Item","label","rules","type","required","Input","value","onChange","e","target","Password","Checkbox","Link","to","Button","block","htmlType","Footer"],"sourceRoot":""}