{"version":3,"file":"static/js/2151.963375b2.chunk.js","mappings":"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","sources":["view/pages/Protected.jsx","view/pages/mdr/Progress.jsx","view/pages/mdr/index.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nconst ProtectedAppPage = () => {\n  const isLogIn = localStorage?.getItem(\"user\");\n  console.log(isLogIn, \"loggin\");\n  if (!isLogIn) {\n    return <Redirect to=\"/pages/authentication/login\" />;\n  }\n\n  return null;\n};\nexport default ProtectedAppPage;\n","import React from 'react';\nimport { Progress, Row } from 'antd';\n\nconst ProgressComp = ({ percentage }) => {\n  let strokeColor = '#ff0000'; // Default color is red\n  if (percentage > 75) {\n    strokeColor = '#1890ff'; // Blue for percent > 75\n  } else if (percentage > 50) {\n    strokeColor = '#fadb14'; // Yellow for percent > 50\n  }\n\n  return (\n    <Row justify=\"center\" align=\"middle\" style={{ width: 180 }}>\n      <Progress percent={percentage} steps={5} strokeColor={strokeColor} />\n    </Row>\n  );\n};\n\nexport default ProgressComp;\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useHistory } from 'react-router-dom'; \r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nimport {\r\n  notification,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Dropdown,\r\n  Form,\r\n  Space,\r\n  Table,\r\n  Menu,\r\n  Select,\r\n  Tag,\r\n  Input,\r\n  DatePicker,\r\n  TimePicker,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Upload,\r\n  Checkbox,\r\n  Typography\r\n} from \"antd\";\r\nconst { Title, Text } = Typography;\r\nconst imageUrl = '..//..//..//assets/images/logo/novacon.png'\r\nimport { Radio } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { RiCloseFill, RiCalendarLine } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ProtectedAppPage from \"../Protected\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { string } from \"prop-types\";\r\nimport ProgressComp from \"./Progress\";\r\n\r\n\r\n\r\nconst uploadProps = {\r\n  name: \"file\",\r\n  action: \"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\",\r\n  headers: {\r\n    authorization: \"authorization-text\",\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nexport default function MDR() {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n\r\n  const [documentModalVisible, setDocumentModalVisible] = useState(false);\r\n  const [assignModalVisible, setAssignModalVisible] = useState(false);\r\n  const [createModalVisible, setCreateModalVisible] = useState(false);\r\n  const [showModalVisible, setShowModalVisible] = useState(false);\r\n  const [editModalVisible, setEditModalVisible] = useState(false);\r\n\r\n  const [params,setParams] = useState()\r\n\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [projectId, setProjectId] = useState(\"\");\r\n  const [departmentId, setDepartmentId] = useState(\"\");\r\n  const [mdrCode, setMdrCode] = useState(\"\");\r\n  const [noOfDocuments, setNoOfDocuments] = useState(\"\");\r\n  const [pro, setPro] = useState([]);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [projectOptions, setProjects] = useState([]);\r\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n  const [data, setData] = useState([]);\r\n  const [dataArray, setDataArray] = useState([]);\r\n\r\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\r\n  const [selectedReviewer, setSelectedReviewer] = useState([]);\r\n  const [docData, setDocData] = useState([]);\r\n\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [selectedApprover, setSelectedApprover] = useState([]);\r\n  const[allUsers,setAllUsers] = useState([])\r\n  const [mdrTemplateVisible, setMdrTemplateVisible] = useState(false);\r\n  const [departmentOptions,setDepartmentOptions] = useState([])\r\n\r\n  const [departmentOption,setDepartmentOption] = useState([])\r\n  const [userOptions, setUserData] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [userOption, setUserDatalist] = useState([]);\r\n  const [record,setRecord] = useState()\r\n  const [recordMdr,setRecordMdr] = useState()\r\n\r\n  const [projectCode,setProjectCode] = useState()\r\n  const location = useLocation();\r\n  const { matchingRecord } = location.state || {}\r\n  // console.log(matchingRecord,\"recordinggggg\");\r\n  // console.log(location,\"location\");\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n\r\n  const handleAll=()=>{\r\n    setData(dataArray)\r\n  }\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => clearFilters && handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? '#1677ff' : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  const handleCompleted=()=>{\r\n    const completedData = dataArray.filter(item => item.status === 'completed');\r\n    setData(completedData)\r\n  }\r\n  const handleOnGoing=()=>{\r\n    const ongoingData = dataArray.filter(item => item.status === 'Ongoing');\r\n    setData(ongoingData)\r\n\r\n  }\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item onClick={() => handleAll()}>All</Menu.Item>\r\n    <Menu.Item onClick={() => handleCompleted()}>Completed</Menu.Item>\r\n    <Menu.Item onClick={() => handleOnGoing()}>Ongoing</Menu.Item>\r\n  </Menu>\r\n);\r\n  const showMdrTemplate = () => {\r\n    setMdrTemplateVisible(true);\r\n  };\r\n\r\n  const hideMdrTemplate = () => {\r\n    setMdrTemplateVisible(false);\r\n  };\r\n\r\n  const serializedDepartmentOption = JSON.stringify(departmentOption);\r\n  // console.log(\"serialized\",serializedDepartmentOption)\r\n\r\n  const history = useHistory();\r\n  const navigateToMdrTemplate = () => {\r\n    if (!title || !projectId ||!selectedReviewer ||!selectedApprover ) {\r\n      // If any required field is missing, display a validation error notification\r\n      notification.error({\r\n        message: 'Validation Error',\r\n        description: 'Please fill in all required fields.',\r\n        style: {\r\n          backgroundColor: '#f5222d', // Red color background\r\n          color: '#fff', // White text color\r\n        },\r\n      });\r\n      return; // Exit early if validation fails\r\n    }\r\n    const project = projectOptions.find((item) => item?.value == projectId);\r\n    // console.log('departmentOptions',departmentOptions);\r\n    const serializedDepartmentOptions = JSON.stringify(departmentOptions);\r\n    const serializedDepartmentOption = JSON.stringify(departmentOption);\r\n    // console.log(\"serialized\",serializedDepartmentOption)\r\n    const serializedProjectOptions = JSON.stringify(projectOptions);\r\n    const serializedSelectedApprover = JSON.stringify(selectedApprover);\r\n    const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\r\n    history.push(`/pages/initialMDR?projectCode=${project.code}&mdrCode=${mdrCode}\r\n    &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\r\n    &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\r\n    &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}&reviewer=${serializedSelectedReviewer}`)};\r\n    \r\n    const navigateToMdrTemplateForUpdate = () => {\r\n      if (!title || !projectId ||!selectedReviewer ||!selectedApprover ) {\r\n        // If any required field is missing, display a validation error notification\r\n        notification.error({\r\n          message: 'Validation Error',\r\n          description: 'Please fill in all required fields.',\r\n          style: {\r\n            backgroundColor: '#f5222d', // Red color background\r\n            color: '#fff', // White text color\r\n          },\r\n        });\r\n        return; // Exit early if validation fails\r\n      }\r\n      const project = projectOptions.find((item) => item?.value == projectId);\r\n      // console.log('departmentOptions',departmentOptions);\r\n      const serializedDepartmentOptions = JSON.stringify(departmentOptions);\r\n      const serializedDepartmentOption = JSON.stringify(departmentOption);\r\n      const serializedRecord = JSON.stringify(record);\r\n      // console.log(serializedRecord,\"serializedRecord\");\r\n      // console.log(\"serialized\",serializedDepartmentOption)\r\n      const serializedProjectOptions = JSON.stringify(projectOptions);\r\n      const serializedSelectedApprover = JSON.stringify(selectedApprover);\r\n      const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\r\n      history.push(`/pages/initialMDR?projectCode=${project.code}&mdrCode=${mdrCode}\r\n      &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\r\n      &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\r\n      &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}\r\n      &reviewer=${serializedSelectedReviewer}&record=${serializedRecord}`)};\r\n  \r\n\r\n    const navigate = () => {\r\n    const project = record.projectId;\r\n    const serializedDepartmentOptions = JSON.stringify(departmentOptions);\r\n    const serializedDepartmentOption = JSON.stringify(departmentOption);\r\n    const serializedProjectOptions = JSON.stringify(projectOptions);\r\n    const serializedSelectedApprover = JSON.stringify(selectedApprover);\r\n    const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\r\n\r\n    history.push(`/pages/initialMDR?projectCode=${record.projectCode}&mdrCode=${record.mdrCode}\r\n    &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\r\n    &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\r\n    &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}&reviewer=${serializedSelectedReviewer}`)};\r\n    \r\n  const documentModalShow = () => {\r\n    setDocumentModalVisible(true);\r\n  };\r\n\r\n  const documentModalShowing = (record) => {\r\n    // console.log(\"record\",record);\r\n    setRecord(record);\r\n    setDocumentModalVisible(true);\r\n  };\r\n  const documentModalCancel = () => {\r\n    setTitle(\"\");\r\n    setProjectId(\"\");\r\n    setDepartmentId(\"\");\r\n    setDocumentModalVisible(false);\r\n  };\r\n\r\n\r\n  const assignModalShow = () => {\r\n    setAssignModalVisible(true);\r\n  };\r\n\r\n  const assignModalCancel = () => {\r\n    setAssignModalVisible(false);\r\n  };\r\nlet count=0;\r\n  const createModalShow = (record) => {\r\n     console.log(\"record\",record)\r\n    setRecord(record)\r\n    setDocumentModalVisible(true);\r\n  };\r\n\r\n  const showModalShow = (record) => {\r\n     console.log('record',record)\r\n    setRecord(record)\r\n    showDocs(record)\r\n    setShowModalVisible(true);\r\n  };\r\n\r\n  const editModalShow = (record) => {\r\n    console.log(recordMdr,\"record1\");\r\n    setRecordMdr(record)\r\n    setEditModalVisible(true);\r\n    console.log(recordMdr,\"record2\");\r\n\r\n  };\r\n\r\n  const editModalCancel = () => {\r\n\r\n    setEditModalVisible(false);\r\n  };\r\n  const showModalCancel = () => {\r\n    setShowModalVisible(false);\r\n  };\r\n  const createModalCancel = () => {\r\n    setCreateModalVisible(false);\r\n  };\r\nconst showDocs = async(record)=>{\r\n  // console.log(\"record\",record);\r\n\r\n  fetchDepartmentDocs(record)\r\n}\r\n\r\n\r\n\r\n// const convertToCSV = (data) => {\r\n//   // console.log('data',data);\r\n//   const csvRows = [];\r\n//   data.forEach((obj) => {\r\n//     const key = Object.keys(obj)[0]; // Extract the key\r\n//     // console.log(\"key\",key);\r\n//     const documents = obj[key]; // Extract the array of documents\r\n//     // console.log(\"objKeys\",documents);\r\n\r\n//     csvRows.push(`Key,${key}`);\r\n    \r\n//     const headers = Object.keys(documents[0]);\r\n//     csvRows.push(`\"${headers.join('\",\"')}\"`);\r\n\r\n//     documents.forEach((document) => {\r\n//       const values = headers.map((header) => {\r\n//         const cellValue = document[header];\r\n//         return Array.isArray(cellValue) ? `\"${cellValue.join(',')}\"` : `\"${cellValue}\"`;\r\n//       });\r\n//       csvRows.push(values.join(','));\r\n//     });\r\n\r\n//     csvRows.push('');\r\n//   });\r\n\r\n//   return csvRows.join('\\n');\r\n// };\r\n\r\n\r\n\r\n// const handleExport = async (record) => {\r\n//   await fetchDepartmentDocs(record);\r\n\r\n//   if (docData.length > 0) {\r\n//     // console.log(docData,\"docData\");\r\n//     const csvData = convertToCSV(docData);\r\n\r\n//     // console.log(csvData,\"data for csv\");\r\n//     const blob = new Blob([csvData], { type: 'text/csv' });\r\n//     const url = window.URL.createObjectURL(blob);\r\n//     const link = document.createElement('a');\r\n//     link.href = url;\r\n//     link.setAttribute('download', `MDR ${docData[0].masterDocumentId}.csv`);\r\n//     document.body.appendChild(link);\r\n//     link.click();\r\n//     document.body.removeChild(link);\r\n//   }\r\n// };\r\n\r\n\r\nconst convertToCSV = (data) => {\r\n  const csvRows = [];\r\n\r\n  // Add image URL as the first row\r\n  \r\n  csvRows.push(`Novacon`);\r\n\r\n  data.forEach((obj) => {\r\n    const key = Object.keys(obj)[0];\r\n    const documents = obj[key];\r\n\r\n    csvRows.push(`Key,${key}`);\r\n\r\n    const headers = Object.keys(documents[0]);\r\n    csvRows.push(`\"${headers.join('\",\"')}\"`);\r\n\r\n    documents.forEach((document) => {\r\n      const values = headers.map((header) => {\r\n        const cellValue = document[header];\r\n        return Array.isArray(cellValue) ? `\"${cellValue.join(',')}\"` : `\"${cellValue}\"`;\r\n      });\r\n      csvRows.push(values.join(','));\r\n    });\r\n\r\n    csvRows.push('');\r\n  });\r\n\r\n  return csvRows.join('\\n');\r\n};\r\n\r\nconst handleExport = async (record, imageUrl) => {\r\n  await fetchDepartmentDocs(record);\r\n\r\n  if (docData.length > 0) {\r\n    const csvData = convertToCSV(docData);\r\n\r\n    const blob = new Blob([csvData], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', `MDR ${docData[0].masterDocumentId}.csv`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n};\r\n\r\n// const generateHTML = (data, logoBase64) => {\r\n//   const csvContent = convertToCSV(data,logoBase64);\r\n\r\n//   // Construct HTML content\r\n//   const htmlContent = `\r\n//     <!DOCTYPE html>\r\n//     <html lang=\"en\">\r\n//     <head>\r\n//       <meta charset=\"UTF-8\">\r\n//       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n//       <title>CSV Export</title>\r\n//     </head>\r\n//     <body>\r\n//       <img src=\"${logoBase64}\" alt=\"Logo\">\r\n//       <h1>CSV Data</h1>\r\n//       <pre>${csvContent}</pre>\r\n//     </body>\r\n//     </html>\r\n//   `;\r\n\r\n//   return htmlContent;\r\n// };\r\n// const getImageBase64FromUrl = async (url) => {\r\n//   try {\r\n//     // Fetch the image as a Blob\r\n//     const response = await fetch(url);\r\n//     const blob = await response.blob();\r\n\r\n//     // Convert the Blob to base64\r\n//     return new Promise((resolve, reject) => {\r\n//       const reader = new FileReader();\r\n//       reader.readAsDataURL(blob);\r\n//       reader.onloadend = () => {\r\n//         const base64String = reader.result.split(',')[1];\r\n//         resolve(base64String);\r\n//       };\r\n//       reader.onerror = (error) => {\r\n//         reject(error);\r\n//       };\r\n//     });\r\n//   } catch (error) {\r\n//     console.error('Error fetching or converting image:', error);\r\n//     return null;\r\n//   }\r\n// };\r\n\r\n// const handleExport = async (record, imageUrl) => {\r\n//   await fetchDepartmentDocs(record);\r\n//   const logoBase = await getImageBase64FromUrl(imageUrl); // Added 'await' here\r\n//   if (docData.length > 0) {\r\n//     const htmlContent = generateHTML(docData, logoBase);\r\n\r\n//     // Create a Blob from the HTML content\r\n//     const blob = new Blob([htmlContent], { type: 'text/html' });\r\n\r\n//     // Create a URL for the Blob\r\n//     const url = window.URL.createObjectURL(blob);\r\n\r\n//     // Create a link element and trigger download\r\n//     const link = document.createElement('a');\r\n//     link.href = url;\r\n//     link.setAttribute('download', `MDR ${docData[0].masterDocumentId}.html`);\r\n//     document.body.appendChild(link);\r\n//     link.click();\r\n\r\n//     // Cleanup\r\n//     document.body.removeChild(link);\r\n//   }\r\n// };\r\n\r\n\r\nconst fetchDepartmentDocs = async (record) => {\r\n  try {\r\n    // console.log('recorddd',record);\r\n    const response = await axios.get(\r\n      `http://54.81.250.98:8083/api/documents?masterDocumentId=${record.mdrCode}&projectId=${record.projectId}&companyId=${record.companyId}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n//     const organizedData = {};\r\n\r\n// response.data.forEach(item => {\r\n//   const key = item.title.split('-')[2]; // Extract the third part of the title (e.g., 'PM')\r\n  \r\n//   if (!organizedData[key]) {\r\n//     organizedData[key] = [];\r\n//   }\r\n  \r\n//   organizedData[key].push(item.docTitle);\r\n// });\r\n\r\n// const resultArray = Object.keys(organizedData).map(key => ({ [key]: organizedData[key] }));\r\n\r\n// console.log(resultArray,\"result\");\r\nconsole.log(\"response\",response.data);\r\nconst fieldsToRemove = ['version', 'companyId','departmentId','projectId','masterDocumentId','masterDocumentName','content','extension','fileName'];\r\nconst modified = response.data.map((obj) => {\r\n  const { version, companyId, departmentId, projectId, masterDocumentId, masterDocumentName, content, extension, fileName, ...newObj } = obj;\r\n  return newObj;\r\n});\r\n\r\nconst modifiedData = {};\r\n\r\n// Iterate through the data\r\nmodified.forEach(item => {\r\n  // Extract the key (third part of the title)\r\n  const key = item.title.split('-')[2];\r\n  \r\n  // If the key doesn't exist in modifiedData, create an array for it\r\n  if (!modifiedData[key]) {\r\n    modifiedData[key] = [];\r\n  }\r\n  \r\n  // Add the current item to the array of the corresponding key\r\n  modifiedData[key].push(item);\r\n});\r\n\r\n// Convert the modifiedData object to an array of objects\r\nconst result = Object.keys(modifiedData).map(key => ({ [key]: modifiedData[key] }));\r\n\r\n// console.log(result);\r\n\r\n\r\n    // console.log(response.data,\"received\");\r\n    // setDocData(response.data);\r\n    setDocData(result)\r\n    // console.log(docData,'hiiiiiiiii');/\r\n\r\n  } catch (error) {\r\n    console.error(\"Error fetching documents:\", error?.message);\r\n  }\r\n};\r\nuseEffect(() => {\r\n}, [docData]);\r\n  const assignMDR = async(assignedEmployees,allUsers)=>{\r\n    if (!projectId || !assignedEmployees ) {\r\n      // If any required field is missing, display a validation error notification\r\n      notification.error({\r\n        message: 'Validation Error',\r\n        description: 'Please fill in all required fields.',\r\n        style: {\r\n          backgroundColor: '#f5222d', // Red color background\r\n          color: '#fff', // White text color\r\n        },\r\n      });\r\n      return; // Exit early if validation fails\r\n    }\r\n    try {\r\n      // console.log(allUsers);\r\n      const assignedUser = allUsers.find(user => user.id == assignedEmployees)      \r\n      const project = projectOptions.find((item) => item?.value == projectId);\r\n      const department = departmentOptions.find(\r\n        (item) => item?.value == departmentId\r\n      );\r\n      const response = await axios.post(\r\n        \"http://54.81.250.98:8083/api/documents/mdr\",\r\n        {\r\n          departmentId:assignedUser.departmentId,\r\n          projectId,\r\n          companyId: assignedUser?.companyId,\r\n          authorId: assignedUser?.id,\r\n          authorName: assignedUser?.firstName,\r\n          mdrCode,\r\n          projectCode: project?.code,\r\n          departmentName: assignedUser.department,\r\n          status:\"Assigned\",\r\n          noOfDocuments:0\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      notification.success({\r\n        message: `${response?.data?.message}`,\r\n        style: {\r\n          backgroundColor: '#52c41a', // Red color background\r\n          color: '#fff', // White text color\r\n        },\r\n      }\r\n      )\r\n      setAssignModalVisible(false)\r\n      fetchData()\r\n    } catch (error) {\r\n      console.error(\"Error assigning documents:\", error);\r\n    }\r\n  }\r\n  const handleEdit = async()=>{\r\n    try {\r\n      console.log(recordMdr,\"recordMdr\");\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n  const addDocument = async () => {\r\n    try {\r\n      const project = projectOptions.find((item) => item?.value == projectId);\r\n      const department = departmentOptions.find(\r\n        (item) => item?.value == departmentId\r\n      );\r\n\r\n      const response = await axios.post(\r\n        \"http://54.81.250.98:8083/api/documents/mdr\",\r\n        {\r\n          title,\r\n          selectedDepartments,\r\n          projectId,\r\n          noOfDocuments,\r\n          companyId: user?.user?.companyId,\r\n          authorId: user?.user?.id,\r\n          authorName: `${user?.user?.firstName} ${user?.user?.lastName}`,\r\n          mdrCode,\r\n          projectCode: project?.code,\r\n          departmentName: department?.label,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      // Handle the response as needed\r\n      console.log(response);\r\n      message.success(response?.data?.message);\r\n      fetchData();\r\n      documentModalCancel();\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error(\"Error adding documents:\", error);\r\n    }\r\n  };\r\n  const exportCSV = async (record) => {\r\n    try {\r\n      console.log(record);\r\n      const response = await axios.post(\r\n        `http://54.81.250.98:8083/api/documents/export/${record?.id}?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n\r\n      message.success(response?.data?.message);\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  const mdr = async() =>{\r\n    console.log(record)\r\n      try {\r\n        // console.log(allUsers);\r\n        const projectId = record.projectId\r\n        const projectCode = record.projectCode\r\n        console.log(projectId,projectCode);\r\n        const response = await axios.put(\r\n          `http://54.81.250.98:8083/api/documents/mdr?projectId=${projectId}&projectCode=${projectCode}`,\r\n          {\r\n                title,\r\n                mdrCode,\r\n                status:\"Ongoing\"\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: user?.accessToken,\r\n              // Add other headers if needed\r\n            },\r\n          }\r\n        );\r\n        setCreateModalVisible(false)\r\n        fetchData()\r\n      } catch (error) {\r\n        console.error(\"Error Updating MDR:\", error);\r\n      }\r\n  }\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/documents/mdr?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(response.data,\"response aya\");\r\n      // console.log('mdr data',response.data);\r\n      setProjectCode(response.data.projectCode)\r\n      if (user?.user?.roleId===3 || user?.user?.roleId ===4) {\r\n        const data = response.data.filter(item => item.authorId === user?.user?.id);\r\n        // console.log(\"data\",data);\r\n        setData(data);\r\n        setDataArray(data);\r\n\r\n      }else if(user?.user?.roleId ===2){\r\n        \r\n        console.log(user?.user?.departmentId,'departmentId')\r\n        const data = response.data.filter(item => \r\n          item.departmentId.split(\",\").includes((user?.user?.departmentId))  || item.authorId === user?.user?.id    \r\n          );       \r\nconsole.log('dataaaaaa',data);\r\n        const d =  data.map((d)=>d.projectId)\r\n\r\n        setPro(d)\r\n\r\n        setData(data);\r\n        setDataArray(data);\r\n      }\r\n      else{\r\n        setData(response.data)\r\n        setDataArray(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  \r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/departments?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      const options = [];\r\n      const option = [];\r\n      for (const item of response?.data) {\r\n        options.push({ value: item?.id, label: item?.title });\r\n        option.push({ value: item?.suffix, label: item?.title });\r\n\r\n      }\r\n\r\n      setDepartmentOptions(options); \r\n      setDepartmentOption(option); \r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/projects?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n  \r\n      // Use Set to store unique titles\r\n      const uniqueTitlesSet = new Set();\r\n  \r\n      const options = response?.data.reduce((acc, item) => {\r\n        // Check if the title is not in the Set\r\n        if (!uniqueTitlesSet.has(item.title)) {\r\n          // Add title to the Set\r\n          uniqueTitlesSet.add(item.title);\r\n  \r\n          // Push the option to the result array\r\n          acc.push({ value: item.id, label: item.title, code: item.code });\r\n        }\r\n  \r\n        return acc;\r\n      }, []);\r\n  \r\n      console.log(response.data);\r\n      setProjects(options); // Assuming the response.data is an array of projects\r\n      console.log(projectOptions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/users?companyId=${user?.user?.companyId}&roleId=2`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      setAllUsers(response.data)\r\n      console.log(response?.data, \"Users\");\r\n      const options = [];\r\n      const option = [];\r\n\r\n      for (const item of response?.data) {\r\n        var role='Engineer'\r\n        if(item.roleId==1){\r\n           role ='CEO'\r\n\r\n           options.push({\r\n            value: {id:item?.id,name:item.firstName,departmentId:item?.departmentId,department:item.department},\r\n            label: `${item?.firstName} ${role} `,\r\n          });\r\n        \r\n        } if(item.roleId==2){\r\n          role =`HEAD of ${item.department}`\r\n          options.push({\r\n            value: {id:item?.id,name:item.firstName},\r\n            label: `${item?.firstName} ${role} `,\r\n          });\r\n          option.push({\r\n            value:item?.id,\r\n            label: `${item?.firstName} ${role} `,\r\n          });\r\n       }\r\n       if(item.roleId==3){\r\n        role =`Senior Engineer ${item.department}`\r\n        options.push({\r\n          value: {id:item?.id,name:item.firstName},\r\n          label: `${item?.firstName} ${role} `,\r\n        });\r\n        option.push({\r\n          value:item?.id,\r\n          label: `${item?.firstName} ${role} `,\r\n        });\r\n     } if(item.roleId==4){\r\n       role ='Junior'\r\n    }\r\n    if(item.roleId==5){\r\n      role ='Designer/Draughtsmen'\r\n   } \r\n\r\n      }\r\n      const filteredArray = options.filter(item => item.roleId !== 1);\r\n\r\n      setFilteredUsers(filteredArray)\r\n\r\n      setUserData(options);\r\n      setUserDatalist(option);\r\n\r\n      // console.log('my options',options);\r\n\r\n      // console.log('my users',userOptions);\r\n       // Assuming the response.data is an array of DocumentPermissions\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n  // const handleCheckboxChange = (checkedValues) => {\r\n  //   // Concatenate all selected checkboxes into an array\r\n  //   const concatenatedString = checkedValues.join(' ')\r\n  //   setSelectedDepartments(concatenatedString);\r\n  //   console.log(selectedDepartments);\r\n  // };\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage?.getItem(\"user\")));\r\n    // Fetch data when the component mounts\r\n    fetchDepartments();\r\n    fetchProjects();\r\n    fetchUsers();\r\n    fetchData();\r\n    console.log(data);\r\n    // console.log(user);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Upload Document\"\r\n        width={400}\r\n        centered\r\n        visible={documentModalVisible}\r\n        onCancel={documentModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Row justify=\"space-between\" align=\"center\">\r\n          <Col span={20}>\r\n            <Form layout=\"vertical\" name=\"basic\">\r\n              <Form.Item\r\n                label=\"MDR Title\"\r\n                name=\"docTitle\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your title\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"MDR Code\"\r\n                name=\"docCode\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your code\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  value={title}\r\n                  onChange={(e) => setMdrCode(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n\r\n\r\n              <Form.Item\r\n                label=\"Project Name\"\r\n                name=\"projectName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Project Name\",\r\n                  },\r\n                ]}\r\n              >\r\n <Select\r\n                  options={projectOptions}\r\n                  value={projectId}\r\n                  onChange={(value) => setProjectId(value)}\r\n                />              </Form.Item>\r\n              <Form.Item\r\n                label=\"Add Reviewers\"\r\n                name=\"reviewers\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Reviewers Name\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Checkbox.Group options={userOptions} value={selectedReviewer} onChange={setSelectedReviewer} />\r\n\r\n              </Form.Item> <Form.Item\r\n                label=\"Add Approvers\"\r\n                name=\"approvers\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Approvers Name\",\r\n                  },\r\n                ]}\r\n              >\r\n               <Checkbox.Group options={userOptions} value={selectedApprover} onChange={setSelectedApprover} />\r\n              </Form.Item>\r\n              <Row>           \r\n              <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n                  <Button block onClick={record?navigateToMdrTemplateForUpdate:navigateToMdrTemplate} type=\"primary\"htmlType=\"submit\">MDR template</Button>\r\n                </Col>\r\n                {/* <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n                  <Button block onClick={navigateToMdrTemplate} type=\"primary\"htmlType=\"submit\">Create Custom</Button>\r\n                </Col> */}\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"Assign Document\"\r\n        width={400}\r\n        centered\r\n        visible={assignModalVisible}\r\n        onCancel={assignModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Row justify=\"space-between\" align=\"center\">\r\n          <Col span={20}>\r\n            <Form layout=\"vertical\" name=\"basic\">\r\n              <Form.Item\r\n                label=\"Project Name\"\r\n                name=\"projectName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Project Name\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Select\r\n                  options={projectOptions}\r\n                  value={projectId}\r\n                  onChange={(value) => setProjectId(value)}\r\n                />\r\n                </Form.Item>\r\n                <Form.Item\r\n                label=\"Assigned MDR to\"\r\n                name=\"assignMDR\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please Assign MDR\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Select\r\n                  options={userOption}\r\n                  value={assignedEmployees}\r\n                  onChange={(value) => setAssignedEmployees(value)}\r\n                />\r\n                </Form.Item>\r\n              <Row>           \r\n              <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n                  <Button block onClick={()=>assignMDR(assignedEmployees,allUsers)} type=\"primary\"htmlType=\"submit\">Assigned</Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n      \r\n      <Modal\r\n  title=\"MDR Information\"\r\n  width={400}\r\n  centered\r\n  visible={editModalVisible}\r\n  onCancel={editModalCancel}\r\n  footer={null}\r\n  closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\r\n>\r\n\r\n  {recordMdr ? (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ textAlign: \"left\" }}>\r\n    <Title level={3}>Title: {recordMdr.title || null}</Title><br />\r\n      <Text strong>Author Name: </Text>\r\n      <Text>{recordMdr.authorName || null}</Text><br />\r\n      <Text strong>Department ID: </Text>\r\n      <Text>{recordMdr.departmentId || null}</Text><br />\r\n      <Text strong>Project Code: </Text>\r\n      <Text>{recordMdr.projectCode || null}</Text><br />\r\n      <Text strong>MDR Code: </Text>\r\n      <Text>{recordMdr.mdrCode || null}</Text><br />\r\n      <Text strong>No of Documents: </Text>\r\n      <Text>{recordMdr.noOfDocuments || null}</Text><br />\r\n      <Text strong>Percentage: </Text>\r\n      <Text>{recordMdr.percentage || null}</Text><br />\r\n\r\n      <Text strong>Status: </Text>\r\n      <Text>{recordMdr.status}</Text><br />\r\n      <Text strong>Created At: </Text>\r\n      <Text>{recordMdr.createdAt}</Text>\r\n      <br /><br />\r\n      </div>\r\n      <Button type=\"primary\" style={{ marginTop: \"16px\" }} onClick={handleEdit}>Add More Documents</Button>\r\n    </div>\r\n  ) : null}\r\n</Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        title=\"Show MDR Documents \"\r\n        width={400}\r\n        centered\r\n        visible={showModalVisible}\r\n        onCancel={showModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Row justify=\"space-between\" align=\"center\">\r\n          <Col span={20}>\r\n          <div>\r\n          <h3>MDR Documents</h3>\r\n          {/* <ul>\r\n            {selectedRows.map((row, index) => (\r\n              <li key={index}>{row+1}</li>\r\n            ))}\r\n          </ul> */}\r\n    <ul>\r\n      {docData.map((doc, index) => (\r\n        <li key={index}>\r\n          {Object.entries(doc).map(([key, values]) => (\r\n            <div key={key}>\r\n              <strong>{key}:</strong>\r\n              <ul>\r\n                {values.map((item, itemIndex) => (\r\n                  <li key={itemIndex}>\r\n                    <strong>Document Title:</strong> {item.docTitle} <br />\r\n                    {/* Add other properties as needed */}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </li>\r\n      ))}\r\n    </ul>        </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" }}>\r\n        {\r\n          user?.user.roleId == 1 &&       \r\n          <Button\r\n          type=\"primary\"\r\n          onClick={documentModalShow}\r\n          // disabled={user?.user?.roleId != 1}\r\n          style={{ marginRight: '10px' }}\r\n        >\r\n          Create MDR Yourself\r\n        </Button>\r\n        }\r\n\r\n        {\r\n                    user?.user.roleId == 1 &&   \r\n                    <Button\r\n                    type=\"primary\"\r\n                    onClick={assignModalShow}\r\n                    // disabled={user?.user?.roleId != 1}\r\n                  >\r\n                    Assign MDR \r\n                  </Button>\r\n              \r\n\r\n        }\r\n\r\n      {mdrTemplateVisible && <MdrTemplate />}\r\n      </div>\r\n      <div style={{ overflowX: \"auto\" }}>\r\n      <Table\r\n        columns={[\r\n          {\r\n            title: \"Document Title\",\r\n            dataIndex: \"title\",\r\n            key: \"title\",\r\n            ...getColumnSearchProps('title'),\r\n\r\n          },\r\n          {\r\n            title: \"Project Code\",\r\n            dataIndex: \"projectCode\",\r\n            key: \"projectCode\",\r\n            ...getColumnSearchProps('projectCode'),\r\n\r\n          },\r\n          {\r\n            title: \"Dept Name\",\r\n            dataIndex: \"departmentName\",\r\n            key: \"departmentName\",\r\n            ...getColumnSearchProps('departmentName'),\r\n\r\n          },\r\n\r\n          {\r\n            title: \"Author Name\",\r\n            dataIndex: \"authorName\",\r\n            key: \"authorName\",\r\n            ...getColumnSearchProps('authorName'),\r\n\r\n          },\r\n          {\r\n            title: \"No of Documents\",\r\n            dataIndex: \"noOfDocuments\",\r\n            key: \"noOfDocuments\",\r\n            sorter: (a, b) => a.noOfDocuments - b.noOfDocuments,\r\n\r\n          },\r\n          {\r\n            title: (\r\n              \"Status\"\r\n            ),\r\n            key: \"status\",\r\n            dataIndex: \"status\",\r\n        \r\n        filters: [\r\n        \r\n              {\r\n                text: 'Initialized',\r\n                value: 'Initialized',\r\n              },\r\n              {\r\n                text: 'Ongoing',\r\n                value: 'Ongoing',\r\n              },\r\n              {\r\n                text: 'Completed',\r\n                value: 'Completed',\r\n              },\r\n            ],\r\n            onFilter:  (value, record) =>record.status === value,\r\n          },\r\n          \r\n          {\r\n            title: \"Action\",\r\n            key: \"action\",\r\n            render: (_, record) => (\r\n              <>\r\n                <Space size=\"middle\">\r\n\r\n                  <Button\r\n                    key={record?.id}\r\n                    onClick={() => handleExport(record)}\r\n                    disabled={user?.user?.roleId != 1}\r\n                  >\r\n                    Export\r\n                  </Button>\r\n                  {user.user.roleId !== 1 && record.authorId === user?.user.id  && record.status ==\"Assigned\" &&(\r\n                    <Button\r\n                      key={record?.id}\r\n                      onClick={() => createModalShow(record)}\r\n                    >\r\n                      Create\r\n                    </Button>\r\n                  )}\r\n    \r\n                  {user.user.roleId==1 &&       \r\n                  <>\r\n                  <Button\r\n                    key={record?.id}\r\n                    onClick={() => {showModalShow(record)                      \r\n                    }}\r\n                  >\r\n                    Open\r\n                  </Button>\r\n                  {/* <Button\r\n                    key={record?.id}\r\n                    onClick={() => {editModalShow(record)                      \r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button> */}\r\n                  </>\r\n                  \r\n                  }       \r\n                </Space>\r\n              </>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Progress Per Document\",\r\n            key: \"percentage\",\r\n            render: (_, record) => (\r\n              <Space>\r\n                {record.percentage !== null ? (\r\n                  <ProgressComp percentage={record.percentage.toFixed(1)} />\r\n                ) : null}\r\n              </Space>\r\n            )\r\n          },\r\n             \r\n        ]}\r\n        size=\"middle\"\r\n        bordered\r\n      title={() => 'All Department Documents'}\r\n      footer={() => 'You may filter MDR'}\r\n        dataSource={data}\r\n        rowClassName={(record) => {\r\n          if (matchingRecord && record.id === matchingRecord.selectedRecord.id) {\r\n            return 'highlighted-row'; // Apply CSS class for highlighting\r\n          }\r\n          return '';\r\n        }}\r\n      /></div>\r\n      <ProtectedAppPage />\r\n    </>\r\n  );\r\n}"],"names":["ProtectedAppPage","_localStorage","isLogIn","localStorage","getItem","console","log","_jsx","Redirect","to","_ref","percentage","strokeColor","Row","justify","align","style","width","children","Progress","percent","steps","Title","Text","Typography","MDR","searchText","setSearchText","useState","searchedColumn","setSearchedColumn","searchInput","useRef","documentModalVisible","setDocumentModalVisible","assignModalVisible","setAssignModalVisible","createModalVisible","setCreateModalVisible","showModalVisible","setShowModalVisible","editModalVisible","setEditModalVisible","params","setParams","title","setTitle","projectId","setProjectId","departmentId","setDepartmentId","mdrCode","setMdrCode","noOfDocuments","setNoOfDocuments","pro","setPro","status","setStatus","projectOptions","setProjects","user","setUser","JSON","parse","data","setData","dataArray","setDataArray","selectedDepartments","setSelectedDepartments","selectedReviewer","setSelectedReviewer","docData","setDocData","assignedEmployees","setAssignedEmployees","selectedApprover","setSelectedApprover","allUsers","setAllUsers","mdrTemplateVisible","setMdrTemplateVisible","departmentOptions","setDepartmentOptions","departmentOption","setDepartmentOption","userOptions","setUserData","filteredUsers","setFilteredUsers","userOption","setUserDatalist","record","setRecord","recordMdr","setRecordMdr","projectCode","setProjectCode","location","useLocation","matchingRecord","state","handleSearch","selectedKeys","confirm","dataIndex","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","close","_jsxs","padding","Input","ref","placeholder","concat","value","onChange","e","target","onPressEnter","marginBottom","display","Space","Button","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownOpenChange","visible","setTimeout","_searchInput$current","current","select","render","text","Highlighter","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","history","Menu","Item","stringify","useHistory","documentModalCancel","showDocs","async","fetchDepartmentDocs","handleExport","imageUrl","length","csvData","csvRows","push","forEach","obj","key","Object","keys","documents","headers","join","document","values","map","header","cellValue","Array","isArray","convertToCSV","blob","Blob","url","window","URL","createObjectURL","link","createElement","href","setAttribute","masterDocumentId","body","appendChild","click","removeChild","response","axios","companyId","Authorization","accessToken","modified","version","masterDocumentName","content","extension","fileName","newObj","modifiedData","item","split","result","error","message","useEffect","fetchData","_user$user6","_user$user7","_user$user8","_user$user10","roleId","filter","_user$user9","authorId","id","_user$user11","_user$user12","_user$user13","d","_localStorage2","_user$user14","options","option","label","suffix","fetchDepartments","_user$user15","uniqueTitlesSet","Set","reduce","acc","has","add","code","fetchProjects","_user$user16","role","name","firstName","department","filteredArray","fetchUsers","_Fragment","Modal","centered","onCancel","footer","closeIcon","RiCloseFill","className","Col","span","Form","layout","rules","required","Select","Checkbox","Group","md","block","navigateToMdrTemplateForUpdate","notification","description","project","find","serializedDepartmentOptions","serializedDepartmentOption","serializedRecord","serializedProjectOptions","serializedSelectedApprover","serializedSelectedReviewer","navigateToMdrTemplate","htmlType","assignModalCancel","_response$data","assignedUser","authorName","departmentName","success","assignMDR","editModalCancel","textAlign","level","strong","createdAt","marginTop","showModalCancel","doc","index","entries","_ref2","itemIndex","docTitle","documentModalShow","marginRight","assignModalShow","MdrTemplate","overflowX","Table","columns","sorter","a","b","filters","_","_user$user17","disabled","createModalShow","showModalShow","ProgressComp","toFixed","bordered","dataSource","rowClassName","selectedRecord"],"sourceRoot":""}