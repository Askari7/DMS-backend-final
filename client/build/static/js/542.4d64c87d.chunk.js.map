{"version":3,"file":"static/js/542.4d64c87d.chunk.js","mappings":"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","sources":["view/pages/authentication/reset-password/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\r\n\r\nimport LeftContent from \"../leftContent\";\r\nimport Footer from \"../footer\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ResetPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const search = window.location.search;\r\n  const params = new URLSearchParams(search);\r\n  const token = params.get('token');\r\n\r\n  console.log(token)\r\n  const onFinish = () => {\r\n    axios.post(`http://127.0.0.1:3001/v1/auth/reset-password?token=${token}`, {password})\r\n    .then(response=> {\r\n      console.log(response.data)\r\n      if(response.status == 204){\r\n        message.success(\"Password is resseted\")\r\n      }\r\n    }).catch(e=>{\r\n      console.log(e.response.data.message)\r\n      message.error(e.response.data.message)\r\n    })\r\n  };\r\n  const onFinishFailed = () => {\r\n    message.error(\"Submit failed!\");\r\n  };\r\n\r\n  return (\r\n    <Row gutter={[32, 0]} className=\"hp-authentication-page\">\r\n      <LeftContent />\r\n\r\n      <Col lg={12} span={24} className=\"hp-py-sm-0 hp-py-md-64\">\r\n        <Row className=\"hp-h-100\" align=\"middle\" justify=\"center\">\r\n          <Col\r\n            xxl={11}\r\n            xl={15}\r\n            lg={20}\r\n            md={20}\r\n            sm={24}\r\n            className=\"hp-px-sm-8 hp-pt-24 hp-pb-48\"\r\n          >\r\n            <h1>Reset Password</h1>\r\n            <p className=\"hp-mt-8 hp-text-color-black-60\">\r\n              Email verification is done. Please choose another password\r\n            </p>\r\n\r\n            <Form\r\n              layout=\"vertical\"\r\n              name=\"basic\"\r\n              className=\"hp-mt-sm-16 hp-mt-32\"\r\n              form={form}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Form.Item\r\n                label=\"Password :\"\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                  {\r\n                    type: \"string\",\r\n                    min: 6,\r\n                  },\r\n                  {\r\n                    validator: (_, value) =>\r\n                      /^(?=.*[A-Z])(?=.*\\d).+$/.test(value) ? Promise.resolve() : Promise.reject(new Error(\"Password must contain at least one uppercase letter and one number.\"))\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={e=> setPassword(e.target.value)}\r\n                  placeholder=\"At least 6 characters\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Confirm Password :\"\r\n                name=\"confirm-password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                  {\r\n                    type: \"string\",\r\n                    min: 6,\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(new Error('The new password that you entered do not match!'));\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  id=\"confirm-password\"\r\n                  placeholder=\"At least 6 characters\"\r\n                  value={confirmPassword}\r\n                  onChange={e=> setConfirmPassword(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item className=\"hp-mt-16 hp-mb-8\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Reset Password\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            <div className=\"hp-form-info hp-text-center\">\r\n              <span className=\"hp-text-color-black-80 hp-text-color-dark-40 hp-caption hp-mr-4\">\r\n                Go back to\r\n              </span>\r\n\r\n              <Link\r\n                to=\"/pages/authentication/login\"\r\n                className=\"hp-text-color-primary-1 hp-text-color-dark-primary-2 hp-caption\"\r\n              >\r\n                Login\r\n              </Link>\r\n            </div>\r\n\r\n            <Footer />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n"],"names":["ResetPassword","password","setPassword","useState","confirmPassword","setConfirmPassword","form","Form","useForm","search","window","location","token","URLSearchParams","get","console","log","_jsxs","Row","gutter","className","children","_jsx","LeftContent","Col","lg","span","align","justify","xxl","xl","md","sm","layout","name","onFinish","axios","concat","then","response","data","status","message","success","catch","e","error","onFinishFailed","Item","label","rules","required","type","min","validator","_","value","test","Promise","resolve","reject","Error","Input","Password","id","onChange","target","placeholder","_ref","getFieldValue","Button","block","htmlType","Link","to","Footer"],"sourceRoot":""}