{"version":3,"file":"static/js/8360.35abc44f.chunk.js","mappings":"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","sources":["layout/components/content/breadcrumbs/index.jsx","view/pages/clients/index.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { Col, Breadcrumb } from \"antd\";\r\n\r\nconst BreadCrumbs = (props) => {\r\n  const {\r\n    breadCrumbParent,\r\n    breadCrumbParent2,\r\n    breadCrumbParent3,\r\n    breadCrumbActive,\r\n  } = props;\r\n\r\n  return (\r\n    <Col>\r\n      <Breadcrumb className=\"hp-d-flex hp-flex-wrap\">\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/\">Home</Link>\r\n        </Breadcrumb.Item>\r\n\r\n        {breadCrumbParent === \"Components\" ? (\r\n          <Breadcrumb.Item>\r\n            <Link to=\"/components/components-page\">Components</Link>\r\n          </Breadcrumb.Item>\r\n        ) : (\r\n          <Breadcrumb.Item>{breadCrumbParent}</Breadcrumb.Item>\r\n        )}\r\n\r\n        {breadCrumbParent2 && (\r\n          <Breadcrumb.Item>{breadCrumbParent2}</Breadcrumb.Item>\r\n        )}\r\n\r\n        {breadCrumbParent3 && (\r\n          <Breadcrumb.Item>{breadCrumbParent3}</Breadcrumb.Item>\r\n        )}\r\n\r\n        <Breadcrumb.Item>{breadCrumbActive}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Space,\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Select,Divider,\r\n  DatePicker,notification,\r\n  Tooltip\r\n\r\n} from \"antd\";\r\nimport { RiMore2Line, RiMenuFill, RiCloseFill } from \"react-icons/ri\";\r\n\r\nimport Breadcrumbs from \"../../../layout/components/content/breadcrumbs\";\r\nimport CustomizedTables from \"../../common/BaseTable\";\r\nimport { options } from \"less\";\r\nimport FormItem from \"antd/lib/form/FormItem\";\r\nimport { EmojiPeopleOutlined, People, Person } from \"@mui/icons-material\";\r\n// import InfoProfile from \"./personel-information\";\r\n// import MenuProfile from \"./menu\";\r\n// import PasswordProfile from \"./password-change\";\r\n// import ProtectedAppPage from \"../Protected\";\r\n\r\n\r\nexport default function Projects() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n  const [clients, setClients] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [officialform] = Form.useForm();\r\n\r\n\r\n  const handleSubmit = () => {\r\n    form.validateFields().then((values) => {\r\n      addClient()\r\n      // onSubmit(values);\r\n      form.resetFields();\r\n    });\r\n  };\r\n\r\n  const handleOfficialSubmit = () => {\r\n    officialform.validateFields().then((values) => {\r\n      addClientOfficials()\r\n      // onSubmit(values);\r\n      officialform.resetFields();\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n\r\n    {\r\n      title: \"Company Name\",\r\n      dataIndex: \"companyName\",\r\n      key: \"companyName\",\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Company Address\",\r\n      dataIndex: \"companyAddress\",\r\n      key: \"companyAddress\",\r\n    },\r\n    {\r\n      title: \"Company Contact\",\r\n      dataIndex: \"companyContact\",\r\n      key: \"companyContact\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, r) => (\r\n        <Space size=\"middle\">\r\n        {/* <Button\r\n          size=\"middle\"\r\n          icon={<People />}\r\n          onClick={() => statusModalShow(r)}\r\n        /> */}\r\n            <Tooltip title=\"Add Client\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<Person />}\r\n    // disabled={user?.user?.roleId !== 1}\r\n    onClick={() => showModalShow(r)}\r\n  />\r\n</Tooltip>\r\n        <Tooltip title=\"View Officials\">\r\n  <Button\r\n    size=\"middle\"\r\n    icon={<People />}\r\n    disabled={user?.user?.roleId !== 1}\r\n    onClick={() => statusModalShow(r)}\r\n  />\r\n</Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n \r\n  const options = [\r\n    { label: \"On-going\", value: \"on-going\" },\r\n    { label: \"Completed\", value: \"completed\" },\r\n    { label: \"Pending\", value: \"pending\" },\r\n  ];\r\n  const [statusModalVisible, setStatusModalVisible] = useState(false);\r\n  const [showModalVisible, setShowModalVisible] = useState(false);\r\n  const [record, setRecord] = useState();\r\n\r\n// const[record,setRecord ] = useState(\"\")\r\n\r\nconst [employee,setEmployee] = useState([])\r\nconst [selectedStatus, setSelectedStatus] = useState(\"\");\r\nconst [ clientModalVisible,setClientModalVisible] = useState(false)\r\nconst[companyName,setCompanyName] = useState(\"\")\r\nconst[clientName,setClientName] = useState(\"\")\r\n\r\nconst[email,setEmail] = useState(\"\")\r\nconst[clientCompany,setClientCompany] = useState(\"\")\r\n\r\nconst[companyAddress,setCompanyAddress] = useState(\"\")\r\nconst[companyContact,setCompanyContact] = useState(\"\")\r\n\r\nconst[projects,setProjects] = useState([])\r\nconst [data, setData] = useState([]);\r\n\r\n\r\nconst fetchData = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://54.81.250.98:8083/api/clients?companyId=${user?.user?.companyId}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n      console.log(response.data,\"data\");\r\n      const companyOptions = response.data.map(company => ({\r\n        value: company.id,\r\n        label: company.companyName,\r\n      }));\r\n      console.log(\"Options\",companyOptions);\r\n      setClients(companyOptions)\r\n      setData(response.data)\r\n  } catch (error) {\r\n   \r\n    console.error(\"Error fetching clients:\", error?.message);\r\n  }\r\n};\r\nconst fetchEmployees = async(record)=>{\r\n  try {\r\n    console.log(record,\"id\");\r\n    const response = await axios.get(\r\n      `http://54.81.250.98:8083/api/clients/official?companyId=${record.id}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n      console.log(response.data,\"data\");\r\n      setEmployee(response.data)\r\n  } catch (error) {\r\n    console.error(\"Error fetching employees:\", error?.message);\r\n  }\r\n}\r\nconst addClient = async () => {\r\n  // Perform form field validation\r\n  if (!companyName) {\r\n    // If any required field is missing, display a validation error notification\r\n    notification.error({\r\n      message: 'Validation Error',\r\n      description: 'Please fill in all required fields.',\r\n      style: {\r\n        backgroundColor: '#f5222d', // Red color background\r\n        color: '#fff', // White text color\r\n      },\r\n    });\r\n    return; // Exit early if validation fails\r\n  }\r\n\r\n  try {\r\n    // Make API request to add client\r\n    const response = await axios.post(\r\n      `http://54.81.250.98:8083/api/clients`,\r\n      {\r\n        companyName,\r\n        companyId: user?.user?.companyId,\r\n        companyAddress,\r\n        companyContact,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(response);\r\n\r\n    // Fetch updated data and close modal\r\n    fetchData();\r\n    clientModalCancel();\r\n    notification.success({\r\n      message: 'Successfully Created',\r\n      description: 'A client with this name is created.',\r\n      style: {\r\n        backgroundColor: '#52c41a', // Green color background\r\n        color: '#fff', // White text color\r\n      },\r\n    });\r\n  } catch (error) {\r\n    if (error.response?.status === 409) {\r\n      // Conflict error (HTTP 409)\r\n      notification.error({\r\n        message: 'Conflict Error',\r\n        description: 'A client with this name already exists. Please choose a different name.',\r\n        style: {\r\n          backgroundColor: '#f5222d', // Red color background\r\n          color: '#fff', // White text color\r\n        },\r\n      });\r\n    } else {\r\n      // Handle other errors\r\n      notification.error({\r\n        message: 'Error',\r\n        description: 'An error occurred while adding the client. Please try again.',\r\n        style: {\r\n          backgroundColor: '#f5222d', // Red color background\r\n          color: '#fff', // White text color\r\n        },\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst addClientOfficials = async () => {\r\n  if (!clientName || !email ) {\r\n    // If any required field is missing, display a validation error notification\r\n    notification.error({\r\n      message: 'Validation Error',\r\n      description: 'Please fill in all required fields.',\r\n      style: {\r\n        backgroundColor: '#f5222d', // Red color background\r\n        color: '#fff', // White text color\r\n      },\r\n    });\r\n    return; // Exit early if validation fails\r\n  }\r\n\r\n  try {\r\n\r\n    const response = await axios.post(\r\n      `http://54.81.250.98:8083/api/clients`,\r\n      {\r\n        clientName,\r\n        companyId:record.id,\r\n        Email:email,\r\n        userCompanyId:user.user.companyId\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n\r\n    // Handle the response as needed\r\n    console.log(response);\r\n    if(response?.data?.message==='This email already exist!'){\r\n      console.log('ERROR');\r\n      \r\n      notification.error({\r\n        message: `${response?.data?.message}`,\r\n        style: {\r\n          backgroundColor: '#ff0000', // Red color background\r\n          color: '#fff', // White text color\r\n        },\r\n      }\r\n    )\r\n    }\r\n    else{\r\n      console.log('SUCCESS');\r\n    notification.success({\r\n      message: `${response?.data?.message}`,\r\n      style: {\r\n        backgroundColor: '#52c41a', // Red color background\r\n        color: '#fff', // White text color\r\n      },\r\n    }\r\n  )}\r\n    fetchData();\r\n    showModalCancel();\r\n  } catch (error) {\r\n    // Handle errors\r\n    console.error(\"Error adding client official:\", error);\r\n    // message.error(\"Error adding user\");\r\n  }\r\n}\r\nconst fetchProjects = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://54.81.250.98:8083/api/projects?companyId=${user?.user?.companyId}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n\r\n    // Use Set to store unique titles\r\n    const uniqueTitlesSet = new Set();\r\n\r\n    const options = response?.data.reduce((acc, item) => {\r\n      // Check if the title is not in the Set\r\n      if (!uniqueTitlesSet.has(item.title)) {\r\n        // Add title to the Set\r\n        uniqueTitlesSet.add(item.title);\r\n\r\n        // Push the option to the result array\r\n        acc.push({ value: item.id, label: item.title, code: item.code });\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n    setProjects(options); // Assuming the response.data is an array of projects\r\n  } catch (error) {\r\n    console.error(\"Error fetching departments:\", error?.message);\r\n  }\r\n};\r\n\r\nuseEffect(()=>{\r\n  setUser(JSON.parse(localStorage?.getItem(\"user\")));\r\n  fetchProjects()\r\n  fetchData()\r\n},[])\r\n\r\nconst clientModalShow = () => {\r\n  setClientModalVisible(true);\r\n};\r\n\r\nconst clientModalCancel = () => {\r\n  setClientModalVisible(false);\r\n};\r\n\r\nconst showModalShow = (r) => {\r\n  setRecord(r)\r\n  setShowModalVisible(true);\r\n};\r\n\r\nconst showModalCancel = () => {\r\n  setShowModalVisible(false);\r\n};\r\n\r\nconst statusModalShow = (record) => {\r\n  console.log(\"record\",record);\r\n  // setRecord(record)\r\n  console.log(record,\"recordingggg\");\r\n  fetchEmployees(record)\r\n  setStatusModalVisible(true);\r\n};\r\n\r\nconst statusModalCancel = () => {\r\n  setSelectedStatus(\"\");\r\n  setStatusModalVisible(false);\r\n};\r\nconst handleStatusChange = (selectedStatus) => {\r\n  // Perform your logic to update the status here\r\n  // You can use the selectedStatus along with the record data\r\n  // to update the status in the data array or make an API call\r\n  // After updating, close the modal using statusModalCancel()\r\n  statusModalCancel();\r\n};\r\n  return <>\r\n<Modal\r\n  title=\"Employees\"\r\n  width={400}\r\n  centered\r\n  visible={statusModalVisible}\r\n  onCancel={statusModalCancel}\r\n  footer={null}\r\n  closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\r\n>\r\n  <Row justify=\"space-between\" align=\"center\">\r\n    <Col span={30}>\r\n      <Form layout=\"vertical\" name=\"basic\">\r\n        <FormItem>\r\n          <h3>Our Employees</h3>\r\n          <ul>\r\n            {employee.map((rec, index) => (\r\n              <li key={index}>\r\n                <strong>{rec.clientName}</strong> - <span style={{ color: 'blue' }}>{rec.Email}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </FormItem>        \r\n        <Row>\r\n          <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n            <Button block onClick={statusModalCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Col>\r\n  </Row>\r\n</Modal>\r\n\r\n\r\n\r\n<Modal\r\n        title=\"Add Company\"\r\n        width={416}\r\n        centered\r\n        visible={clientModalVisible}\r\n        onCancel={clientModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Form form={form}  onFinish={handleSubmit}layout=\"vertical\" name=\"basic\">\r\n          <Form.Item\r\n            label=\"Company Name:\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Company Name!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={companyName}\r\n              onChange={(e) => setCompanyName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Address :\"\r\n            name=\"companyAddress\"\r\n          >\r\n            <Input\r\n              id=\"companyAddress\"\r\n              value={companyAddress}\r\n              onChange={(e) => setCompanyAddress(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Contact :\"\r\n            name=\"companyContact\"\r\n          >\r\n            <Input\r\n              id=\"companyContact\"\r\n              value={companyContact}\r\n              onChange={(e) => setCompanyContact(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Row>\r\n            <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n              <Button\r\n                block\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                // onClick={() => addClient()}\r\n              >\r\n                Add Company\r\n              </Button>\r\n            </Col>\r\n            <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n              <Button block onClick={clientModalCancel}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        title=\"Add Client\"\r\n        width={416}\r\n        centered\r\n        visible={showModalVisible}\r\n        onCancel={showModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Form form={officialform} onFinish={handleOfficialSubmit} layout=\"vertical\" name=\"basic\">\r\n          <Form.Item\r\n            label=\"Client Name:\"\r\n            name=\"clientName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Name!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={clientName}\r\n              onChange={(e) => setClientName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email :\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          {/* <Form.Item\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Company\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Select\r\n                  options={clients}\r\n                  value={clientCompany}\r\n                  onChange={(value) => setClientCompany(value)}\r\n                />              \r\n                </Form.Item>\r\n                 */}\r\n          {/* <Form.Item\r\n            label=\"Contact :\"\r\n            name=\"companyContact\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your -Contact!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              id=\"companyContact\"\r\n              value={companyContact}\r\n              onChange={(e) => setCompanyContact(e.target.value)}\r\n            />\r\n          </Form.Item> */}\r\n\r\n          <Row>\r\n            <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n              <Button\r\n                block\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                // onClick={() => addClientOfficials()}\r\n              >\r\n                Add Client\r\n              </Button>\r\n            </Col>\r\n            \r\n            <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n              <Button block onClick={showModalCancel}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n\r\n\r\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={clientModalShow}\r\n          style={{ marginRight: '10px' }}\r\n\r\n          disabled={user?.user?.roleId != 1}\r\n        >\r\n          Add Company\r\n        </Button>\r\n\r\n        {/* <Button\r\n          type=\"primary\"\r\n          onClick={showModalShow}\r\n          disabled={user?.user?.roleId != 1}\r\n        >\r\n          Add Client\r\n        </Button> */}\r\n      </div>\r\n{user?.user?.roleId === 1 ? (\r\n  \r\n        <Table columns={columns} dataSource={data} bordered size=\"middle\"\r\n        title={() => 'All Clients Information'}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <Divider />\r\n          <p>You do not have permissions to view.</p>\r\n        </div>\r\n      )}\r\n  \r\n  </>;\r\n}"],"names":["props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","_jsx","Col","children","_jsxs","Breadcrumb","className","Item","Link","to","Projects","_localStorage","_user$user5","_user$user6","user","setUser","useState","JSON","parse","localStorage","getItem","clients","setClients","form","Form","useForm","officialform","columns","title","dataIndex","key","render","text","_","r","_user$user","Space","size","Tooltip","Button","icon","Person","onClick","showModalShow","People","disabled","roleId","statusModalShow","statusModalVisible","setStatusModalVisible","showModalVisible","setShowModalVisible","record","setRecord","employee","setEmployee","selectedStatus","setSelectedStatus","clientModalVisible","setClientModalVisible","companyName","setCompanyName","clientName","setClientName","email","setEmail","clientCompany","setClientCompany","companyAddress","setCompanyAddress","companyContact","setCompanyContact","projects","setProjects","data","setData","fetchData","async","_user$user2","response","axios","concat","companyId","headers","Authorization","accessToken","console","log","companyOptions","map","company","value","id","label","error","message","addClient","_user$user3","clientModalCancel","notification","success","description","style","backgroundColor","color","_error$response","status","addClientOfficials","_response$data","Email","userCompanyId","_response$data2","_response$data3","showModalCancel","useEffect","_localStorage2","_user$user4","uniqueTitlesSet","Set","options","reduce","acc","item","has","add","push","code","fetchProjects","fetchEmployees","statusModalCancel","_Fragment","Modal","width","centered","visible","onCancel","footer","closeIcon","RiCloseFill","Row","justify","align","span","layout","name","FormItem","rec","index","md","block","onFinish","handleSubmit","validateFields","then","values","resetFields","rules","required","Input","onChange","e","target","type","htmlType","handleOfficialSubmit","textAlign","marginBottom","clientModalShow","marginRight","Table","dataSource","bordered","Divider"],"sourceRoot":""}