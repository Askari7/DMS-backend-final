{"version":3,"file":"static/js/7521.bb90f496.chunk.js","mappings":"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","sources":["view/main/widgets/charts/donutChart.jsx","view/main/widgets/charts/columnChart.jsx","view/main/widgets/charts/barChart.jsx","view/main/widgets/charts/radialbarChart.jsx","view/main/widgets/charts/index.jsx"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Row, Col, Dropdown, Menu } from \"antd\";\nimport Chart from \"react-apexcharts\";\nimport './index.css'\nexport default function DonutChart({ projects, projectCount ,projectsStatusCounts}) {\n  console.log(\"projects\",projects,\"projectCount\",projectCount,\"projectsStatusCounts\",projectsStatusCounts);\n  const [statusCounts, setStatusCounts] = useState([0, 0, 0]);\n  const [progress, setProgress] = useState(\"\");\n\n  useEffect(() => {\n    if (projects && projects.length > 0) {\n      let initializedCount = 0;\n      let completedCount = 0;\n      let ongoingCount = 0;\n\n      projects.forEach((project) => {\n        switch (project.status) {\n          case \"Initialized\":\n            initializedCount++;\n            break;\n          case \"Completed\":\n            completedCount++;\n            break;\n          case \"Ongoing\":\n            ongoingCount++;\n            break;\n          default:\n            break;\n        }\n      });\n\n      setStatusCounts([initializedCount, completedCount, ongoingCount]);\n      console.log(projects,'log');\n      if(projects[0].projectId){\n        setProgress(\"MDR Progress\")\n      }else{\n        setProgress(\"Project Progress\")\n      } \n    }\n  }, [projects]);\n\n  const menu = (\n    <Menu>\n      <Menu.Item>Last 7 Days</Menu.Item>\n      <Menu.Item>Last Month</Menu.Item>\n      <Menu.Item>Last Year</Menu.Item>\n    </Menu>\n  );\n\n  useEffect(() => {\n    // console.log(\"Series prop received by Chart component:\", statusCounts);\n  }, [statusCounts]);\n\n  const [data] = useState({\n    series: statusCounts,\n    options: {\n      \n\n      chart: {\n        dropShadow: {\n          enabled: true,\n          top: 0,\n          left: 0,\n          blur: 1.5,\n          opacity: 0.3\n          \n        },\n        fontFamily: \"Manrope, sans-serif\",\n        type: \"donut\",\n        toolbar: {\n          show: true,\n        },\n        zoom: {\n          enabled: true,\n        },\n      },\n      colors: [\"#0010F7\", \"#55B1F3\", \"#1BE7FF\"],\n\n      labels: [\"Initialized\", \"Completed\", \" Ongoing\"],\n\n      dataLabels: {\n        style: {\n          colors: ['#55B1F3', '#0010F7', '#1BE7FF']\n        },\n        enabled: true,\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"70%\",\n            labels: {\n              show: true,\n              name: {\n                fontSize: \"2rem\",\n              },\n              value: {\n                fontSize: \"16px\",\n                formatter(val) {\n                  return `${val}`;\n                },\n              },\n              total: {\n                show: true,\n                fontSize: \"16px\",\n                label: \"Total\",\n                formatter: function (w) {\n                  return `${w.globals.seriesTotals.reduce((a, b) => {\n                    return a + b;\n                  })}`;\n                },\n              },\n            },\n          },\n        },\n      },\n      \n\n      legend: {\n        itemMargin: {\n          horizontal: 24,\n          vertical: 12,\n        },\n        horizontalAlign: \"center\",\n        position: \"bottom\",\n        fontSize: \"18px\",\n\n        markers: {\n          radius: 12,\n        },\n      },\n    },\n  });\n\n return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col span={24}>\n          <Row justify=\"space-between\" align=\"top\">\n            <Col>\n              <h4 className=\"hp-mr-8\">{progress}</h4>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <div id=\"chart\" className=\"hp-donut-chart\">\n            <Chart options={data.options} series={statusCounts} type=\"donut\" height={398} legend=\"legend\" />\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { Card, Row, Col, DatePicker } from \"antd\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\nexport default function ColumnChart({ inputData, documents,completed,remaining}) {\n  // console.log(documents,completed,remaining,\"getting \");\n  console.log(inputData,\"getting \");\n\n  const [informtion, setInformation] = useState([]);\n  const [documentss, setDocuments] = useState([documents]);\n  const [remain, setRemaining] = useState([]);\n  const [complete, setCompleted] = useState([]);\n\n  const [filteredData, setFilteredData] = useState([]);\n\n  \n\n\nuseEffect(() => {\n  if (inputData && inputData.length > 0) {\n    // Extract titles from inputData\n    const titlesArray = inputData.map(obj => obj.title);\n  \n    // Update state with titlesArray\n    console.log(titlesArray,'titlesArray');\n    setInformation(titlesArray);    \n  }\n}, [inputData]);\n\n\nuseEffect(() => {\n\n  if (documents && documents.length > 0) {\n\n      const completedCounts = [];\n      const remainingCounts = [];\n    for (const document of documents) {\n      let completedCount = 0;\n      let remainingCount = 0;\n\n      for (const statusArray of document.map(doc => doc.status)) {\n        console.log(statusArray,\"array\");\n          if (statusArray === \"Completed\") {\n            completedCount++;\n          } else {\n            remainingCount++;\n          }\n        }\n\n      completedCounts.push(completedCount);\n      remainingCounts.push(remainingCount);\n    }\n\n    console.log(\"Completed Counts:\", completedCounts);\n    console.log(\"Remaining Counts:\", remainingCounts);\n\n    setCompleted(completedCounts);\n    setRemaining(remainingCounts);\n  }\n  setDocuments(documents)\n}, [documents]);\n\n// console.log(inputData, \"inputData\");\n// console.log(informtion, \"information\");\n\n// Function to filter data based on year\nconst filterDataByYear = (dateString) => {\n\n  if (dateString === '') {\n    setDocuments(documents)\n    update(documents)\n    return;\n  }\n\n  console.log(documentss,'documentss');\n  console.log(dateString, 'dateString');\n  const filtered = documentss.map(subArray => {\n    return subArray.filter(item => {\n      console.log(item,'item',item.id);\n      const startingYear = item.startedDate.substring(0, 4); // Extracting the year from the date string\n      return startingYear === dateString;\n    });\n  });\n  console.log(complete,remain);\n  setFilteredData(filtered);\n  update(filtered)\n};\n  function update(filtered){\n    const filteredArray = []\n    if (filtered && filtered.length > 0) {\n      console.log(filtered,'filtered');\n      const completedCounts = [];\n      const remainingCounts = [];\n    for (const document of filtered) {\n      console.log(document,'document');\n      let completedCount = 0;\n      let remainingCount = 0;\n\n      for (const statusArray of document.map(doc => doc.status)) {\n        console.log(statusArray,\"array\");\n          if (statusArray === \"Completed\") {\n            completedCount++;\n          } else {\n            remainingCount++;\n          }\n        }\n\n      completedCounts.push(completedCount);\n      remainingCounts.push(remainingCount);\n    }\n\n    console.log(\"Completed Counts:\", completedCounts);\n    console.log(\"Remaining Counts:\", remainingCounts);\n\n    setCompleted(completedCounts);\n    setRemaining(remainingCounts);\n  }\n    // updateInfo(filteredArray)\n  }\n\n  // const updateInfo=(filteredArray)=>{\n  //   console.log(filteredArray,'array');\n  //   const info = inputData.filter(item => filteredArray.includes(item.id));\n  //   console.log(info,'info');\n  // }\n\n  function onChange(date, dateString) {\n    console.log(date, dateString,'isko peecha bhej');\n    filterDataByYear(dateString);\n  }\n\n  console.log(complete,remain);\n  const [data] = useState({\n    series: [\n      {\n        name: \"Approved Documents\",\n        data: complete,\n      },\n      {\n        name: \"Remaining Documents\",\n        data: remain,\n      },\n    ],\n    options: {\n      chart: {\n        fontFamily: \"Manrope, sans-serif\",\n        type: \"bar\",\n\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: true,\n        },\n      },\n      labels: {\n        style: {\n          fontSize: \"14px\",\n        },\n      },\n\n      dataLabels: {\n        enabled: true,\n      },\n\n      grid: {\n        borderColor: \"#DFE6E9\",\n        row: {\n          opacity: 0.5,\n        },\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          borderRadius: 2,\n          columnWidth: \"45%\",\n          endingShape: \"rounded\",\n        },\n        colors: {\n          backgroundBarColors: [\"#0063F7\", \"#00F7BF\"],\n        },\n      },\n\n      stroke: {\n        show: true,\n        width: 4,\n        colors: [\"transparent\"],\n      },\n      xaxis: {\n        axisTicks: {\n          show: true,\n          borderType: \"solid\",\n          color: \"#78909C\",\n          height: 6,\n          offsetX: 0,\n          offsetY: 0,\n        },\n\n        tickPlacement: \"between\",\n        labels: {\n          style: {\n            colors: [\"636E72\"],\n            fontSize: \"14px\",\n          },\n        },\n        categories: informtion,        \n      },\n      legend: {\n        horizontalAlign: \"right\",\n        offsetX: 40,\n        position: \"top\",\n        markers: {\n          radius: 12,\n        },\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [\"636E72\"],\n            fontSize: \"14px\",\n          },\n          formatter: (value) => {\n            return value;\n          },\n        },\n\n        min: 0,\n        max: 12,\n        tickAmount: 4,\n      },\n    },\n  });\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row justify=\"space-between\">\n            <Row align=\"bottom\" className=\"hp-pb-16\">\n              <h4 className=\"hp-mr-8\">Document Assessment</h4>\n            </Row>\n            \n            <Col>\n              <DatePicker\n                onChange={onChange}\n                picker=\"year\"\n                defaultValue={moment(\"2020\", \"YYYY\")}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <div id=\"chart\">\n          <Chart\n            options={{\n              ...data.options,\n              xaxis: {\n                ...data.options.xaxis,\n                categories: informtion,\n              },\n            }}\n            series={[\n              { name: \"Approved Documents\", data: complete },\n              { name: \"Remaining Documents\", data: remain },\n            ]}            \n            type=\"bar\"\n            height={350}\n            legend=\"legend\"\n          />\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Card, Row, Col, DatePicker } from \"antd\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment\";\n\nexport default function BarChart({departments,departmentsMembers}) {\n  function onChange(date, dateString) {\n    console.log(date, dateString);\n  }\n\n  const [data] = useState({\n    series: [\n      {\n        name: \"Department Size\",\n        data: departmentsMembers,\n      },\n    ],\n    options: {\n      chart: {\n        fontFamily: \"Manrope, sans-serif\",\n        type: \"bar\",\n\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: false,\n        },\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 8,\n          horizontal: true,\n        },\n      },\n      labels: {\n        style: {\n          fontSize: \"14px\",\n        },\n      },\n\n      dataLabels: {\n        enabled: true,\n      },\n\n      grid: {\n        borderColor: \"#DFE6E9\",\n        row: {\n          opacity: 0.5,\n        },\n      },\n      fill: {\n        opacity: 1,\n        type: \"solid\",\n      },\n      stroke: {\n        show: true,\n        width: 4,\n        curve: \"straight\",\n        colors: [\"transparent\"],\n      },\n      xaxis: {\n       axisTicks: {\n           show: false,\n        },\n\n        labels: {\n          style: {\n            colors: [\"636E72\"],\n            fontSize: \"12px\",\n          },\n        },\n        categories:departments\n      },\n      legend: {\n        horizontalAlign: \"right\",\n        offsetX: 40,\n        position: \"top\",\n        markers: {\n          radius: 12,\n        },\n      },\n      colors: [\"#0063F7\"],\n\n      yaxis: {\n        labels: {\n          style: {\n            colors: [\"636E72\"],\n            fontSize: \"14px\",\n          },\n        },\n      },\n    },\n  });\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col span={24}>\n          <Row justify=\"space-between\" align=\"top\">\n            <Col className=\"hp-pb-16\">\n              <h4 className=\"hp-mr-8\">Department Strengths</h4>\n            </Col>\n            \n            {/* <Col>\n              <DatePicker\n                onChange={onChange}\n                picker=\"week\"\n                defaultValue={moment(\"2019-06-03\", \"YYYY-MM-DD\")}\n              />\n            </Col> */}\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <div id=\"chart\">\n            <Chart\n              options={data.options}\n              series={[\n                {  data: departmentsMembers }\n              ]} \n              options={{\n              ...data.options,\n              xaxis: {\n                ...data.options.xaxis,\n                categories: departments,\n              },\n            }}\n              type=\"bar\"\n              height={350}\n              legend=\"legend\"\n            />\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Card, Row, Col, Dropdown, Menu } from \"antd\";\nimport { RiMoreFill } from \"react-icons/ri\";\nimport Chart from \"react-apexcharts\";\n\nexport default function RadialbarChart({inputData}) {\n  console.log(inputData,\"inputData\");\n  let total = inputData.reduce((acc, val) => acc + val, 0);\n\n  const menu = (\n    <Menu>\n      <Menu.Item>Last 7 Days</Menu.Item>\n      <Menu.Item>Last Month</Menu.Item>\n      <Menu.Item>Last Year</Menu.Item>\n    </Menu>\n  );\n\n  const [data] = useState({\n    series: inputData,\n    options: {\n      chart: {\n        fontFamily: \"Manrope, sans-serif\",\n        type: \"radialBar\",\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: [\"#00F7BF\", \"#0010F7\", \"#CC6CE7\",\"#7DDA58\"],\n\n      labels: [\"Reviewed Pending\", \"Approved Pending\", \"Reviewed\",\"Approved\"],\n\n      dataLabels: {\n        enabled: true,\n      },\n      stroke: {\n        lineCap: \"round\",\n      },\n\n      plotOptions: {\n        radialBar: {\n          size: 50,\n          hollow: {\n            size: \"20%\",\n          },\n\n          track: {\n            margin: 16,\n          },\n          dataLabels: {\n            show: true,\n            name: {\n              fontSize: \"16px\",\n            },\n            value: {\n              fontSize: \"16px\",\n            },\n            total: {\n              show: true,\n              fontSize: \"16px\",\n              label: \"Total\",\n              value : total\n            },\n          },\n        },\n      },\n\n      legend: {\n        show: true,\n        itemMargin: {\n          horizontal: 24,\n          vertical: 0,\n        },\n        horizontalAlign: \"center\",\n        position: \"bottom\",\n        fontSize: \"16px\",\n\n        markers: {\n          radius: 12,\n        },\n      },\n    },\n  });\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col span={24}>\n          <Row justify=\"space-between\" align=\"top\">\n            <Col>\n            <h4 className=\"hp-mr-8\">Action Items</h4>\n            </Col>\n\n            <Col>\n              <Dropdown overlay={menu} trigger={[\"click\"]}>\n                <RiMoreFill className=\"hp-text-color-dark-0\" size={24} onClick={(e) => e.preventDefault()} />\n              </Dropdown>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <div id=\"chart\" className=\"hp-donut-chart\">\n            <Chart\n              options={data.options}\n              series={inputData}\n              type=\"radialBar\"\n              height={400}\n              legend=\"legend\"\n            />\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React, { useEffect,useState } from \"react\";\nimport { Row, Col,Card,Breadcrumb } from \"antd\";\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport LineChart from \"./lineChart\";\nimport ColumnChart from \"./columnChart\";\nimport AreaChart from \"./areaChart\";\nimport ScatterChart from \"./scatterChart\";\nimport BarChart from \"./barChart\";\nimport CandlestickChart from \"./candlestickChart\";\nimport HeatmapChart from \"./heatmapChart\";\nimport DonutChart from \"./donutChart\";\nimport RadarChart from \"./radarChart\";\nimport RadialbarChart from \"./radialbarChart\";\nimport axios from \"axios\";\nimport Carousal from \"./Carousal\";\n\n\n\nexport default function Charts() {\n  const [user,setUser] = useState(JSON.parse(localStorage.getItem(\"user\")))\n  const [data,setData] = useState([])\n  const [remaining,setRemaining] = useState([])\n  const [completed,setCompleted] = useState([])\n  const [departments,setDepartments]= useState([])\n  const [departmentsMembers,setDepartmentsMembers] = useState([])\n  const [documents,setDocuments] = useState([])\n  const [projectsTitles,setProjectTitles] = useState([])\n  const [departmentUsers,setDepartmentUsers] = useState([])\n  \n  const [reviewCount_00,setReviewCount_0]= useState()\n  const [reviewCount_01,setReviewCount_1]= useState()\n  const [approverCount_00,setApproverCount_0] = useState()\n  const [approverCount_01,setApproverCount_1] = useState()\n  const [reviewApproveCount,setReviewApproveCount] = useState([])\n\n  const fetchData= async(req,res)=>{\n    try {\n      const response = await axios.get(\n        `http://54.81.250.98:8083/api/projects/info?companyId=${user?.user?.companyId}`,\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n      console.log(\"Response:\", response.data); \n      setData(response.data)\n      const titlesArray = response.data.projects.map(obj => obj.title);\n      const departments = response.data.departments.map(obj => obj.title);\n      const departmentMember = response.data.departments.map(obj => obj.noOfUsers);\n\n      const establishment_reviewer = response.data.establishments.map(obj => obj.reviewerId);\n      const establishment_approver = response.data.establishments.map(obj => obj.approverId);\n      const establishment_reviewer_status = response.data.establishments.map(obj => obj.reviewerStatus);\n      const establishment_approver_status = response.data.establishments.map(obj => obj.approverStatus);\n      const userReviewStatus = establishment_reviewer.map((reviewers, index) => {\n        const userIndex = reviewers.indexOf(user?.user?.id.toString());\n        return userIndex !== -1 ? establishment_reviewer_status[index][userIndex] : null;\n      });\n      \n      const userApproverStatus = establishment_approver.map((approvers, index) => {\n        const userIndex = approvers.indexOf(user?.user?.id.toString());\n        return userIndex !== -1 ? establishment_approver_status[index][userIndex] : null;\n      });\n      // Count the number of 1s in userReviewStatus\n      const reviewCount_1 = userReviewStatus.reduce((count, status) => count + (status === '1' ? 1 : 0), 0);\n      const reviewCount_0 = userReviewStatus.reduce((count, status) => count + (status === '0' ? 1 : 0), 0);\n\n      // Count the number of 1s in userApproverStatus\n      const approverCount_1 = userApproverStatus.reduce((count, status) => count + (status === '1' ? 1 : 0), 0);\n      const approverCount_0 = userApproverStatus.reduce((count, status) => count + (status === '0' ? 1 : 0), 0);\n\n      console.log(\"Review Count:\", reviewCount_0,reviewCount_1);\n      console.log(\"Approver Count:\", approverCount_0,approverCount_1);\n\n      setReviewApproveCount([reviewCount_0,approverCount_0,reviewCount_1,approverCount_1])\n\n      setReviewCount_0(reviewCount_0)\n      setReviewCount_1(reviewCount_1)\n      setApproverCount_0(approverCount_0)\n      setApproverCount_1(approverCount_1)\n\n\n      // console.log(establishment_approver,establishment_reviewer,\"id\");\n      // console.log(establishment_approver_status,establishment_reviewer_status,\"status\");\n      setDepartments(departments)\n      setDepartmentsMembers(departmentMember)\n      const completedCounts = [];\n      const remainingCounts = [];\n\n    for (const documents of response.data.documents) {\n      let completedCount = 0;\n      let remainingCount = 0;\n\n      for (const statusArray of documents.map(doc => doc.status)) {\n        console.log(statusArray,\"array\");\n          if (statusArray === \"Completed\") {\n            completedCount++;\n          } else {\n            remainingCount++;\n          }\n        }\n\n      completedCounts.push(completedCount);\n      remainingCounts.push(remainingCount);\n    }\n\n    console.log(\"Completed Counts:\", completedCounts);\n    console.log(\"Remaining Counts:\", remainingCounts);\n      setCompleted(completedCounts)\n      setRemaining(remainingCounts)\n\n      setProjectTitles(titlesArray)\n\n     } catch (error) {\n      console.error(error)\n    }\n  }\n \n  useEffect(()=>{\n    fetchData()\n  },[])\n\n\n  \n\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n      <Card title={`Hello! ${user.user.firstName} ${user.user.lastName}`} style={{fontSize:\"32px\" ,fontWeight:\"bolder\", width: '100%', margin: '0 auto',alignItems:\"center\",textAlign:\"center\" }}>\n  {/* <Breadcrumb>\n    <Breadcrumb.Item>Main</Breadcrumb.Item>\n    <Breadcrumb.Item>Widgets</Breadcrumb.Item>\n    <Breadcrumb.Item>Charts</Breadcrumb.Item>\n  </Breadcrumb> */}\n  {/* Add additional content here if needed */}\n</Card>\n\n      </Col>\n      {user && user?.user.roleId === 1 &&(\n  <Col xl={12} lg={24}>\n    <DonutChart projects={data.projects} projectCount={data.projectCount} projectsStatusCounts={data.projectsStatusCounts}/>\n  </Col>\n)}\n\n{user && user?.user.roleId === 1 && (\n  <Col xl={12} lg={24}>\n    <DonutChart projects={data.mdrs} projectCount={data.mdrCount} projectsStatusCounts={data.mdrsStatusCounts}/>\n  </Col>\n)}\n\n{user && user?.user.roleId === 1 &&(\n  <Col span={24}>\n    <ColumnChart inputData={data.projects} documents={data.documents} completed={completed} remaining={remaining}/>\n  </Col>\n)}\n\n{(user && user?.user.roleId === 1)|(user && user?.user.roleId === 2) &&(\n  <Col xl={12} lg={24}>\n    <RadialbarChart inputData={reviewApproveCount}/>\n  </Col>\n)}\n\n{(user && user?.user.roleId === 1 )&& (\n  <Col xl={12} lg={24}>\n    <BarChart departments={departments} departmentsMembers={departmentsMembers}/>\n  </Col>\n)}\n\n      {/* <Col span={24}>\n        <LineChart />\n      </Col>\n\n      <Col span={24}>\n        <AreaChart />\n      </Col> */}\n\n      {/* <Col span={24}>\n        <ScatterChart />\n      </Col> */}\n\n      {/* <Col xl={12} lg={24}>\n        <HeatmapChart />\n      </Col>\n      \n      <Col xl={12} lg={24}>\n        <RadarChart />\n      </Col> */}\n      \n      {/* <Col xl={12} lg={24}>\n        <CandlestickChart />\n      </Col> */}\n\n   \n    </Row>\n  );\n}\n"],"names":["DonutChart","_ref","projects","projectCount","projectsStatusCounts","console","log","statusCounts","setStatusCounts","useState","progress","setProgress","useEffect","length","initializedCount","completedCount","ongoingCount","forEach","project","status","projectId","Menu","Item","data","series","options","chart","dropShadow","enabled","top","left","blur","opacity","fontFamily","type","toolbar","show","zoom","colors","labels","dataLabels","style","plotOptions","pie","donut","size","name","fontSize","value","formatter","val","concat","total","label","w","globals","seriesTotals","reduce","a","b","legend","itemMargin","horizontal","vertical","horizontalAlign","position","markers","radius","_jsx","Card","className","children","_jsxs","Row","Col","span","justify","align","id","Chart","height","ColumnChart","inputData","documents","completed","remaining","informtion","setInformation","documentss","setDocuments","remain","setRemaining","complete","setCompleted","filteredData","setFilteredData","titlesArray","map","obj","title","completedCounts","remainingCounts","document","remainingCount","statusArray","doc","push","update","filtered","grid","borderColor","row","bar","borderRadius","columnWidth","endingShape","backgroundBarColors","stroke","width","xaxis","axisTicks","borderType","color","offsetX","offsetY","tickPlacement","categories","yaxis","min","max","tickAmount","DatePicker","onChange","date","dateString","subArray","filter","item","startedDate","substring","filterDataByYear","picker","defaultValue","moment","BarChart","departments","departmentsMembers","fill","curve","RadialbarChart","acc","menu","lineCap","radialBar","hollow","track","margin","Dropdown","overlay","trigger","RiMoreFill","onClick","e","preventDefault","Charts","user","setUser","JSON","parse","localStorage","getItem","setData","setDepartments","setDepartmentsMembers","projectsTitles","setProjectTitles","departmentUsers","setDepartmentUsers","reviewCount_00","setReviewCount_0","reviewCount_01","setReviewCount_1","approverCount_00","setApproverCount_0","approverCount_01","setApproverCount_1","reviewApproveCount","setReviewApproveCount","async","req","res","_user$user","response","axios","companyId","headers","Authorization","accessToken","departmentMember","noOfUsers","establishment_reviewer","establishments","reviewerId","establishment_approver","approverId","establishment_reviewer_status","reviewerStatus","establishment_approver_status","approverStatus","userReviewStatus","reviewers","index","_user$user2","userIndex","indexOf","toString","userApproverStatus","approvers","_user$user3","reviewCount_1","count","reviewCount_0","approverCount_1","approverCount_0","error","fetchData","gutter","firstName","lastName","fontWeight","alignItems","textAlign","roleId","xl","lg","mdrs","mdrCount","mdrsStatusCounts"],"sourceRoot":""}