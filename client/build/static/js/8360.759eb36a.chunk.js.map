{"version":3,"file":"static/js/8360.759eb36a.chunk.js","mappings":"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","sources":["layout/components/content/breadcrumbs/index.jsx","view/pages/clients/index.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { Col, Breadcrumb } from \"antd\";\r\n\r\nconst BreadCrumbs = (props) => {\r\n  const {\r\n    breadCrumbParent,\r\n    breadCrumbParent2,\r\n    breadCrumbParent3,\r\n    breadCrumbActive,\r\n  } = props;\r\n\r\n  return (\r\n    <Col>\r\n      <Breadcrumb className=\"hp-d-flex hp-flex-wrap\">\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/\">Home</Link>\r\n        </Breadcrumb.Item>\r\n\r\n        {breadCrumbParent === \"Components\" ? (\r\n          <Breadcrumb.Item>\r\n            <Link to=\"/components/components-page\">Components</Link>\r\n          </Breadcrumb.Item>\r\n        ) : (\r\n          <Breadcrumb.Item>{breadCrumbParent}</Breadcrumb.Item>\r\n        )}\r\n\r\n        {breadCrumbParent2 && (\r\n          <Breadcrumb.Item>{breadCrumbParent2}</Breadcrumb.Item>\r\n        )}\r\n\r\n        {breadCrumbParent3 && (\r\n          <Breadcrumb.Item>{breadCrumbParent3}</Breadcrumb.Item>\r\n        )}\r\n\r\n        <Breadcrumb.Item>{breadCrumbActive}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Space,\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Select,Divider,\r\n  DatePicker\r\n} from \"antd\";\r\nimport { RiMore2Line, RiMenuFill, RiCloseFill } from \"react-icons/ri\";\r\n\r\nimport Breadcrumbs from \"../../../layout/components/content/breadcrumbs\";\r\nimport CustomizedTables from \"../../common/BaseTable\";\r\nimport { options } from \"less\";\r\nimport FormItem from \"antd/lib/form/FormItem\";\r\n// import InfoProfile from \"./personel-information\";\r\n// import MenuProfile from \"./menu\";\r\n// import PasswordProfile from \"./password-change\";\r\n// import ProtectedAppPage from \"../Protected\";\r\n\r\n\r\nexport default function Projects() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n  const [clients, setClients] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      title: \"Company Name\",\r\n      dataIndex: \"companyName\",\r\n      key: \"companyName\",\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Company Address\",\r\n      dataIndex: \"companyAddress\",\r\n      key: \"companyAddress\",\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, r) => (\r\n        <Space size=\"middle\">\r\n          {/* <a>Change Actions</a> */}\r\n          <a onClick={() => statusModalShow(r)}>Show Employees</a>\r\n          {/* <a>Delete</a> */}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n \r\n  const options = [\r\n    { label: \"On-going\", value: \"on-going\" },\r\n    { label: \"Completed\", value: \"completed\" },\r\n    { label: \"Pending\", value: \"pending\" },\r\n  ];\r\n  const [statusModalVisible, setStatusModalVisible] = useState(false);\r\n  const [showModalVisible, setShowModalVisible] = useState(false);\r\n// const[record,setRecord ] = useState(\"\")\r\n\r\nconst [employee,setEmployee] = useState([])\r\nconst [selectedStatus, setSelectedStatus] = useState(\"\");\r\nconst [ clientModalVisible,setClientModalVisible] = useState(false)\r\nconst[companyName,setCompanyName] = useState(\"\")\r\nconst[clientName,setClientName] = useState(\"\")\r\n\r\nconst[email,setEmail] = useState(\"\")\r\nconst[clientCompany,setClientCompany] = useState(\"\")\r\n\r\nconst[companyAddress,setCompanyAddress] = useState(\"\")\r\nconst[companyContact,setCompanyContact] = useState(\"\")\r\n\r\nconst[projects,setProjects] = useState([])\r\nconst [data, setData] = useState([]);\r\n\r\n\r\nconst fetchData = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://54.81.250.98:8083/api/clients?companyId=${user?.user?.companyId}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n      console.log(response.data,\"data\");\r\n      const companyOptions = response.data.map(company => ({\r\n        value: company.id,\r\n        label: company.companyName,\r\n      }));\r\n      console.log(\"Options\",companyOptions);\r\n      setClients(companyOptions)\r\n      setData(response.data)\r\n  } catch (error) {\r\n   \r\n    console.error(\"Error fetching clients:\", error?.message);\r\n  }\r\n};\r\nconst fetchEmployees = async(record)=>{\r\n  try {\r\n    console.log(record,\"id\");\r\n    const response = await axios.get(\r\n      `http://54.81.250.98:8083/api/clients/official?companyId=${record.id}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n      console.log(response.data,\"data\");\r\n      setEmployee(response.data)\r\n  } catch (error) {\r\n    console.error(\"Error fetching employees:\", error?.message);\r\n  }\r\n}\r\nconst addClient = async () => {\r\n  try {\r\n\r\n    const response = await axios.post(\r\n      `http://54.81.250.98:8083/api/clients`,\r\n      {\r\n        companyName,\r\n        companyId:user?.user?.companyId,\r\n        companyAddress,\r\n        companyContact\r\n        // departmentId,\r\n        // inHouseStatus,\r\n        // clientStatus,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n\r\n    // Handle the response as needed\r\n    console.log(response);\r\n    message.success(response?.data?.message);\r\n    fetchData();\r\n    clientModalCancel();\r\n  } catch (error) {\r\n    // Handle errors\r\n    console.error(\"Error adding client:\", error);\r\n    // message.error(\"Error adding user\");\r\n  }\r\n}\r\n\r\nconst addClientOfficials = async () => {\r\n  try {\r\n\r\n    const response = await axios.post(\r\n      `http://54.81.250.98:8083/api/clients`,\r\n      {\r\n        clientName,\r\n        companyId:clientCompany,\r\n        Email:email,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n\r\n    // Handle the response as needed\r\n    console.log(response);\r\n    message.success(response?.data?.message);\r\n    fetchData();\r\n    showModalCancel();\r\n  } catch (error) {\r\n    // Handle errors\r\n    console.error(\"Error adding client official:\", error);\r\n    // message.error(\"Error adding user\");\r\n  }\r\n}\r\nconst fetchProjects = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://54.81.250.98:8083/api/projects?companyId=${user?.user?.companyId}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n\r\n    // Use Set to store unique titles\r\n    const uniqueTitlesSet = new Set();\r\n\r\n    const options = response?.data.reduce((acc, item) => {\r\n      // Check if the title is not in the Set\r\n      if (!uniqueTitlesSet.has(item.title)) {\r\n        // Add title to the Set\r\n        uniqueTitlesSet.add(item.title);\r\n\r\n        // Push the option to the result array\r\n        acc.push({ value: item.id, label: item.title, code: item.code });\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n    setProjects(options); // Assuming the response.data is an array of projects\r\n  } catch (error) {\r\n    console.error(\"Error fetching departments:\", error?.message);\r\n  }\r\n};\r\n\r\nuseEffect(()=>{\r\n  setUser(JSON.parse(localStorage?.getItem(\"user\")));\r\n  fetchProjects()\r\n  fetchData()\r\n},[])\r\n\r\nconst clientModalShow = () => {\r\n  setClientModalVisible(true);\r\n};\r\n\r\nconst clientModalCancel = () => {\r\n  setClientModalVisible(false);\r\n};\r\n\r\nconst showModalShow = () => {\r\n  setShowModalVisible(true);\r\n};\r\n\r\nconst showModalCancel = () => {\r\n  setShowModalVisible(false);\r\n};\r\n\r\nconst statusModalShow = (record) => {\r\n  console.log(\"record\",record);\r\n  // setRecord(record)\r\n  console.log(record,\"recordingggg\");\r\n  fetchEmployees(record)\r\n  setStatusModalVisible(true);\r\n};\r\n\r\nconst statusModalCancel = () => {\r\n  setSelectedStatus(\"\");\r\n  setStatusModalVisible(false);\r\n};\r\nconst handleStatusChange = (selectedStatus) => {\r\n  // Perform your logic to update the status here\r\n  // You can use the selectedStatus along with the record data\r\n  // to update the status in the data array or make an API call\r\n  // After updating, close the modal using statusModalCancel()\r\n  statusModalCancel();\r\n};\r\n  return <>\r\n<Modal\r\n  title=\"Employees\"\r\n  width={400}\r\n  centered\r\n  visible={statusModalVisible}\r\n  onCancel={statusModalCancel}\r\n  footer={null}\r\n  closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\r\n>\r\n  <Row justify=\"space-between\" align=\"center\">\r\n    <Col span={30}>\r\n      <Form layout=\"vertical\" name=\"basic\">\r\n        <FormItem>\r\n          <h3>Our Employees</h3>\r\n          <ul>\r\n            {employee.map((rec, index) => (\r\n              <li key={index}>\r\n                <strong>{rec.clientName}</strong> - <span style={{ color: 'blue' }}>{rec.Email}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </FormItem>        \r\n        <Row>\r\n          <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n            <Button block onClick={statusModalCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Col>\r\n  </Row>\r\n</Modal>\r\n\r\n\r\n\r\n<Modal\r\n        title=\"Add Company\"\r\n        width={416}\r\n        centered\r\n        visible={clientModalVisible}\r\n        onCancel={clientModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" name=\"basic\">\r\n          <Form.Item\r\n            label=\"Company Name:\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your firstName!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={companyName}\r\n              onChange={(e) => setCompanyName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Address :\"\r\n            name=\"companyAddress\"\r\n          >\r\n            <Input\r\n              id=\"companyAddress\"\r\n              value={companyAddress}\r\n              onChange={(e) => setCompanyAddress(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Contact :\"\r\n            name=\"companyContact\"\r\n          >\r\n            <Input\r\n              id=\"companyContact\"\r\n              value={companyContact}\r\n              onChange={(e) => setCompanyContact(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n                      {/* <Form.Item\r\n                label=\"Project Name\"\r\n                name=\"projectName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Project Name\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Select\r\n                  options={projects}\r\n                  value={projectId}\r\n                  onChange={(value) => setProjectId(value)}\r\n                />              \r\n                </Form.Item> */}\r\n\r\n          {/* <Form.Item label=\"InHouse Status\"  name=\"inhHouseStatus\">\r\n            <Select\r\n              defaultValue=\"Pending\"\r\n              options={options}\r\n              value={inHouseStatus}\r\n              onChange={(e) => setInHouseStatus(e)}\r\n            /></Form.Item>\r\n                      <Form.Item label=\"CLient Status\"  name=\"clientStatus\">\r\n            <Select\r\n              defaultValue=\"Pending\"\r\n              options={options}\r\n              value={clientStatus}\r\n              onChange={(e) => setClientStatus(e)}\r\n            /></Form.Item> */}\r\n\r\n          {/* <Form.Item\r\n          label=\"Select Department\"\r\n          rules={[\r\n           \r\n            {\r\n              required: true,\r\n              message: \"Please select one department!\",\r\n            },\r\n          ]}>\r\n          <Checkbox.Group options={departmentOptions} value={selectedDepartments} onChange={setSelectedDepartments} />\r\n        </Form.Item> */}\r\n\r\n  {/* <Form.Item label=\"Start Date\" name=\"startDate\" rules={[{ required: true, message: 'Please select start date' }]}>\r\n        <DatePicker style={{ width: '100%' }} />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"End Date\" name=\"endDate\" rules={[{ required: true, message: 'Please select end date' }]}>\r\n        <DatePicker style={{ width: '100%' }} />\r\n      </Form.Item> */}\r\n\r\n          <Row>\r\n            <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n              <Button\r\n                block\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onClick={() => addClient()}\r\n              >\r\n                Add Company\r\n              </Button>\r\n            </Col>\r\n            \r\n\r\n            <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n              <Button block onClick={clientModalCancel}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        title=\"Add Client\"\r\n        width={416}\r\n        centered\r\n        visible={showModalVisible}\r\n        onCancel={showModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" name=\"basic\">\r\n          <Form.Item\r\n            label=\"Client Name:\"\r\n            name=\"clientName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Name!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={clientName}\r\n              onChange={(e) => setClientName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email :\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Company\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Select\r\n                  options={clients}\r\n                  value={clientCompany}\r\n                  onChange={(value) => setClientCompany(value)}\r\n                />              \r\n                </Form.Item>\r\n                \r\n          {/* <Form.Item\r\n            label=\"Contact :\"\r\n            name=\"companyContact\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your -Contact!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              id=\"companyContact\"\r\n              value={companyContact}\r\n              onChange={(e) => setCompanyContact(e.target.value)}\r\n            />\r\n          </Form.Item> */}\r\n\r\n          <Row>\r\n            <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n              <Button\r\n                block\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onClick={() => addClientOfficials()}\r\n              >\r\n                Add Client\r\n              </Button>\r\n            </Col>\r\n            \r\n            <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n              <Button block onClick={showModalCancel}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n\r\n\r\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={clientModalShow}\r\n          style={{ marginRight: '10px' }}\r\n\r\n          disabled={user?.user?.roleId != 1}\r\n        >\r\n          Add Company\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={showModalShow}\r\n          disabled={user?.user?.roleId != 1}\r\n        >\r\n          Add Client\r\n        </Button>\r\n      </div>\r\n{user?.user?.roleId === 1 ? (\r\n  \r\n        <Table columns={columns} dataSource={data} bordered size=\"middle\"\r\n        title={() => 'All Clients Information'}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <Divider />\r\n          <p>You do not have permissions to view.</p>\r\n        </div>\r\n      )}\r\n  \r\n  </>;\r\n}"],"names":["props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","_jsx","Col","children","_jsxs","Breadcrumb","className","Item","Link","to","Projects","_localStorage","_user$user4","_user$user5","_user$user6","user","setUser","useState","JSON","parse","localStorage","getItem","clients","setClients","columns","title","dataIndex","key","render","text","_","r","Space","size","onClick","statusModalShow","statusModalVisible","setStatusModalVisible","showModalVisible","setShowModalVisible","employee","setEmployee","selectedStatus","setSelectedStatus","clientModalVisible","setClientModalVisible","companyName","setCompanyName","clientName","setClientName","email","setEmail","clientCompany","setClientCompany","companyAddress","setCompanyAddress","companyContact","setCompanyContact","projects","setProjects","data","setData","fetchData","async","_user$user","response","axios","concat","companyId","headers","Authorization","accessToken","console","log","companyOptions","map","company","value","id","label","error","message","useEffect","_localStorage2","_user$user3","uniqueTitlesSet","Set","options","reduce","acc","item","has","add","push","code","fetchProjects","clientModalCancel","showModalCancel","record","fetchEmployees","statusModalCancel","_Fragment","Modal","width","centered","visible","onCancel","footer","closeIcon","RiCloseFill","Row","justify","align","span","Form","layout","name","FormItem","rec","index","style","color","Email","md","Button","block","rules","required","Input","onChange","e","target","type","htmlType","_user$user2","_response$data","success","addClient","Select","_response$data2","addClientOfficials","textAlign","marginBottom","clientModalShow","marginRight","disabled","roleId","showModalShow","Table","dataSource","bordered","Divider"],"sourceRoot":""}