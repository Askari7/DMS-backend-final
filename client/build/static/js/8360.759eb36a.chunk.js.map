{"version":3,"file":"static/js/8360.759eb36a.chunk.js","mappings":"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","sources":["layout/components/content/breadcrumbs/index.jsx","view/pages/clients/index.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { Col, Breadcrumb } from \"antd\";\n\nconst BreadCrumbs = (props) => {\n  const {\n    breadCrumbParent,\n    breadCrumbParent2,\n    breadCrumbParent3,\n    breadCrumbActive,\n  } = props;\n\n  return (\n    <Col>\n      <Breadcrumb className=\"hp-d-flex hp-flex-wrap\">\n        <Breadcrumb.Item>\n          <Link to=\"/\">Home</Link>\n        </Breadcrumb.Item>\n\n        {breadCrumbParent === \"Components\" ? (\n          <Breadcrumb.Item>\n            <Link to=\"/components/components-page\">Components</Link>\n          </Breadcrumb.Item>\n        ) : (\n          <Breadcrumb.Item>{breadCrumbParent}</Breadcrumb.Item>\n        )}\n\n        {breadCrumbParent2 && (\n          <Breadcrumb.Item>{breadCrumbParent2}</Breadcrumb.Item>\n        )}\n\n        {breadCrumbParent3 && (\n          <Breadcrumb.Item>{breadCrumbParent3}</Breadcrumb.Item>\n        )}\n\n        <Breadcrumb.Item>{breadCrumbActive}</Breadcrumb.Item>\n      </Breadcrumb>\n    </Col>\n  );\n};\n\nexport default BreadCrumbs;","\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Row,\n  Col,\n  Form,\n  Space,\n  Table,\n  Input,\n  Button,\n  Modal,\n  message,\n  Select,Divider,\n  DatePicker\n} from \"antd\";\nimport { RiMore2Line, RiMenuFill, RiCloseFill } from \"react-icons/ri\";\n\nimport Breadcrumbs from \"../../../layout/components/content/breadcrumbs\";\nimport CustomizedTables from \"../../common/BaseTable\";\nimport { options } from \"less\";\nimport FormItem from \"antd/lib/form/FormItem\";\n// import InfoProfile from \"./personel-information\";\n// import MenuProfile from \"./menu\";\n// import PasswordProfile from \"./password-change\";\n// import ProtectedAppPage from \"../Protected\";\n\n\nexport default function Projects() {\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\n  const [clients, setClients] = useState([]);\n  const columns = [\n\n    {\n      title: \"Company Name\",\n      dataIndex: \"companyName\",\n      key: \"companyName\",\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: \"Company Address\",\n      dataIndex: \"companyAddress\",\n      key: \"companyAddress\",\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (_, r) => (\n        <Space size=\"middle\">\n          {/* <a>Change Actions</a> */}\n          <a onClick={() => statusModalShow(r)}>Show Employees</a>\n          {/* <a>Delete</a> */}\n        </Space>\n      ),\n    },\n  ];\n \n  const options = [\n    { label: \"On-going\", value: \"on-going\" },\n    { label: \"Completed\", value: \"completed\" },\n    { label: \"Pending\", value: \"pending\" },\n  ];\n  const [statusModalVisible, setStatusModalVisible] = useState(false);\n  const [showModalVisible, setShowModalVisible] = useState(false);\n// const[record,setRecord ] = useState(\"\")\n\nconst [employee,setEmployee] = useState([])\nconst [selectedStatus, setSelectedStatus] = useState(\"\");\nconst [ clientModalVisible,setClientModalVisible] = useState(false)\nconst[companyName,setCompanyName] = useState(\"\")\nconst[clientName,setClientName] = useState(\"\")\n\nconst[email,setEmail] = useState(\"\")\nconst[clientCompany,setClientCompany] = useState(\"\")\n\nconst[companyAddress,setCompanyAddress] = useState(\"\")\nconst[companyContact,setCompanyContact] = useState(\"\")\n\nconst[projects,setProjects] = useState([])\nconst [data, setData] = useState([]);\n\n\nconst fetchData = async () => {\n  try {\n    const response = await axios.get(\n      `http://54.81.250.98:8083/api/clients?companyId=${user?.user?.companyId}`,\n      {\n        headers: {\n          Authorization: user?.accessToken,\n          // Add other headers if needed\n        },\n      }\n    );\n      console.log(response.data,\"data\");\n      const companyOptions = response.data.map(company => ({\n        value: company.id,\n        label: company.companyName,\n      }));\n      console.log(\"Options\",companyOptions);\n      setClients(companyOptions)\n      setData(response.data)\n  } catch (error) {\n   \n    console.error(\"Error fetching clients:\", error?.message);\n  }\n};\nconst fetchEmployees = async(record)=>{\n  try {\n    console.log(record,\"id\");\n    const response = await axios.get(\n      `http://54.81.250.98:8083/api/clients/official?companyId=${record.id}`,\n      {\n        headers: {\n          Authorization: user?.accessToken,\n          // Add other headers if needed\n        },\n      }\n    );\n      console.log(response.data,\"data\");\n      setEmployee(response.data)\n  } catch (error) {\n    console.error(\"Error fetching employees:\", error?.message);\n  }\n}\nconst addClient = async () => {\n  try {\n\n    const response = await axios.post(\n      `http://54.81.250.98:8083/api/clients`,\n      {\n        companyName,\n        companyId:user?.user?.companyId,\n        companyAddress,\n        companyContact\n        // departmentId,\n        // inHouseStatus,\n        // clientStatus,\n      },\n      {\n        headers: {\n          Authorization: user?.accessToken,\n          // Add other headers if needed\n        },\n      }\n    );\n\n    // Handle the response as needed\n    console.log(response);\n    message.success(response?.data?.message);\n    fetchData();\n    clientModalCancel();\n  } catch (error) {\n    // Handle errors\n    console.error(\"Error adding client:\", error);\n    // message.error(\"Error adding user\");\n  }\n}\n\nconst addClientOfficials = async () => {\n  try {\n\n    const response = await axios.post(\n      `http://54.81.250.98:8083/api/clients`,\n      {\n        clientName,\n        companyId:clientCompany,\n        Email:email,\n      },\n      {\n        headers: {\n          Authorization: user?.accessToken,\n          // Add other headers if needed\n        },\n      }\n    );\n\n    // Handle the response as needed\n    console.log(response);\n    message.success(response?.data?.message);\n    fetchData();\n    showModalCancel();\n  } catch (error) {\n    // Handle errors\n    console.error(\"Error adding client official:\", error);\n    // message.error(\"Error adding user\");\n  }\n}\nconst fetchProjects = async () => {\n  try {\n    const response = await axios.get(\n      `http://54.81.250.98:8083/api/projects?companyId=${user?.user?.companyId}`,\n      {\n        headers: {\n          Authorization: user?.accessToken,\n          // Add other headers if needed\n        },\n      }\n    );\n    console.log(response);\n\n    // Use Set to store unique titles\n    const uniqueTitlesSet = new Set();\n\n    const options = response?.data.reduce((acc, item) => {\n      // Check if the title is not in the Set\n      if (!uniqueTitlesSet.has(item.title)) {\n        // Add title to the Set\n        uniqueTitlesSet.add(item.title);\n\n        // Push the option to the result array\n        acc.push({ value: item.id, label: item.title, code: item.code });\n      }\n\n      return acc;\n    }, []);\n    setProjects(options); // Assuming the response.data is an array of projects\n  } catch (error) {\n    console.error(\"Error fetching departments:\", error?.message);\n  }\n};\n\nuseEffect(()=>{\n  setUser(JSON.parse(localStorage?.getItem(\"user\")));\n  fetchProjects()\n  fetchData()\n},[])\n\nconst clientModalShow = () => {\n  setClientModalVisible(true);\n};\n\nconst clientModalCancel = () => {\n  setClientModalVisible(false);\n};\n\nconst showModalShow = () => {\n  setShowModalVisible(true);\n};\n\nconst showModalCancel = () => {\n  setShowModalVisible(false);\n};\n\nconst statusModalShow = (record) => {\n  console.log(\"record\",record);\n  // setRecord(record)\n  console.log(record,\"recordingggg\");\n  fetchEmployees(record)\n  setStatusModalVisible(true);\n};\n\nconst statusModalCancel = () => {\n  setSelectedStatus(\"\");\n  setStatusModalVisible(false);\n};\nconst handleStatusChange = (selectedStatus) => {\n  // Perform your logic to update the status here\n  // You can use the selectedStatus along with the record data\n  // to update the status in the data array or make an API call\n  // After updating, close the modal using statusModalCancel()\n  statusModalCancel();\n};\n  return <>\n<Modal\n  title=\"Employees\"\n  width={400}\n  centered\n  visible={statusModalVisible}\n  onCancel={statusModalCancel}\n  footer={null}\n  closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\n>\n  <Row justify=\"space-between\" align=\"center\">\n    <Col span={30}>\n      <Form layout=\"vertical\" name=\"basic\">\n        <FormItem>\n          <h3>Our Employees</h3>\n          <ul>\n            {employee.map((rec, index) => (\n              <li key={index}>\n                <strong>{rec.clientName}</strong> - <span style={{ color: 'blue' }}>{rec.Email}</span>\n              </li>\n            ))}\n          </ul>\n        </FormItem>        \n        <Row>\n          <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\n            <Button block onClick={statusModalCancel}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Col>\n  </Row>\n</Modal>\n\n\n\n<Modal\n        title=\"Add Company\"\n        width={416}\n        centered\n        visible={clientModalVisible}\n        onCancel={clientModalCancel}\n        footer={null}\n        closeIcon={\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n        }\n      >\n        <Form layout=\"vertical\" name=\"basic\">\n          <Form.Item\n            label=\"Company Name:\"\n            name=\"firstName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your firstName!\",\n              },\n            ]}\n          >\n            <Input\n              value={companyName}\n              onChange={(e) => setCompanyName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"Address :\"\n            name=\"companyAddress\"\n          >\n            <Input\n              id=\"companyAddress\"\n              value={companyAddress}\n              onChange={(e) => setCompanyAddress(e.target.value)}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Contact :\"\n            name=\"companyContact\"\n          >\n            <Input\n              id=\"companyContact\"\n              value={companyContact}\n              onChange={(e) => setCompanyContact(e.target.value)}\n            />\n          </Form.Item>\n                      {/* <Form.Item\n                label=\"Project Name\"\n                name=\"projectName\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please select Project Name\",\n                  },\n                ]}\n              >\n              <Select\n                  options={projects}\n                  value={projectId}\n                  onChange={(value) => setProjectId(value)}\n                />              \n                </Form.Item> */}\n\n          {/* <Form.Item label=\"InHouse Status\"  name=\"inhHouseStatus\">\n            <Select\n              defaultValue=\"Pending\"\n              options={options}\n              value={inHouseStatus}\n              onChange={(e) => setInHouseStatus(e)}\n            /></Form.Item>\n                      <Form.Item label=\"CLient Status\"  name=\"clientStatus\">\n            <Select\n              defaultValue=\"Pending\"\n              options={options}\n              value={clientStatus}\n              onChange={(e) => setClientStatus(e)}\n            /></Form.Item> */}\n\n          {/* <Form.Item\n          label=\"Select Department\"\n          rules={[\n           \n            {\n              required: true,\n              message: \"Please select one department!\",\n            },\n          ]}>\n          <Checkbox.Group options={departmentOptions} value={selectedDepartments} onChange={setSelectedDepartments} />\n        </Form.Item> */}\n\n  {/* <Form.Item label=\"Start Date\" name=\"startDate\" rules={[{ required: true, message: 'Please select start date' }]}>\n        <DatePicker style={{ width: '100%' }} />\n      </Form.Item>\n\n      <Form.Item label=\"End Date\" name=\"endDate\" rules={[{ required: true, message: 'Please select end date' }]}>\n        <DatePicker style={{ width: '100%' }} />\n      </Form.Item> */}\n\n          <Row>\n            <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\n              <Button\n                block\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={() => addClient()}\n              >\n                Add Company\n              </Button>\n            </Col>\n            \n\n            <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\n              <Button block onClick={clientModalCancel}>\n                Cancel\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n\n\n      <Modal\n        title=\"Add Client\"\n        width={416}\n        centered\n        visible={showModalVisible}\n        onCancel={showModalCancel}\n        footer={null}\n        closeIcon={\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n        }\n      >\n        <Form layout=\"vertical\" name=\"basic\">\n          <Form.Item\n            label=\"Client Name:\"\n            name=\"clientName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Name!\",\n              },\n            ]}\n          >\n            <Input\n              value={clientName}\n              onChange={(e) => setClientName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"Email :\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Email!\",\n              },\n            ]}\n          >\n            <Input\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Item>\n\n          <Form.Item\n                label=\"Company\"\n                name=\"company\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please select Company\",\n                  },\n                ]}\n              >\n              <Select\n                  options={clients}\n                  value={clientCompany}\n                  onChange={(value) => setClientCompany(value)}\n                />              \n                </Form.Item>\n                \n          {/* <Form.Item\n            label=\"Contact :\"\n            name=\"companyContact\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your -Contact!\",\n              },\n            ]}\n          >\n            <Input\n              id=\"companyContact\"\n              value={companyContact}\n              onChange={(e) => setCompanyContact(e.target.value)}\n            />\n          </Form.Item> */}\n\n          <Row>\n            <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\n              <Button\n                block\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={() => addClientOfficials()}\n              >\n                Add Client\n              </Button>\n            </Col>\n            \n            <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\n              <Button block onClick={showModalCancel}>\n                Cancel\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n\n\n\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" }}>\n        <Button\n          type=\"primary\"\n          onClick={clientModalShow}\n          style={{ marginRight: '10px' }}\n\n          disabled={user?.user?.roleId != 1}\n        >\n          Add Company\n        </Button>\n\n        <Button\n          type=\"primary\"\n          onClick={showModalShow}\n          disabled={user?.user?.roleId != 1}\n        >\n          Add Client\n        </Button>\n      </div>\n{user?.user?.roleId === 1 ? (\n  \n        <Table columns={columns} dataSource={data} bordered size=\"middle\"\n        title={() => 'All Clients Information'}\n        />\n      ) : (\n        <div>\n          <Divider />\n          <p>You do not have permissions to view.</p>\n        </div>\n      )}\n  \n  </>;\n}"],"names":["props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","_jsx","Col","children","_jsxs","Breadcrumb","className","Item","Link","to","Projects","_localStorage","_user$user4","_user$user5","_user$user6","user","setUser","useState","JSON","parse","localStorage","getItem","clients","setClients","columns","title","dataIndex","key","render","text","_","r","Space","size","onClick","statusModalShow","statusModalVisible","setStatusModalVisible","showModalVisible","setShowModalVisible","employee","setEmployee","selectedStatus","setSelectedStatus","clientModalVisible","setClientModalVisible","companyName","setCompanyName","clientName","setClientName","email","setEmail","clientCompany","setClientCompany","companyAddress","setCompanyAddress","companyContact","setCompanyContact","projects","setProjects","data","setData","fetchData","async","_user$user","response","axios","concat","companyId","headers","Authorization","accessToken","console","log","companyOptions","map","company","value","id","label","error","message","useEffect","_localStorage2","_user$user3","uniqueTitlesSet","Set","options","reduce","acc","item","has","add","push","code","fetchProjects","clientModalCancel","showModalCancel","record","fetchEmployees","statusModalCancel","_Fragment","Modal","width","centered","visible","onCancel","footer","closeIcon","RiCloseFill","Row","justify","align","span","Form","layout","name","FormItem","rec","index","style","color","Email","md","Button","block","rules","required","Input","onChange","e","target","type","htmlType","_user$user2","_response$data","success","addClient","Select","_response$data2","addClientOfficials","textAlign","marginBottom","clientModalShow","marginRight","disabled","roleId","showModalShow","Table","dataSource","bordered","Divider"],"sourceRoot":""}