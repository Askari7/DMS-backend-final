{"version":3,"file":"static/js/225.0de41c18.chunk.js","mappings":"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","sources":["../node_modules/antd/es/breadcrumb/BreadcrumbItem.js","../node_modules/antd/es/breadcrumb/BreadcrumbSeparator.js","../node_modules/antd/es/breadcrumb/Breadcrumb.js","../node_modules/antd/es/breadcrumb/index.js","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js","../node_modules/less/dist/less.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport DropDown from '../dropdown/dropdown';\nimport { ConfigContext } from '../config-provider';\n\nvar BreadcrumbItem = function BreadcrumbItem(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      _a$separator = _a.separator,\n      separator = _a$separator === void 0 ? '/' : _a$separator,\n      children = _a.children,\n      overlay = _a.overlay,\n      dropdownProps = _a.dropdownProps,\n      restProps = __rest(_a, [\"prefixCls\", \"separator\", \"children\", \"overlay\", \"dropdownProps\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n  /** If overlay is have Wrap a DropDown */\n\n  var renderBreadcrumbNode = function renderBreadcrumbNode(breadcrumbItem) {\n    if (overlay) {\n      return /*#__PURE__*/React.createElement(DropDown, _extends({\n        overlay: overlay,\n        placement: \"bottomCenter\"\n      }, dropdownProps), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-overlay-link\")\n      }, breadcrumbItem, /*#__PURE__*/React.createElement(DownOutlined, null)));\n    }\n\n    return breadcrumbItem;\n  };\n\n  var link;\n\n  if ('href' in restProps) {\n    link = /*#__PURE__*/React.createElement(\"a\", _extends({\n      className: \"\".concat(prefixCls, \"-link\")\n    }, restProps), children);\n  } else {\n    link = /*#__PURE__*/React.createElement(\"span\", _extends({\n      className: \"\".concat(prefixCls, \"-link\")\n    }, restProps), children);\n  } // wrap to dropDown\n\n\n  link = renderBreadcrumbNode(link);\n\n  if (children) {\n    return /*#__PURE__*/React.createElement(\"span\", null, link, separator && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-separator\")\n    }, separator));\n  }\n\n  return null;\n};\n\nBreadcrumbItem.__ANT_BREADCRUMB_ITEM = true;\nexport default BreadcrumbItem;","import * as React from 'react';\nimport { ConfigContext } from '../config-provider';\n\nvar BreadcrumbSeparator = function BreadcrumbSeparator(_ref) {\n  var children = _ref.children;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('breadcrumb');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-separator\")\n  }, children || '/');\n};\n\nBreadcrumbSeparator.__ANT_BREADCRUMB_SEPARATOR = true;\nexport default BreadcrumbSeparator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport BreadcrumbItem from './BreadcrumbItem';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nimport Menu from '../menu';\nimport { ConfigContext } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { cloneElement } from '../_util/reactNode';\n\nfunction getBreadcrumbName(route, params) {\n  if (!route.breadcrumbName) {\n    return null;\n  }\n\n  var paramsKeys = Object.keys(params).join('|');\n  var name = route.breadcrumbName.replace(new RegExp(\":(\".concat(paramsKeys, \")\"), 'g'), function (replacement, key) {\n    return params[key] || replacement;\n  });\n  return name;\n}\n\nfunction defaultItemRender(route, params, routes, paths) {\n  var isLastItem = routes.indexOf(route) === routes.length - 1;\n  var name = getBreadcrumbName(route, params);\n  return isLastItem ? /*#__PURE__*/React.createElement(\"span\", null, name) : /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\".concat(paths.join('/'))\n  }, name);\n}\n\nvar getPath = function getPath(path, params) {\n  path = (path || '').replace(/^\\//, '');\n  Object.keys(params).forEach(function (key) {\n    path = path.replace(\":\".concat(key), params[key]);\n  });\n  return path;\n};\n\nvar addChildPath = function addChildPath(paths) {\n  var childPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var params = arguments.length > 2 ? arguments[2] : undefined;\n\n  var originalPaths = _toConsumableArray(paths);\n\n  var path = getPath(childPath, params);\n\n  if (path) {\n    originalPaths.push(path);\n  }\n\n  return originalPaths;\n};\n\nvar Breadcrumb = function Breadcrumb(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      _a$separator = _a.separator,\n      separator = _a$separator === void 0 ? '/' : _a$separator,\n      style = _a.style,\n      className = _a.className,\n      routes = _a.routes,\n      children = _a.children,\n      _a$itemRender = _a.itemRender,\n      itemRender = _a$itemRender === void 0 ? defaultItemRender : _a$itemRender,\n      _a$params = _a.params,\n      params = _a$params === void 0 ? {} : _a$params,\n      restProps = __rest(_a, [\"prefixCls\", \"separator\", \"style\", \"className\", \"routes\", \"children\", \"itemRender\", \"params\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var crumbs;\n  var prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n\n  if (routes && routes.length > 0) {\n    // generated by route\n    var paths = [];\n    crumbs = routes.map(function (route) {\n      var path = getPath(route.path, params);\n\n      if (path) {\n        paths.push(path);\n      } // generated overlay by route.children\n\n\n      var overlay;\n\n      if (route.children && route.children.length) {\n        overlay = /*#__PURE__*/React.createElement(Menu, null, route.children.map(function (child) {\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: child.path || child.breadcrumbName\n          }, itemRender(child, params, routes, addChildPath(paths, child.path, params)));\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(BreadcrumbItem, {\n        overlay: overlay,\n        separator: separator,\n        key: path || route.breadcrumbName\n      }, itemRender(route, params, routes, paths));\n    });\n  } else if (children) {\n    crumbs = toArray(children).map(function (element, index) {\n      if (!element) {\n        return element;\n      }\n\n      devWarning(element.type && (element.type.__ANT_BREADCRUMB_ITEM === true || element.type.__ANT_BREADCRUMB_SEPARATOR === true), 'Breadcrumb', \"Only accepts Breadcrumb.Item and Breadcrumb.Separator as it's children\");\n      return cloneElement(element, {\n        separator: separator,\n        key: index\n      });\n    });\n  }\n\n  var breadcrumbClassName = classNames(prefixCls, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: breadcrumbClassName,\n    style: style\n  }, restProps), crumbs);\n};\n\nBreadcrumb.Item = BreadcrumbItem;\nBreadcrumb.Separator = BreadcrumbSeparator;\nexport default Breadcrumb;","import Breadcrumb from './Breadcrumb';\nexport default Breadcrumb;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  var className = _ref.className,\n      direction = _ref.direction,\n      index = _ref.index,\n      marginDirection = _ref.marginDirection,\n      children = _ref.children,\n      split = _ref.split,\n      wrap = _ref.wrap;\n\n  var _React$useContext = React.useContext(SpaceContext),\n      horizontalSize = _React$useContext.horizontalSize,\n      verticalSize = _React$useContext.verticalSize,\n      latestIndex = _React$useContext.latestIndex,\n      supportFlexGap = _React$useContext.supportFlexGap;\n\n  var style = {};\n\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = _extends(_extends({}, index < latestIndex && _defineProperty({}, marginDirection, horizontalSize / (split ? 2 : 1))), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n\n  if (children === null || children === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(className, \"-split\"),\n    style: style\n  }, split));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { ConfigContext } from '../config-provider';\nimport Item from './Item';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nexport var SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\n\nvar Space = function Space(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      space = _React$useContext.space,\n      directionConfig = _React$useContext.direction;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n      align = props.align,\n      className = props.className,\n      children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      customizePrefixCls = props.prefixCls,\n      split = props.split,\n      style = props.style,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? false : _props$wrap,\n      otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n\n  var supportFlexGap = useFlexGapSupport();\n\n  var _React$useMemo = React.useMemo(function () {\n    return (Array.isArray(size) ? size : [size, size]).map(function (item) {\n      return getNumberSize(item);\n    });\n  }, [size]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      horizontalSize = _React$useMemo2[0],\n      verticalSize = _React$useMemo2[1];\n\n  var childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight'; // Calculate latest one\n\n  var latestIndex = 0;\n  var nodes = childNodes.map(function (child, i) {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    /* eslint-disable react/no-array-index-key */\n\n\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: \"\".concat(itemClassName, \"-\").concat(i),\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n    /* eslint-enable */\n  });\n  var spaceContext = React.useMemo(function () {\n    return {\n      horizontalSize: horizontalSize,\n      verticalSize: verticalSize,\n      latestIndex: latestIndex,\n      supportFlexGap: supportFlexGap\n    };\n  }, [horizontalSize, verticalSize, latestIndex, supportFlexGap]); // =========================== Render ===========================\n\n  if (childNodes.length === 0) {\n    return null;\n  }\n\n  var gapStyle = {};\n\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap'; // Patch for gap not support\n\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn,\n    style: _extends(_extends({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes));\n};\n\nexport default Space;","/**\n * Less - Leaner CSS v3.13.1\n * http://lesscss.org\n * \n * Copyright (c) 2009-2020, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n  // Export a new default each time\r\n  var defaultOptions = (function () { return ({\r\n      /* Inline Javascript - @plugin still allowed */\r\n      javascriptEnabled: false,\r\n      /* Outputs a makefile import dependency list to stdout. */\r\n      depends: false,\r\n      /* (DEPRECATED) Compress using less built-in compression.\r\n    * This does an okay job but does not utilise all the tricks of\r\n    * dedicated css compression. */\r\n      compress: false,\r\n      /* Runs the less parser and just reports errors without any output. */\r\n      lint: false,\r\n      /* Sets available include paths.\r\n    * If the file in an @import rule does not exist at that exact location,\r\n    * less will look for it at the location(s) passed to this option.\r\n    * You might use this for instance to specify a path to a library which\r\n    * you want to be referenced simply and relatively in the less files. */\r\n      paths: [],\r\n      /* color output in the terminal */\r\n      color: true,\r\n      /* The strictImports controls whether the compiler will allow an @import inside of either\r\n    * @media blocks or (a later addition) other selector blocks.\r\n    * See: https://github.com/less/less.js/issues/656 */\r\n      strictImports: false,\r\n      /* Allow Imports from Insecure HTTPS Hosts */\r\n      insecure: false,\r\n      /* Allows you to add a path to every generated import and url in your css.\r\n    * This does not affect less import statements that are processed, just ones\r\n    * that are left in the output css. */\r\n      rootpath: '',\r\n      /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n    * that references an image, exactly the same URL will be output in the css.\r\n    * This option allows you to re-write URL's in imported files so that the\r\n    * URL is always relative to the base imported file */\r\n      rewriteUrls: false,\r\n      /* How to process math\r\n    *   0 always           - eagerly try to solve all operations\r\n    *   1 parens-division  - require parens for division \"/\"\r\n    *   2 parens | strict  - require parens for all operations\r\n    *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n    */\r\n      math: 0,\r\n      /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n      strictUnits: false,\r\n      /* Effectively the declaration is put at the top of your base Less file,\r\n    * meaning it can be used but it also can be overridden if this variable\r\n    * is defined in the file. */\r\n      globalVars: null,\r\n      /* As opposed to the global variable option, this puts the declaration at the\r\n    * end of your base file, meaning it will override anything defined in your Less file. */\r\n      modifyVars: null,\r\n      /* This option allows you to specify a argument to go on to every URL.  */\r\n      urlArgs: ''\r\n  }); });\n\n  function extractId(href) {\r\n      return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n          .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n          .replace(/^\\//, '') // Remove root /\r\n          .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n          .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n          .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n  }\r\n  function addDataAttr(options, tag) {\r\n      for (var opt in tag.dataset) {\r\n          if (tag.dataset.hasOwnProperty(opt)) {\r\n              if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                  options[opt] = tag.dataset[opt];\r\n              }\r\n              else {\r\n                  try {\r\n                      options[opt] = JSON.parse(tag.dataset[opt]);\r\n                  }\r\n                  catch (_) { }\r\n              }\r\n          }\r\n      }\r\n  }\n\n  var browser = {\r\n      createCSS: function (document, styles, sheet) {\r\n          // Strip the query-string\r\n          var href = sheet.href || '';\r\n          // If there is no title set, use the filename, minus the extension\r\n          var id = \"less:\" + (sheet.title || extractId(href));\r\n          // If this has already been inserted into the DOM, we may need to replace it\r\n          var oldStyleNode = document.getElementById(id);\r\n          var keepOldStyleNode = false;\r\n          // Create a new stylesheet node for insertion or (if necessary) replacement\r\n          var styleNode = document.createElement('style');\r\n          styleNode.setAttribute('type', 'text/css');\r\n          if (sheet.media) {\r\n              styleNode.setAttribute('media', sheet.media);\r\n          }\r\n          styleNode.id = id;\r\n          if (!styleNode.styleSheet) {\r\n              styleNode.appendChild(document.createTextNode(styles));\r\n              // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n              keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                  oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n          }\r\n          var head = document.getElementsByTagName('head')[0];\r\n          // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n          // to replace oldStyleNode with an updated stylesheet\r\n          if (oldStyleNode === null || keepOldStyleNode === false) {\r\n              var nextEl = sheet && sheet.nextSibling || null;\r\n              if (nextEl) {\r\n                  nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n              }\r\n              else {\r\n                  head.appendChild(styleNode);\r\n              }\r\n          }\r\n          if (oldStyleNode && keepOldStyleNode === false) {\r\n              oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n          }\r\n          // For IE.\r\n          // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n          // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n          if (styleNode.styleSheet) {\r\n              try {\r\n                  styleNode.styleSheet.cssText = styles;\r\n              }\r\n              catch (e) {\r\n                  throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n              }\r\n          }\r\n      },\r\n      currentScript: function (window) {\r\n          var document = window.document;\r\n          return document.currentScript || (function () {\r\n              var scripts = document.getElementsByTagName('script');\r\n              return scripts[scripts.length - 1];\r\n          })();\r\n      }\r\n  };\n\n  var addDefaultOptions = (function (window, options) {\r\n      // use options from the current script tag data attribues\r\n      addDataAttr(options, browser.currentScript(window));\r\n      if (options.isFileProtocol === undefined) {\r\n          options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n      }\r\n      // Load styles asynchronously (default: false)\r\n      //\r\n      // This is set to `false` by default, so that the body\r\n      // doesn't start loading before the stylesheets are parsed.\r\n      // Setting this to `true` can result in flickering.\r\n      //\r\n      options.async = options.async || false;\r\n      options.fileAsync = options.fileAsync || false;\r\n      // Interval between watch polls\r\n      options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n      options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n          window.location.hostname == '0.0.0.0' ||\r\n          window.location.hostname == 'localhost' ||\r\n          (window.location.port &&\r\n              window.location.port.length > 0) ||\r\n          options.isFileProtocol ? 'development'\r\n          : 'production');\r\n      var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n      if (dumpLineNumbers) {\r\n          options.dumpLineNumbers = dumpLineNumbers[1];\r\n      }\r\n      if (options.useFileCache === undefined) {\r\n          options.useFileCache = true;\r\n      }\r\n      if (options.onReady === undefined) {\r\n          options.onReady = true;\r\n      }\r\n      if (options.relativeUrls) {\r\n          options.rewriteUrls = 'all';\r\n      }\r\n  });\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n\n  Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\r\n  /* global Reflect, Promise */\r\n  var extendStatics = function (d, b) {\r\n      extendStatics = Object.setPrototypeOf ||\r\n          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n          function (d, b) { for (var p in b)\r\n              if (b.hasOwnProperty(p))\r\n                  d[p] = b[p]; };\r\n      return extendStatics(d, b);\r\n  };\r\n  function __extends(d, b) {\r\n      extendStatics(d, b);\r\n      function __() { this.constructor = d; }\r\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n  }\r\n  function __spreadArrays() {\r\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++)\r\n          s += arguments[i].length;\r\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n              r[k] = a[j];\r\n      return r;\r\n  }\n\n  var colors = {\r\n      'aliceblue': '#f0f8ff',\r\n      'antiquewhite': '#faebd7',\r\n      'aqua': '#00ffff',\r\n      'aquamarine': '#7fffd4',\r\n      'azure': '#f0ffff',\r\n      'beige': '#f5f5dc',\r\n      'bisque': '#ffe4c4',\r\n      'black': '#000000',\r\n      'blanchedalmond': '#ffebcd',\r\n      'blue': '#0000ff',\r\n      'blueviolet': '#8a2be2',\r\n      'brown': '#a52a2a',\r\n      'burlywood': '#deb887',\r\n      'cadetblue': '#5f9ea0',\r\n      'chartreuse': '#7fff00',\r\n      'chocolate': '#d2691e',\r\n      'coral': '#ff7f50',\r\n      'cornflowerblue': '#6495ed',\r\n      'cornsilk': '#fff8dc',\r\n      'crimson': '#dc143c',\r\n      'cyan': '#00ffff',\r\n      'darkblue': '#00008b',\r\n      'darkcyan': '#008b8b',\r\n      'darkgoldenrod': '#b8860b',\r\n      'darkgray': '#a9a9a9',\r\n      'darkgrey': '#a9a9a9',\r\n      'darkgreen': '#006400',\r\n      'darkkhaki': '#bdb76b',\r\n      'darkmagenta': '#8b008b',\r\n      'darkolivegreen': '#556b2f',\r\n      'darkorange': '#ff8c00',\r\n      'darkorchid': '#9932cc',\r\n      'darkred': '#8b0000',\r\n      'darksalmon': '#e9967a',\r\n      'darkseagreen': '#8fbc8f',\r\n      'darkslateblue': '#483d8b',\r\n      'darkslategray': '#2f4f4f',\r\n      'darkslategrey': '#2f4f4f',\r\n      'darkturquoise': '#00ced1',\r\n      'darkviolet': '#9400d3',\r\n      'deeppink': '#ff1493',\r\n      'deepskyblue': '#00bfff',\r\n      'dimgray': '#696969',\r\n      'dimgrey': '#696969',\r\n      'dodgerblue': '#1e90ff',\r\n      'firebrick': '#b22222',\r\n      'floralwhite': '#fffaf0',\r\n      'forestgreen': '#228b22',\r\n      'fuchsia': '#ff00ff',\r\n      'gainsboro': '#dcdcdc',\r\n      'ghostwhite': '#f8f8ff',\r\n      'gold': '#ffd700',\r\n      'goldenrod': '#daa520',\r\n      'gray': '#808080',\r\n      'grey': '#808080',\r\n      'green': '#008000',\r\n      'greenyellow': '#adff2f',\r\n      'honeydew': '#f0fff0',\r\n      'hotpink': '#ff69b4',\r\n      'indianred': '#cd5c5c',\r\n      'indigo': '#4b0082',\r\n      'ivory': '#fffff0',\r\n      'khaki': '#f0e68c',\r\n      'lavender': '#e6e6fa',\r\n      'lavenderblush': '#fff0f5',\r\n      'lawngreen': '#7cfc00',\r\n      'lemonchiffon': '#fffacd',\r\n      'lightblue': '#add8e6',\r\n      'lightcoral': '#f08080',\r\n      'lightcyan': '#e0ffff',\r\n      'lightgoldenrodyellow': '#fafad2',\r\n      'lightgray': '#d3d3d3',\r\n      'lightgrey': '#d3d3d3',\r\n      'lightgreen': '#90ee90',\r\n      'lightpink': '#ffb6c1',\r\n      'lightsalmon': '#ffa07a',\r\n      'lightseagreen': '#20b2aa',\r\n      'lightskyblue': '#87cefa',\r\n      'lightslategray': '#778899',\r\n      'lightslategrey': '#778899',\r\n      'lightsteelblue': '#b0c4de',\r\n      'lightyellow': '#ffffe0',\r\n      'lime': '#00ff00',\r\n      'limegreen': '#32cd32',\r\n      'linen': '#faf0e6',\r\n      'magenta': '#ff00ff',\r\n      'maroon': '#800000',\r\n      'mediumaquamarine': '#66cdaa',\r\n      'mediumblue': '#0000cd',\r\n      'mediumorchid': '#ba55d3',\r\n      'mediumpurple': '#9370d8',\r\n      'mediumseagreen': '#3cb371',\r\n      'mediumslateblue': '#7b68ee',\r\n      'mediumspringgreen': '#00fa9a',\r\n      'mediumturquoise': '#48d1cc',\r\n      'mediumvioletred': '#c71585',\r\n      'midnightblue': '#191970',\r\n      'mintcream': '#f5fffa',\r\n      'mistyrose': '#ffe4e1',\r\n      'moccasin': '#ffe4b5',\r\n      'navajowhite': '#ffdead',\r\n      'navy': '#000080',\r\n      'oldlace': '#fdf5e6',\r\n      'olive': '#808000',\r\n      'olivedrab': '#6b8e23',\r\n      'orange': '#ffa500',\r\n      'orangered': '#ff4500',\r\n      'orchid': '#da70d6',\r\n      'palegoldenrod': '#eee8aa',\r\n      'palegreen': '#98fb98',\r\n      'paleturquoise': '#afeeee',\r\n      'palevioletred': '#d87093',\r\n      'papayawhip': '#ffefd5',\r\n      'peachpuff': '#ffdab9',\r\n      'peru': '#cd853f',\r\n      'pink': '#ffc0cb',\r\n      'plum': '#dda0dd',\r\n      'powderblue': '#b0e0e6',\r\n      'purple': '#800080',\r\n      'rebeccapurple': '#663399',\r\n      'red': '#ff0000',\r\n      'rosybrown': '#bc8f8f',\r\n      'royalblue': '#4169e1',\r\n      'saddlebrown': '#8b4513',\r\n      'salmon': '#fa8072',\r\n      'sandybrown': '#f4a460',\r\n      'seagreen': '#2e8b57',\r\n      'seashell': '#fff5ee',\r\n      'sienna': '#a0522d',\r\n      'silver': '#c0c0c0',\r\n      'skyblue': '#87ceeb',\r\n      'slateblue': '#6a5acd',\r\n      'slategray': '#708090',\r\n      'slategrey': '#708090',\r\n      'snow': '#fffafa',\r\n      'springgreen': '#00ff7f',\r\n      'steelblue': '#4682b4',\r\n      'tan': '#d2b48c',\r\n      'teal': '#008080',\r\n      'thistle': '#d8bfd8',\r\n      'tomato': '#ff6347',\r\n      'turquoise': '#40e0d0',\r\n      'violet': '#ee82ee',\r\n      'wheat': '#f5deb3',\r\n      'white': '#ffffff',\r\n      'whitesmoke': '#f5f5f5',\r\n      'yellow': '#ffff00',\r\n      'yellowgreen': '#9acd32'\r\n  };\n\n  var unitConversions = {\r\n      length: {\r\n          'm': 1,\r\n          'cm': 0.01,\r\n          'mm': 0.001,\r\n          'in': 0.0254,\r\n          'px': 0.0254 / 96,\r\n          'pt': 0.0254 / 72,\r\n          'pc': 0.0254 / 72 * 12\r\n      },\r\n      duration: {\r\n          's': 1,\r\n          'ms': 0.001\r\n      },\r\n      angle: {\r\n          'rad': 1 / (2 * Math.PI),\r\n          'deg': 1 / 360,\r\n          'grad': 1 / 400,\r\n          'turn': 1\r\n      }\r\n  };\n\n  var data = { colors: colors, unitConversions: unitConversions };\n\n  /**\r\n   * The reason why Node is a class and other nodes simply do not extend\r\n   * from Node (since we're transpiling) is due to this issue:\r\n   *\r\n   * https://github.com/less/less.js/issues/3434\r\n   */\r\n  var Node = /** @class */ (function () {\r\n      function Node() {\r\n          this.parent = null;\r\n          this.visibilityBlocks = undefined;\r\n          this.nodeVisible = undefined;\r\n          this.rootNode = null;\r\n          this.parsed = null;\r\n          var self = this;\r\n          Object.defineProperty(this, 'currentFileInfo', {\r\n              get: function () { return self.fileInfo(); }\r\n          });\r\n          Object.defineProperty(this, 'index', {\r\n              get: function () { return self.getIndex(); }\r\n          });\r\n      }\r\n      Node.prototype.setParent = function (nodes, parent) {\r\n          function set(node) {\r\n              if (node && node instanceof Node) {\r\n                  node.parent = parent;\r\n              }\r\n          }\r\n          if (Array.isArray(nodes)) {\r\n              nodes.forEach(set);\r\n          }\r\n          else {\r\n              set(nodes);\r\n          }\r\n      };\r\n      Node.prototype.getIndex = function () {\r\n          return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n      };\r\n      Node.prototype.fileInfo = function () {\r\n          return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n      };\r\n      Node.prototype.isRulesetLike = function () {\r\n          return false;\r\n      };\r\n      Node.prototype.toCSS = function (context) {\r\n          var strs = [];\r\n          this.genCSS(context, {\r\n              add: function (chunk, fileInfo, index) {\r\n                  strs.push(chunk);\r\n              },\r\n              isEmpty: function () {\r\n                  return strs.length === 0;\r\n              }\r\n          });\r\n          return strs.join('');\r\n      };\r\n      Node.prototype.genCSS = function (context, output) {\r\n          output.add(this.value);\r\n      };\r\n      Node.prototype.accept = function (visitor) {\r\n          this.value = visitor.visit(this.value);\r\n      };\r\n      Node.prototype.eval = function () { return this; };\r\n      Node.prototype._operate = function (context, op, a, b) {\r\n          switch (op) {\r\n              case '+': return a + b;\r\n              case '-': return a - b;\r\n              case '*': return a * b;\r\n              case '/': return a / b;\r\n          }\r\n      };\r\n      Node.prototype.fround = function (context, value) {\r\n          var precision = context && context.numPrecision;\r\n          // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n          return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n      };\r\n      // Returns true if this node represents root of ast imported by reference\r\n      Node.prototype.blocksVisibility = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          return this.visibilityBlocks !== 0;\r\n      };\r\n      Node.prototype.addVisibilityBlock = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          this.visibilityBlocks = this.visibilityBlocks + 1;\r\n      };\r\n      Node.prototype.removeVisibilityBlock = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          this.visibilityBlocks = this.visibilityBlocks - 1;\r\n      };\r\n      // Turns on node visibility - if called node will be shown in output regardless\r\n      // of whether it comes from import by reference or not\r\n      Node.prototype.ensureVisibility = function () {\r\n          this.nodeVisible = true;\r\n      };\r\n      // Turns off node visibility - if called node will NOT be shown in output regardless\r\n      // of whether it comes from import by reference or not\r\n      Node.prototype.ensureInvisibility = function () {\r\n          this.nodeVisible = false;\r\n      };\r\n      // return values:\r\n      // false - the node must not be visible\r\n      // true - the node must be visible\r\n      // undefined or null - the node has the same visibility as its parent\r\n      Node.prototype.isVisible = function () {\r\n          return this.nodeVisible;\r\n      };\r\n      Node.prototype.visibilityInfo = function () {\r\n          return {\r\n              visibilityBlocks: this.visibilityBlocks,\r\n              nodeVisible: this.nodeVisible\r\n          };\r\n      };\r\n      Node.prototype.copyVisibilityInfo = function (info) {\r\n          if (!info) {\r\n              return;\r\n          }\r\n          this.visibilityBlocks = info.visibilityBlocks;\r\n          this.nodeVisible = info.nodeVisible;\r\n      };\r\n      return Node;\r\n  }());\r\n  Node.compare = function (a, b) {\r\n      /* returns:\r\n       -1: a < b\r\n       0: a = b\r\n       1: a > b\r\n       and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n      if ((a.compare) &&\r\n          // for \"symmetric results\" force toCSS-based comparison\r\n          // of Quoted or Anonymous if either value is one of those\r\n          !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n          return a.compare(b);\r\n      }\r\n      else if (b.compare) {\r\n          return -b.compare(a);\r\n      }\r\n      else if (a.type !== b.type) {\r\n          return undefined;\r\n      }\r\n      a = a.value;\r\n      b = b.value;\r\n      if (!Array.isArray(a)) {\r\n          return a === b ? 0 : undefined;\r\n      }\r\n      if (a.length !== b.length) {\r\n          return undefined;\r\n      }\r\n      for (var i = 0; i < a.length; i++) {\r\n          if (Node.compare(a[i], b[i]) !== 0) {\r\n              return undefined;\r\n          }\r\n      }\r\n      return 0;\r\n  };\r\n  Node.numericCompare = function (a, b) { return a < b ? -1\r\n      : a === b ? 0\r\n          : a > b ? 1 : undefined; };\n\n  //\r\n  // RGB Colors - #ff0014, #eee\r\n  //\r\n  var Color = function (rgb, a, originalForm) {\r\n      var self = this;\r\n      //\r\n      // The end goal here, is to parse the arguments\r\n      // into an integer triplet, such as `128, 255, 0`\r\n      //\r\n      // This facilitates operations and conversions.\r\n      //\r\n      if (Array.isArray(rgb)) {\r\n          this.rgb = rgb;\r\n      }\r\n      else if (rgb.length >= 6) {\r\n          this.rgb = [];\r\n          rgb.match(/.{2}/g).map(function (c, i) {\r\n              if (i < 3) {\r\n                  self.rgb.push(parseInt(c, 16));\r\n              }\r\n              else {\r\n                  self.alpha = (parseInt(c, 16)) / 255;\r\n              }\r\n          });\r\n      }\r\n      else {\r\n          this.rgb = [];\r\n          rgb.split('').map(function (c, i) {\r\n              if (i < 3) {\r\n                  self.rgb.push(parseInt(c + c, 16));\r\n              }\r\n              else {\r\n                  self.alpha = (parseInt(c + c, 16)) / 255;\r\n              }\r\n          });\r\n      }\r\n      this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n      if (typeof originalForm !== 'undefined') {\r\n          this.value = originalForm;\r\n      }\r\n  };\r\n  Color.prototype = new Node();\r\n  Color.prototype.luma = function () {\r\n      var r = this.rgb[0] / 255;\r\n      var g = this.rgb[1] / 255;\r\n      var b = this.rgb[2] / 255;\r\n      r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n      g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n      b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n      return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n  };\r\n  Color.prototype.genCSS = function (context, output) {\r\n      output.add(this.toCSS(context));\r\n  };\r\n  Color.prototype.toCSS = function (context, doNotCompress) {\r\n      var compress = context && context.compress && !doNotCompress;\r\n      var color;\r\n      var alpha;\r\n      var colorFunction;\r\n      var args = [];\r\n      // `value` is set if this color was originally\r\n      // converted from a named color string so we need\r\n      // to respect this and try to output named color too.\r\n      alpha = this.fround(context, this.alpha);\r\n      if (this.value) {\r\n          if (this.value.indexOf('rgb') === 0) {\r\n              if (alpha < 1) {\r\n                  colorFunction = 'rgba';\r\n              }\r\n          }\r\n          else if (this.value.indexOf('hsl') === 0) {\r\n              if (alpha < 1) {\r\n                  colorFunction = 'hsla';\r\n              }\r\n              else {\r\n                  colorFunction = 'hsl';\r\n              }\r\n          }\r\n          else {\r\n              return this.value;\r\n          }\r\n      }\r\n      else {\r\n          if (alpha < 1) {\r\n              colorFunction = 'rgba';\r\n          }\r\n      }\r\n      switch (colorFunction) {\r\n          case 'rgba':\r\n              args = this.rgb.map(function (c) { return clamp(Math.round(c), 255); }).concat(clamp(alpha, 1));\r\n              break;\r\n          case 'hsla':\r\n              args.push(clamp(alpha, 1));\r\n          case 'hsl':\r\n              color = this.toHSL();\r\n              args = [\r\n                  this.fround(context, color.h),\r\n                  this.fround(context, color.s * 100) + \"%\",\r\n                  this.fround(context, color.l * 100) + \"%\"\r\n              ].concat(args);\r\n      }\r\n      if (colorFunction) {\r\n          // Values are capped between `0` and `255`, rounded and zero-padded.\r\n          return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n      }\r\n      color = this.toRGB();\r\n      if (compress) {\r\n          var splitcolor = color.split('');\r\n          // Convert color to short format\r\n          if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n              color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n          }\r\n      }\r\n      return color;\r\n  };\r\n  //\r\n  // Operations have to be done per-channel, if not,\r\n  // channels will spill onto each other. Once we have\r\n  // our result, in the form of an integer triplet,\r\n  // we create a new Color node to hold the result.\r\n  //\r\n  Color.prototype.operate = function (context, op, other) {\r\n      var rgb = new Array(3);\r\n      var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n      for (var c = 0; c < 3; c++) {\r\n          rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n      }\r\n      return new Color(rgb, alpha);\r\n  };\r\n  Color.prototype.toRGB = function () {\r\n      return toHex(this.rgb);\r\n  };\r\n  Color.prototype.toHSL = function () {\r\n      var r = this.rgb[0] / 255;\r\n      var g = this.rgb[1] / 255;\r\n      var b = this.rgb[2] / 255;\r\n      var a = this.alpha;\r\n      var max = Math.max(r, g, b);\r\n      var min = Math.min(r, g, b);\r\n      var h;\r\n      var s;\r\n      var l = (max + min) / 2;\r\n      var d = max - min;\r\n      if (max === min) {\r\n          h = s = 0;\r\n      }\r\n      else {\r\n          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n          switch (max) {\r\n              case r:\r\n                  h = (g - b) / d + (g < b ? 6 : 0);\r\n                  break;\r\n              case g:\r\n                  h = (b - r) / d + 2;\r\n                  break;\r\n              case b:\r\n                  h = (r - g) / d + 4;\r\n                  break;\r\n          }\r\n          h /= 6;\r\n      }\r\n      return { h: h * 360, s: s, l: l, a: a };\r\n  };\r\n  // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n  Color.prototype.toHSV = function () {\r\n      var r = this.rgb[0] / 255;\r\n      var g = this.rgb[1] / 255;\r\n      var b = this.rgb[2] / 255;\r\n      var a = this.alpha;\r\n      var max = Math.max(r, g, b);\r\n      var min = Math.min(r, g, b);\r\n      var h;\r\n      var s;\r\n      var v = max;\r\n      var d = max - min;\r\n      if (max === 0) {\r\n          s = 0;\r\n      }\r\n      else {\r\n          s = d / max;\r\n      }\r\n      if (max === min) {\r\n          h = 0;\r\n      }\r\n      else {\r\n          switch (max) {\r\n              case r:\r\n                  h = (g - b) / d + (g < b ? 6 : 0);\r\n                  break;\r\n              case g:\r\n                  h = (b - r) / d + 2;\r\n                  break;\r\n              case b:\r\n                  h = (r - g) / d + 4;\r\n                  break;\r\n          }\r\n          h /= 6;\r\n      }\r\n      return { h: h * 360, s: s, v: v, a: a };\r\n  };\r\n  Color.prototype.toARGB = function () {\r\n      return toHex([this.alpha * 255].concat(this.rgb));\r\n  };\r\n  Color.prototype.compare = function (x) {\r\n      return (x.rgb &&\r\n          x.rgb[0] === this.rgb[0] &&\r\n          x.rgb[1] === this.rgb[1] &&\r\n          x.rgb[2] === this.rgb[2] &&\r\n          x.alpha === this.alpha) ? 0 : undefined;\r\n  };\r\n  Color.prototype.type = 'Color';\r\n  function clamp(v, max) {\r\n      return Math.min(Math.max(v, 0), max);\r\n  }\r\n  function toHex(v) {\r\n      return \"#\" + v.map(function (c) {\r\n          c = clamp(Math.round(c), 255);\r\n          return (c < 16 ? '0' : '') + c.toString(16);\r\n      }).join('');\r\n  }\r\n  Color.fromKeyword = function (keyword) {\r\n      var c;\r\n      var key = keyword.toLowerCase();\r\n      if (colors.hasOwnProperty(key)) {\r\n          c = new Color(colors[key].slice(1));\r\n      }\r\n      else if (key === 'transparent') {\r\n          c = new Color([0, 0, 0], 0);\r\n      }\r\n      if (c) {\r\n          c.value = keyword;\r\n          return c;\r\n      }\r\n  };\n\n  var Paren = function (node) {\r\n      this.value = node;\r\n  };\r\n  Paren.prototype = new Node();\r\n  Paren.prototype.genCSS = function (context, output) {\r\n      output.add('(');\r\n      this.value.genCSS(context, output);\r\n      output.add(')');\r\n  };\r\n  Paren.prototype.eval = function (context) {\r\n      return new Paren(this.value.eval(context));\r\n  };\r\n  Paren.prototype.type = 'Paren';\n\n  var _noSpaceCombinators = {\r\n      '': true,\r\n      ' ': true,\r\n      '|': true\r\n  };\r\n  var Combinator = function (value) {\r\n      if (value === ' ') {\r\n          this.value = ' ';\r\n          this.emptyOrWhitespace = true;\r\n      }\r\n      else {\r\n          this.value = value ? value.trim() : '';\r\n          this.emptyOrWhitespace = this.value === '';\r\n      }\r\n  };\r\n  Combinator.prototype = new Node();\r\n  Combinator.prototype.genCSS = function (context, output) {\r\n      var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n      output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n  };\r\n  Combinator.prototype.type = 'Combinator';\n\n  var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n      this.combinator = combinator instanceof Combinator ?\r\n          combinator : new Combinator(combinator);\r\n      if (typeof value === 'string') {\r\n          this.value = value.trim();\r\n      }\r\n      else if (value) {\r\n          this.value = value;\r\n      }\r\n      else {\r\n          this.value = '';\r\n      }\r\n      this.isVariable = isVariable;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.setParent(this.combinator, this);\r\n  };\r\n  Element.prototype = new Node();\r\n  Element.prototype.accept = function (visitor) {\r\n      var value = this.value;\r\n      this.combinator = visitor.visit(this.combinator);\r\n      if (typeof value === 'object') {\r\n          this.value = visitor.visit(value);\r\n      }\r\n  };\r\n  Element.prototype.eval = function (context) {\r\n      return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  Element.prototype.clone = function () {\r\n      return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  Element.prototype.genCSS = function (context, output) {\r\n      output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n  };\r\n  Element.prototype.toCSS = function (context) {\r\n      if (context === void 0) { context = {}; }\r\n      var value = this.value;\r\n      var firstSelector = context.firstSelector;\r\n      if (value instanceof Paren) {\r\n          // selector in parens should not be affected by outer selector\r\n          // flags (breaks only interpolated selectors - see #1973)\r\n          context.firstSelector = true;\r\n      }\r\n      value = value.toCSS ? value.toCSS(context) : value;\r\n      context.firstSelector = firstSelector;\r\n      if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n          return '';\r\n      }\r\n      else {\r\n          return this.combinator.toCSS(context) + value;\r\n      }\r\n  };\r\n  Element.prototype.type = 'Element';\n\n  var Math$1 = {\r\n      ALWAYS: 0,\r\n      PARENS_DIVISION: 1,\r\n      PARENS: 2,\r\n      STRICT_LEGACY: 3\r\n  };\r\n  var RewriteUrls = {\r\n      OFF: 0,\r\n      LOCAL: 1,\r\n      ALL: 2\r\n  };\n\n  /**\r\n   * Returns the object type of the given payload\r\n   *\r\n   * @param {*} payload\r\n   * @returns {string}\r\n   */\r\n  function getType(payload) {\r\n      return Object.prototype.toString.call(payload).slice(8, -1);\r\n  }\r\n  /**\r\n   * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n   *\r\n   * @param {*} payload\r\n   * @returns {payload is Record<string, any>}\r\n   */\r\n  function isPlainObject(payload) {\r\n      if (getType(payload) !== 'Object')\r\n          return false;\r\n      return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n  }\r\n  /**\r\n   * Returns whether the payload is an array\r\n   *\r\n   * @param {any} payload\r\n   * @returns {payload is any[]}\r\n   */\r\n  function isArray(payload) {\r\n      return getType(payload) === 'Array';\r\n  }\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\r\n  function __spreadArrays$1() {\r\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++)\r\n          s += arguments[i].length;\r\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n              r[k] = a[j];\r\n      return r;\r\n  }\r\n  function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n      var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n          ? 'enumerable'\r\n          : 'nonenumerable';\r\n      if (propType === 'enumerable')\r\n          carry[key] = newVal;\r\n      if (includeNonenumerable && propType === 'nonenumerable') {\r\n          Object.defineProperty(carry, key, {\r\n              value: newVal,\r\n              enumerable: false,\r\n              writable: true,\r\n              configurable: true,\r\n          });\r\n      }\r\n  }\r\n  /**\r\n   * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n   *\r\n   * @export\r\n   * @template T\r\n   * @param {T} target Target can be anything\r\n   * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n   * @returns {T} the target with replaced values\r\n   * @export\r\n   */\r\n  function copy(target, options) {\r\n      if (options === void 0) {\r\n          options = {};\r\n      }\r\n      if (isArray(target))\r\n          return target.map(function (i) { return copy(i, options); });\r\n      if (!isPlainObject(target))\r\n          return target;\r\n      var props = Object.getOwnPropertyNames(target);\r\n      var symbols = Object.getOwnPropertySymbols(target);\r\n      return __spreadArrays$1(props, symbols).reduce(function (carry, key) {\r\n          if (isArray(options.props) && !options.props.includes(key)) {\r\n              return carry;\r\n          }\r\n          var val = target[key];\r\n          var newVal = copy(val, options);\r\n          assignProp(carry, key, newVal, target, options.nonenumerable);\r\n          return carry;\r\n      }, {});\r\n  }\n\n  /* jshint proto: true */\r\n  function getLocation(index, inputStream) {\r\n      var n = index + 1;\r\n      var line = null;\r\n      var column = -1;\r\n      while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n          column++;\r\n      }\r\n      if (typeof index === 'number') {\r\n          line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n      }\r\n      return {\r\n          line: line,\r\n          column: column\r\n      };\r\n  }\r\n  function copyArray(arr) {\r\n      var i;\r\n      var length = arr.length;\r\n      var copy = new Array(length);\r\n      for (i = 0; i < length; i++) {\r\n          copy[i] = arr[i];\r\n      }\r\n      return copy;\r\n  }\r\n  function clone(obj) {\r\n      var cloned = {};\r\n      for (var prop in obj) {\r\n          if (obj.hasOwnProperty(prop)) {\r\n              cloned[prop] = obj[prop];\r\n          }\r\n      }\r\n      return cloned;\r\n  }\r\n  function defaults(obj1, obj2) {\r\n      var newObj = obj2 || {};\r\n      if (!obj2._defaults) {\r\n          newObj = {};\r\n          var defaults_1 = copy(obj1);\r\n          newObj._defaults = defaults_1;\r\n          var cloned = obj2 ? copy(obj2) : {};\r\n          Object.assign(newObj, defaults_1, cloned);\r\n      }\r\n      return newObj;\r\n  }\r\n  function copyOptions(obj1, obj2) {\r\n      if (obj2 && obj2._defaults) {\r\n          return obj2;\r\n      }\r\n      var opts = defaults(obj1, obj2);\r\n      if (opts.strictMath) {\r\n          opts.math = Math$1.STRICT_LEGACY;\r\n      }\r\n      // Back compat with changed relativeUrls option\r\n      if (opts.relativeUrls) {\r\n          opts.rewriteUrls = RewriteUrls.ALL;\r\n      }\r\n      if (typeof opts.math === 'string') {\r\n          switch (opts.math.toLowerCase()) {\r\n              case 'always':\r\n                  opts.math = Math$1.ALWAYS;\r\n                  break;\r\n              case 'parens-division':\r\n                  opts.math = Math$1.PARENS_DIVISION;\r\n                  break;\r\n              case 'strict':\r\n              case 'parens':\r\n                  opts.math = Math$1.PARENS;\r\n                  break;\r\n              case 'strict-legacy':\r\n                  opts.math = Math$1.STRICT_LEGACY;\r\n          }\r\n      }\r\n      if (typeof opts.rewriteUrls === 'string') {\r\n          switch (opts.rewriteUrls.toLowerCase()) {\r\n              case 'off':\r\n                  opts.rewriteUrls = RewriteUrls.OFF;\r\n                  break;\r\n              case 'local':\r\n                  opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                  break;\r\n              case 'all':\r\n                  opts.rewriteUrls = RewriteUrls.ALL;\r\n                  break;\r\n          }\r\n      }\r\n      return opts;\r\n  }\r\n  function merge(obj1, obj2) {\r\n      for (var prop in obj2) {\r\n          if (obj2.hasOwnProperty(prop)) {\r\n              obj1[prop] = obj2[prop];\r\n          }\r\n      }\r\n      return obj1;\r\n  }\r\n  function flattenArray(arr, result) {\r\n      if (result === void 0) { result = []; }\r\n      for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n          var value = arr[i];\r\n          if (Array.isArray(value)) {\r\n              flattenArray(value, result);\r\n          }\r\n          else {\r\n              if (value !== undefined) {\r\n                  result.push(value);\r\n              }\r\n          }\r\n      }\r\n      return result;\r\n  }\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getLocation: getLocation,\n    copyArray: copyArray,\n    clone: clone,\n    defaults: defaults,\n    copyOptions: copyOptions,\n    merge: merge,\n    flattenArray: flattenArray\n  });\n\n  var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n  /**\r\n   * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n   * Besides standard .message it keeps some additional data like a path to the file where the error\r\n   * occurred along with line and column numbers.\r\n   *\r\n   * @class\r\n   * @extends Error\r\n   * @type {module.LessError}\r\n   *\r\n   * @prop {string} type\r\n   * @prop {string} filename\r\n   * @prop {number} index\r\n   * @prop {number} line\r\n   * @prop {number} column\r\n   * @prop {number} callLine\r\n   * @prop {number} callExtract\r\n   * @prop {string[]} extract\r\n   *\r\n   * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n   * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n   * @param {string} [currentFilename]\r\n   */\r\n  var LessError = function LessError(e, fileContentMap, currentFilename) {\r\n      Error.call(this);\r\n      var filename = e.filename || currentFilename;\r\n      this.message = e.message;\r\n      this.stack = e.stack;\r\n      if (fileContentMap && filename) {\r\n          var input = fileContentMap.contents[filename];\r\n          var loc = getLocation(e.index, input);\r\n          var line = loc.line;\r\n          var col = loc.column;\r\n          var callLine = e.call && getLocation(e.call, input).line;\r\n          var lines = input ? input.split('\\n') : '';\r\n          this.type = e.type || 'Syntax';\r\n          this.filename = filename;\r\n          this.index = e.index;\r\n          this.line = typeof line === 'number' ? line + 1 : null;\r\n          this.column = col;\r\n          if (!this.line && this.stack) {\r\n              var found = this.stack.match(anonymousFunc);\r\n              /**\r\n               * We have to figure out how this environment stringifies anonymous functions\r\n               * so we can correctly map plugin errors.\r\n               *\r\n               * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n               * being present or not, so we inject dummy params.\r\n               */\r\n              var func = new Function('a', 'throw new Error()');\r\n              var lineAdjust = 0;\r\n              try {\r\n                  func();\r\n              }\r\n              catch (e) {\r\n                  var match = e.stack.match(anonymousFunc);\r\n                  var line_1 = parseInt(match[2]);\r\n                  lineAdjust = 1 - line_1;\r\n              }\r\n              if (found) {\r\n                  if (found[2]) {\r\n                      this.line = parseInt(found[2]) + lineAdjust;\r\n                  }\r\n                  if (found[3]) {\r\n                      this.column = parseInt(found[3]);\r\n                  }\r\n              }\r\n          }\r\n          this.callLine = callLine + 1;\r\n          this.callExtract = lines[callLine];\r\n          this.extract = [\r\n              lines[this.line - 2],\r\n              lines[this.line - 1],\r\n              lines[this.line]\r\n          ];\r\n      }\r\n  };\r\n  if (typeof Object.create === 'undefined') {\r\n      var F = function () { };\r\n      F.prototype = Error.prototype;\r\n      LessError.prototype = new F();\r\n  }\r\n  else {\r\n      LessError.prototype = Object.create(Error.prototype);\r\n  }\r\n  LessError.prototype.constructor = LessError;\r\n  /**\r\n   * An overridden version of the default Object.prototype.toString\r\n   * which uses additional information to create a helpful message.\r\n   *\r\n   * @param {Object} options\r\n   * @returns {string}\r\n   */\r\n  LessError.prototype.toString = function (options) {\r\n      if (options === void 0) { options = {}; }\r\n      var message = '';\r\n      var extract = this.extract || [];\r\n      var error = [];\r\n      var stylize = function (str) { return str; };\r\n      if (options.stylize) {\r\n          var type = typeof options.stylize;\r\n          if (type !== 'function') {\r\n              throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n          }\r\n          stylize = options.stylize;\r\n      }\r\n      if (this.line !== null) {\r\n          if (typeof extract[0] === 'string') {\r\n              error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n          }\r\n          if (typeof extract[1] === 'string') {\r\n              var errorTxt = this.line + \" \";\r\n              if (extract[1]) {\r\n                  errorTxt += extract[1].slice(0, this.column) +\r\n                      stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                          extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n              }\r\n              error.push(errorTxt);\r\n          }\r\n          if (typeof extract[2] === 'string') {\r\n              error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n          }\r\n          error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n      }\r\n      message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n      if (this.filename) {\r\n          message += stylize(' in ', 'red') + this.filename;\r\n      }\r\n      if (this.line) {\r\n          message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n      }\r\n      message += \"\\n\" + error;\r\n      if (this.callLine) {\r\n          message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n          message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n      }\r\n      return message;\r\n  };\n\n  var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n      this.extendList = extendList;\r\n      this.condition = condition;\r\n      this.evaldCondition = !condition;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.elements = this.getElements(elements);\r\n      this.mixinElements_ = undefined;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.setParent(this.elements, this);\r\n  };\r\n  Selector.prototype = new Node();\r\n  Selector.prototype.accept = function (visitor) {\r\n      if (this.elements) {\r\n          this.elements = visitor.visitArray(this.elements);\r\n      }\r\n      if (this.extendList) {\r\n          this.extendList = visitor.visitArray(this.extendList);\r\n      }\r\n      if (this.condition) {\r\n          this.condition = visitor.visit(this.condition);\r\n      }\r\n  };\r\n  Selector.prototype.createDerived = function (elements, extendList, evaldCondition) {\r\n      elements = this.getElements(elements);\r\n      var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n      newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n      newSelector.mediaEmpty = this.mediaEmpty;\r\n      return newSelector;\r\n  };\r\n  Selector.prototype.getElements = function (els) {\r\n      if (!els) {\r\n          return [new Element('', '&', false, this._index, this._fileInfo)];\r\n      }\r\n      if (typeof els === 'string') {\r\n          this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n              if (err) {\r\n                  throw new LessError({\r\n                      index: err.index,\r\n                      message: err.message\r\n                  }, this.parse.imports, this._fileInfo.filename);\r\n              }\r\n              els = result[0].elements;\r\n          });\r\n      }\r\n      return els;\r\n  };\r\n  Selector.prototype.createEmptySelectors = function () {\r\n      var el = new Element('', '&', false, this._index, this._fileInfo);\r\n      var sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n      sels[0].mediaEmpty = true;\r\n      return sels;\r\n  };\r\n  Selector.prototype.match = function (other) {\r\n      var elements = this.elements;\r\n      var len = elements.length;\r\n      var olen;\r\n      var i;\r\n      other = other.mixinElements();\r\n      olen = other.length;\r\n      if (olen === 0 || len < olen) {\r\n          return 0;\r\n      }\r\n      else {\r\n          for (i = 0; i < olen; i++) {\r\n              if (elements[i].value !== other[i]) {\r\n                  return 0;\r\n              }\r\n          }\r\n      }\r\n      return olen; // return number of matched elements\r\n  };\r\n  Selector.prototype.mixinElements = function () {\r\n      if (this.mixinElements_) {\r\n          return this.mixinElements_;\r\n      }\r\n      var elements = this.elements.map(function (v) { return v.combinator.value + (v.value.value || v.value); }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n      if (elements) {\r\n          if (elements[0] === '&') {\r\n              elements.shift();\r\n          }\r\n      }\r\n      else {\r\n          elements = [];\r\n      }\r\n      return (this.mixinElements_ = elements);\r\n  };\r\n  Selector.prototype.isJustParentSelector = function () {\r\n      return !this.mediaEmpty &&\r\n          this.elements.length === 1 &&\r\n          this.elements[0].value === '&' &&\r\n          (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n  };\r\n  Selector.prototype.eval = function (context) {\r\n      var evaldCondition = this.condition && this.condition.eval(context);\r\n      var elements = this.elements;\r\n      var extendList = this.extendList;\r\n      elements = elements && elements.map(function (e) { return e.eval(context); });\r\n      extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n      return this.createDerived(elements, extendList, evaldCondition);\r\n  };\r\n  Selector.prototype.genCSS = function (context, output) {\r\n      var i;\r\n      var element;\r\n      if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n          output.add(' ', this.fileInfo(), this.getIndex());\r\n      }\r\n      for (i = 0; i < this.elements.length; i++) {\r\n          element = this.elements[i];\r\n          element.genCSS(context, output);\r\n      }\r\n  };\r\n  Selector.prototype.getIsOutput = function () {\r\n      return this.evaldCondition;\r\n  };\r\n  Selector.prototype.type = 'Selector';\n\n  var Value = function (value) {\r\n      if (!value) {\r\n          throw new Error('Value requires an array argument');\r\n      }\r\n      if (!Array.isArray(value)) {\r\n          this.value = [value];\r\n      }\r\n      else {\r\n          this.value = value;\r\n      }\r\n  };\r\n  Value.prototype = new Node();\r\n  Value.prototype.accept = function (visitor) {\r\n      if (this.value) {\r\n          this.value = visitor.visitArray(this.value);\r\n      }\r\n  };\r\n  Value.prototype.eval = function (context) {\r\n      if (this.value.length === 1) {\r\n          return this.value[0].eval(context);\r\n      }\r\n      else {\r\n          return new Value(this.value.map(function (v) { return v.eval(context); }));\r\n      }\r\n  };\r\n  Value.prototype.genCSS = function (context, output) {\r\n      var i;\r\n      for (i = 0; i < this.value.length; i++) {\r\n          this.value[i].genCSS(context, output);\r\n          if (i + 1 < this.value.length) {\r\n              output.add((context && context.compress) ? ',' : ', ');\r\n          }\r\n      }\r\n  };\r\n  Value.prototype.type = 'Value';\n\n  var Keyword = function (value) {\r\n      this.value = value;\r\n  };\r\n  Keyword.prototype = new Node();\r\n  Keyword.prototype.genCSS = function (context, output) {\r\n      if (this.value === '%') {\r\n          throw { type: 'Syntax', message: 'Invalid % without number' };\r\n      }\r\n      output.add(this.value);\r\n  };\r\n  Keyword.prototype.type = 'Keyword';\r\n  Keyword.True = new Keyword('true');\r\n  Keyword.False = new Keyword('false');\n\n  var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n      this.value = value;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.mapLines = mapLines;\r\n      this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n      this.allowRoot = true;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n  };\r\n  Anonymous.prototype = new Node();\r\n  Anonymous.prototype.eval = function () {\r\n      return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n  };\r\n  Anonymous.prototype.compare = function (other) {\r\n      return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n  };\r\n  Anonymous.prototype.isRulesetLike = function () {\r\n      return this.rulesetLike;\r\n  };\r\n  Anonymous.prototype.genCSS = function (context, output) {\r\n      this.nodeVisible = Boolean(this.value);\r\n      if (this.nodeVisible) {\r\n          output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n      }\r\n  };\r\n  Anonymous.prototype.type = 'Anonymous';\n\n  var MATH = Math$1;\r\n  var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n      this.name = name;\r\n      this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n      this.important = important ? \" \" + important.trim() : '';\r\n      this.merge = merge;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.inline = inline || false;\r\n      this.variable = (variable !== undefined) ? variable\r\n          : (name.charAt && (name.charAt(0) === '@'));\r\n      this.allowRoot = true;\r\n      this.setParent(this.value, this);\r\n  };\r\n  Declaration.prototype = new Node();\r\n  Declaration.prototype.genCSS = function (context, output) {\r\n      output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n      try {\r\n          this.value.genCSS(context, output);\r\n      }\r\n      catch (e) {\r\n          e.index = this._index;\r\n          e.filename = this._fileInfo.filename;\r\n          throw e;\r\n      }\r\n      output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n  };\r\n  Declaration.prototype.eval = function (context) {\r\n      var mathBypass = false;\r\n      var prevMath;\r\n      var name = this.name;\r\n      var evaldValue;\r\n      var variable = this.variable;\r\n      if (typeof name !== 'string') {\r\n          // expand 'primitive' name directly to get\r\n          // things faster (~10% for benchmark.less):\r\n          name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n              name[0].value : evalName(context, name);\r\n          variable = false; // never treat expanded interpolation as new variable name\r\n      }\r\n      // @todo remove when parens-division is default\r\n      if (name === 'font' && context.math === MATH.ALWAYS) {\r\n          mathBypass = true;\r\n          prevMath = context.math;\r\n          context.math = MATH.PARENS_DIVISION;\r\n      }\r\n      try {\r\n          context.importantScope.push({});\r\n          evaldValue = this.value.eval(context);\r\n          if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n              throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                  index: this.getIndex(), filename: this.fileInfo().filename };\r\n          }\r\n          var important = this.important;\r\n          var importantResult = context.importantScope.pop();\r\n          if (!important && importantResult.important) {\r\n              important = importantResult.important;\r\n          }\r\n          return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n      }\r\n      catch (e) {\r\n          if (typeof e.index !== 'number') {\r\n              e.index = this.getIndex();\r\n              e.filename = this.fileInfo().filename;\r\n          }\r\n          throw e;\r\n      }\r\n      finally {\r\n          if (mathBypass) {\r\n              context.math = prevMath;\r\n          }\r\n      }\r\n  };\r\n  Declaration.prototype.makeImportant = function () {\r\n      return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n  };\r\n  function evalName(context, name) {\r\n      var value = '';\r\n      var i;\r\n      var n = name.length;\r\n      var output = { add: function (s) { value += s; } };\r\n      for (i = 0; i < n; i++) {\r\n          name[i].eval(context).genCSS(context, output);\r\n      }\r\n      return value;\r\n  }\r\n  Declaration.prototype.type = 'Declaration';\n\n  var debugInfo = function (context, ctx, lineSeparator) {\r\n      var result = '';\r\n      if (context.dumpLineNumbers && !context.compress) {\r\n          switch (context.dumpLineNumbers) {\r\n              case 'comments':\r\n                  result = debugInfo.asComment(ctx);\r\n                  break;\r\n              case 'mediaquery':\r\n                  result = debugInfo.asMediaQuery(ctx);\r\n                  break;\r\n              case 'all':\r\n                  result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\r\n                  break;\r\n          }\r\n      }\r\n      return result;\r\n  };\r\n  debugInfo.asComment = function (ctx) { return ctx.debugInfo ? \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\" : ''; };\r\n  debugInfo.asMediaQuery = function (ctx) {\r\n      if (!ctx.debugInfo) {\r\n          return '';\r\n      }\r\n      var filenameWithProtocol = ctx.debugInfo.fileName;\r\n      if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n          filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n      }\r\n      return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n          if (a == '\\\\') {\r\n              a = '\\/';\r\n          }\r\n          return \"\\\\\" + a;\r\n      }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n  };\n\n  var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n      this.value = value;\r\n      this.isLineComment = isLineComment;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.allowRoot = true;\r\n  };\r\n  Comment.prototype = new Node();\r\n  Comment.prototype.genCSS = function (context, output) {\r\n      if (this.debugInfo) {\r\n          output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n      }\r\n      output.add(this.value);\r\n  };\r\n  Comment.prototype.isSilent = function (context) {\r\n      var isCompressed = context.compress && this.value[2] !== '!';\r\n      return this.isLineComment || isCompressed;\r\n  };\r\n  Comment.prototype.type = 'Comment';\n\n  var contexts = {};\r\n  var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n      if (!original) {\r\n          return;\r\n      }\r\n      for (var i = 0; i < propertiesToCopy.length; i++) {\r\n          if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n              destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n          }\r\n      }\r\n  };\r\n  /*\r\n   parse is used whilst parsing\r\n   */\r\n  var parseCopyProperties = [\r\n      // options\r\n      'paths',\r\n      'rewriteUrls',\r\n      'rootpath',\r\n      'strictImports',\r\n      'insecure',\r\n      'dumpLineNumbers',\r\n      'compress',\r\n      'syncImport',\r\n      'chunkInput',\r\n      'mime',\r\n      'useFileCache',\r\n      // context\r\n      'processImports',\r\n      // Used by the import manager to stop multiple import visitors being created.\r\n      'pluginManager' // Used as the plugin manager for the session\r\n  ];\r\n  contexts.Parse = function (options) {\r\n      copyFromOriginal(options, this, parseCopyProperties);\r\n      if (typeof this.paths === 'string') {\r\n          this.paths = [this.paths];\r\n      }\r\n  };\r\n  var evalCopyProperties = [\r\n      'paths',\r\n      'compress',\r\n      'math',\r\n      'strictUnits',\r\n      'sourceMap',\r\n      'importMultiple',\r\n      'urlArgs',\r\n      'javascriptEnabled',\r\n      'pluginManager',\r\n      'importantScope',\r\n      'rewriteUrls' // option - whether to adjust URL's to be relative\r\n  ];\r\n  function isPathRelative(path) {\r\n      return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n  }\r\n  function isPathLocalRelative(path) {\r\n      return path.charAt(0) === '.';\r\n  }\r\n  contexts.Eval = /** @class */ (function () {\r\n      function Eval(options, frames) {\r\n          copyFromOriginal(options, this, evalCopyProperties);\r\n          if (typeof this.paths === 'string') {\r\n              this.paths = [this.paths];\r\n          }\r\n          this.frames = frames || [];\r\n          this.importantScope = this.importantScope || [];\r\n          this.inCalc = false;\r\n          this.mathOn = true;\r\n      }\r\n      Eval.prototype.enterCalc = function () {\r\n          if (!this.calcStack) {\r\n              this.calcStack = [];\r\n          }\r\n          this.calcStack.push(true);\r\n          this.inCalc = true;\r\n      };\r\n      Eval.prototype.exitCalc = function () {\r\n          this.calcStack.pop();\r\n          if (!this.calcStack.length) {\r\n              this.inCalc = false;\r\n          }\r\n      };\r\n      Eval.prototype.inParenthesis = function () {\r\n          if (!this.parensStack) {\r\n              this.parensStack = [];\r\n          }\r\n          this.parensStack.push(true);\r\n      };\r\n      Eval.prototype.outOfParenthesis = function () {\r\n          this.parensStack.pop();\r\n      };\r\n      Eval.prototype.isMathOn = function (op) {\r\n          if (!this.mathOn) {\r\n              return false;\r\n          }\r\n          if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n              return false;\r\n          }\r\n          if (this.math > Math$1.PARENS_DIVISION) {\r\n              return this.parensStack && this.parensStack.length;\r\n          }\r\n          return true;\r\n      };\r\n      Eval.prototype.pathRequiresRewrite = function (path) {\r\n          var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n          return isRelative(path);\r\n      };\r\n      Eval.prototype.rewritePath = function (path, rootpath) {\r\n          var newPath;\r\n          rootpath = rootpath || '';\r\n          newPath = this.normalizePath(rootpath + path);\r\n          // If a path was explicit relative and the rootpath was not an absolute path\r\n          // we must ensure that the new path is also explicit relative.\r\n          if (isPathLocalRelative(path) &&\r\n              isPathRelative(rootpath) &&\r\n              isPathLocalRelative(newPath) === false) {\r\n              newPath = \"./\" + newPath;\r\n          }\r\n          return newPath;\r\n      };\r\n      Eval.prototype.normalizePath = function (path) {\r\n          var segments = path.split('/').reverse();\r\n          var segment;\r\n          path = [];\r\n          while (segments.length !== 0) {\r\n              segment = segments.pop();\r\n              switch (segment) {\r\n                  case '.':\r\n                      break;\r\n                  case '..':\r\n                      if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                          path.push(segment);\r\n                      }\r\n                      else {\r\n                          path.pop();\r\n                      }\r\n                      break;\r\n                  default:\r\n                      path.push(segment);\r\n                      break;\r\n              }\r\n          }\r\n          return path.join('/');\r\n      };\r\n      return Eval;\r\n  }());\n\n  function makeRegistry(base) {\r\n      return {\r\n          _data: {},\r\n          add: function (name, func) {\r\n              // precautionary case conversion, as later querying of\r\n              // the registry by function-caller uses lower case as well.\r\n              name = name.toLowerCase();\r\n              if (this._data.hasOwnProperty(name)) ;\r\n              this._data[name] = func;\r\n          },\r\n          addMultiple: function (functions) {\r\n              var _this = this;\r\n              Object.keys(functions).forEach(function (name) {\r\n                  _this.add(name, functions[name]);\r\n              });\r\n          },\r\n          get: function (name) {\r\n              return this._data[name] || (base && base.get(name));\r\n          },\r\n          getLocalFunctions: function () {\r\n              return this._data;\r\n          },\r\n          inherit: function () {\r\n              return makeRegistry(this);\r\n          },\r\n          create: function (base) {\r\n              return makeRegistry(base);\r\n          }\r\n      };\r\n  }\r\n  var functionRegistry = makeRegistry(null);\n\n  var defaultFunc = {\r\n      eval: function () {\r\n          var v = this.value_;\r\n          var e = this.error_;\r\n          if (e) {\r\n              throw e;\r\n          }\r\n          if (v != null) {\r\n              return v ? Keyword.True : Keyword.False;\r\n          }\r\n      },\r\n      value: function (v) {\r\n          this.value_ = v;\r\n      },\r\n      error: function (e) {\r\n          this.error_ = e;\r\n      },\r\n      reset: function () {\r\n          this.value_ = this.error_ = null;\r\n      }\r\n  };\n\n  var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n      this.selectors = selectors;\r\n      this.rules = rules;\r\n      this._lookups = {};\r\n      this._variables = null;\r\n      this._properties = null;\r\n      this.strictImports = strictImports;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n      this.setParent(this.selectors, this);\r\n      this.setParent(this.rules, this);\r\n  };\r\n  Ruleset.prototype = new Node();\r\n  Ruleset.prototype.isRulesetLike = function () {\r\n      return true;\r\n  };\r\n  Ruleset.prototype.accept = function (visitor) {\r\n      if (this.paths) {\r\n          this.paths = visitor.visitArray(this.paths, true);\r\n      }\r\n      else if (this.selectors) {\r\n          this.selectors = visitor.visitArray(this.selectors);\r\n      }\r\n      if (this.rules && this.rules.length) {\r\n          this.rules = visitor.visitArray(this.rules);\r\n      }\r\n  };\r\n  Ruleset.prototype.eval = function (context) {\r\n      var selectors;\r\n      var selCnt;\r\n      var selector;\r\n      var i;\r\n      var hasVariable;\r\n      var hasOnePassingSelector = false;\r\n      if (this.selectors && (selCnt = this.selectors.length)) {\r\n          selectors = new Array(selCnt);\r\n          defaultFunc.error({\r\n              type: 'Syntax',\r\n              message: 'it is currently only allowed in parametric mixin guards,'\r\n          });\r\n          for (i = 0; i < selCnt; i++) {\r\n              selector = this.selectors[i].eval(context);\r\n              for (var j = 0; j < selector.elements.length; j++) {\r\n                  if (selector.elements[j].isVariable) {\r\n                      hasVariable = true;\r\n                      break;\r\n                  }\r\n              }\r\n              selectors[i] = selector;\r\n              if (selector.evaldCondition) {\r\n                  hasOnePassingSelector = true;\r\n              }\r\n          }\r\n          if (hasVariable) {\r\n              var toParseSelectors = new Array(selCnt);\r\n              for (i = 0; i < selCnt; i++) {\r\n                  selector = selectors[i];\r\n                  toParseSelectors[i] = selector.toCSS(context);\r\n              }\r\n              this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                  if (result) {\r\n                      selectors = flattenArray(result);\r\n                  }\r\n              });\r\n          }\r\n          defaultFunc.reset();\r\n      }\r\n      else {\r\n          hasOnePassingSelector = true;\r\n      }\r\n      var rules = this.rules ? copyArray(this.rules) : null;\r\n      var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n      var rule;\r\n      var subRule;\r\n      ruleset.originalRuleset = this;\r\n      ruleset.root = this.root;\r\n      ruleset.firstRoot = this.firstRoot;\r\n      ruleset.allowImports = this.allowImports;\r\n      if (this.debugInfo) {\r\n          ruleset.debugInfo = this.debugInfo;\r\n      }\r\n      if (!hasOnePassingSelector) {\r\n          rules.length = 0;\r\n      }\r\n      // inherit a function registry from the frames stack when possible;\r\n      // otherwise from the global registry\r\n      ruleset.functionRegistry = (function (frames) {\r\n          var i = 0;\r\n          var n = frames.length;\r\n          var found;\r\n          for (; i !== n; ++i) {\r\n              found = frames[i].functionRegistry;\r\n              if (found) {\r\n                  return found;\r\n              }\r\n          }\r\n          return functionRegistry;\r\n      })(context.frames).inherit();\r\n      // push the current ruleset to the frames stack\r\n      var ctxFrames = context.frames;\r\n      ctxFrames.unshift(ruleset);\r\n      // currrent selectors\r\n      var ctxSelectors = context.selectors;\r\n      if (!ctxSelectors) {\r\n          context.selectors = ctxSelectors = [];\r\n      }\r\n      ctxSelectors.unshift(this.selectors);\r\n      // Evaluate imports\r\n      if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n          ruleset.evalImports(context);\r\n      }\r\n      // Store the frames around mixin definitions,\r\n      // so they can be evaluated like closures when the time comes.\r\n      var rsRules = ruleset.rules;\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          if (rule.evalFirst) {\r\n              rsRules[i] = rule.eval(context);\r\n          }\r\n      }\r\n      var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n      // Evaluate mixin calls.\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          if (rule.type === 'MixinCall') {\r\n              /* jshint loopfunc:true */\r\n              rules = rule.eval(context).filter(function (r) {\r\n                  if ((r instanceof Declaration) && r.variable) {\r\n                      // do not pollute the scope if the variable is\r\n                      // already there. consider returning false here\r\n                      // but we need a way to \"return\" variable from mixins\r\n                      return !(ruleset.variable(r.name));\r\n                  }\r\n                  return true;\r\n              });\r\n              rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n              i += rules.length - 1;\r\n              ruleset.resetCache();\r\n          }\r\n          else if (rule.type === 'VariableCall') {\r\n              /* jshint loopfunc:true */\r\n              rules = rule.eval(context).rules.filter(function (r) {\r\n                  if ((r instanceof Declaration) && r.variable) {\r\n                      // do not pollute the scope at all\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              });\r\n              rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n              i += rules.length - 1;\r\n              ruleset.resetCache();\r\n          }\r\n      }\r\n      // Evaluate everything else\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          if (!rule.evalFirst) {\r\n              rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n          }\r\n      }\r\n      // Evaluate everything else\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          // for rulesets, check if it is a css guard and can be removed\r\n          if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n              // check if it can be folded in (e.g. & where)\r\n              if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                  rsRules.splice(i--, 1);\r\n                  for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                      if (subRule instanceof Node) {\r\n                          subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                          if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                              rsRules.splice(++i, 0, subRule);\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      // Pop the stack\r\n      ctxFrames.shift();\r\n      ctxSelectors.shift();\r\n      if (context.mediaBlocks) {\r\n          for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n              context.mediaBlocks[i].bubbleSelectors(selectors);\r\n          }\r\n      }\r\n      return ruleset;\r\n  };\r\n  Ruleset.prototype.evalImports = function (context) {\r\n      var rules = this.rules;\r\n      var i;\r\n      var importRules;\r\n      if (!rules) {\r\n          return;\r\n      }\r\n      for (i = 0; i < rules.length; i++) {\r\n          if (rules[i].type === 'Import') {\r\n              importRules = rules[i].eval(context);\r\n              if (importRules && (importRules.length || importRules.length === 0)) {\r\n                  rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                  i += importRules.length - 1;\r\n              }\r\n              else {\r\n                  rules.splice(i, 1, importRules);\r\n              }\r\n              this.resetCache();\r\n          }\r\n      }\r\n  };\r\n  Ruleset.prototype.makeImportant = function () {\r\n      var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n          if (r.makeImportant) {\r\n              return r.makeImportant();\r\n          }\r\n          else {\r\n              return r;\r\n          }\r\n      }), this.strictImports, this.visibilityInfo());\r\n      return result;\r\n  };\r\n  Ruleset.prototype.matchArgs = function (args) {\r\n      return !args || args.length === 0;\r\n  };\r\n  // lets you call a css selector with a guard\r\n  Ruleset.prototype.matchCondition = function (args, context) {\r\n      var lastSelector = this.selectors[this.selectors.length - 1];\r\n      if (!lastSelector.evaldCondition) {\r\n          return false;\r\n      }\r\n      if (lastSelector.condition &&\r\n          !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n  Ruleset.prototype.resetCache = function () {\r\n      this._rulesets = null;\r\n      this._variables = null;\r\n      this._properties = null;\r\n      this._lookups = {};\r\n  };\r\n  Ruleset.prototype.variables = function () {\r\n      if (!this._variables) {\r\n          this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n              if (r instanceof Declaration && r.variable === true) {\r\n                  hash[r.name] = r;\r\n              }\r\n              // when evaluating variables in an import statement, imports have not been eval'd\r\n              // so we need to go inside import statements.\r\n              // guard against root being a string (in the case of inlined less)\r\n              if (r.type === 'Import' && r.root && r.root.variables) {\r\n                  var vars = r.root.variables();\r\n                  for (var name_1 in vars) {\r\n                      if (vars.hasOwnProperty(name_1)) {\r\n                          hash[name_1] = r.root.variable(name_1);\r\n                      }\r\n                  }\r\n              }\r\n              return hash;\r\n          }, {});\r\n      }\r\n      return this._variables;\r\n  };\r\n  Ruleset.prototype.properties = function () {\r\n      if (!this._properties) {\r\n          this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n              if (r instanceof Declaration && r.variable !== true) {\r\n                  var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                      r.name[0].value : r.name;\r\n                  // Properties don't overwrite as they can merge\r\n                  if (!hash[\"$\" + name_2]) {\r\n                      hash[\"$\" + name_2] = [r];\r\n                  }\r\n                  else {\r\n                      hash[\"$\" + name_2].push(r);\r\n                  }\r\n              }\r\n              return hash;\r\n          }, {});\r\n      }\r\n      return this._properties;\r\n  };\r\n  Ruleset.prototype.variable = function (name) {\r\n      var decl = this.variables()[name];\r\n      if (decl) {\r\n          return this.parseValue(decl);\r\n      }\r\n  };\r\n  Ruleset.prototype.property = function (name) {\r\n      var decl = this.properties()[name];\r\n      if (decl) {\r\n          return this.parseValue(decl);\r\n      }\r\n  };\r\n  Ruleset.prototype.lastDeclaration = function () {\r\n      for (var i = this.rules.length; i > 0; i--) {\r\n          var decl = this.rules[i - 1];\r\n          if (decl instanceof Declaration) {\r\n              return this.parseValue(decl);\r\n          }\r\n      }\r\n  };\r\n  Ruleset.prototype.parseValue = function (toParse) {\r\n      var self = this;\r\n      function transformDeclaration(decl) {\r\n          if (decl.value instanceof Anonymous && !decl.parsed) {\r\n              if (typeof decl.value.value === 'string') {\r\n                  this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                      if (err) {\r\n                          decl.parsed = true;\r\n                      }\r\n                      if (result) {\r\n                          decl.value = result[0];\r\n                          decl.important = result[1] || '';\r\n                          decl.parsed = true;\r\n                      }\r\n                  });\r\n              }\r\n              else {\r\n                  decl.parsed = true;\r\n              }\r\n              return decl;\r\n          }\r\n          else {\r\n              return decl;\r\n          }\r\n      }\r\n      if (!Array.isArray(toParse)) {\r\n          return transformDeclaration.call(self, toParse);\r\n      }\r\n      else {\r\n          var nodes_1 = [];\r\n          toParse.forEach(function (n) {\r\n              nodes_1.push(transformDeclaration.call(self, n));\r\n          });\r\n          return nodes_1;\r\n      }\r\n  };\r\n  Ruleset.prototype.rulesets = function () {\r\n      if (!this.rules) {\r\n          return [];\r\n      }\r\n      var filtRules = [];\r\n      var rules = this.rules;\r\n      var i;\r\n      var rule;\r\n      for (i = 0; (rule = rules[i]); i++) {\r\n          if (rule.isRuleset) {\r\n              filtRules.push(rule);\r\n          }\r\n      }\r\n      return filtRules;\r\n  };\r\n  Ruleset.prototype.prependRule = function (rule) {\r\n      var rules = this.rules;\r\n      if (rules) {\r\n          rules.unshift(rule);\r\n      }\r\n      else {\r\n          this.rules = [rule];\r\n      }\r\n      this.setParent(rule, this);\r\n  };\r\n  Ruleset.prototype.find = function (selector, self, filter) {\r\n      if (self === void 0) { self = this; }\r\n      var rules = [];\r\n      var match;\r\n      var foundMixins;\r\n      var key = selector.toCSS();\r\n      if (key in this._lookups) {\r\n          return this._lookups[key];\r\n      }\r\n      this.rulesets().forEach(function (rule) {\r\n          if (rule !== self) {\r\n              for (var j = 0; j < rule.selectors.length; j++) {\r\n                  match = selector.match(rule.selectors[j]);\r\n                  if (match) {\r\n                      if (selector.elements.length > match) {\r\n                          if (!filter || filter(rule)) {\r\n                              foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                              for (var i = 0; i < foundMixins.length; ++i) {\r\n                                  foundMixins[i].path.push(rule);\r\n                              }\r\n                              Array.prototype.push.apply(rules, foundMixins);\r\n                          }\r\n                      }\r\n                      else {\r\n                          rules.push({ rule: rule, path: [] });\r\n                      }\r\n                      break;\r\n                  }\r\n              }\r\n          }\r\n      });\r\n      this._lookups[key] = rules;\r\n      return rules;\r\n  };\r\n  Ruleset.prototype.genCSS = function (context, output) {\r\n      var i;\r\n      var j;\r\n      var charsetRuleNodes = [];\r\n      var ruleNodes = [];\r\n      var // Line number debugging\r\n      debugInfo$1;\r\n      var rule;\r\n      var path;\r\n      context.tabLevel = (context.tabLevel || 0);\r\n      if (!this.root) {\r\n          context.tabLevel++;\r\n      }\r\n      var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n      var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n      var sep;\r\n      var charsetNodeIndex = 0;\r\n      var importNodeIndex = 0;\r\n      for (i = 0; (rule = this.rules[i]); i++) {\r\n          if (rule instanceof Comment) {\r\n              if (importNodeIndex === i) {\r\n                  importNodeIndex++;\r\n              }\r\n              ruleNodes.push(rule);\r\n          }\r\n          else if (rule.isCharset && rule.isCharset()) {\r\n              ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n              charsetNodeIndex++;\r\n              importNodeIndex++;\r\n          }\r\n          else if (rule.type === 'Import') {\r\n              ruleNodes.splice(importNodeIndex, 0, rule);\r\n              importNodeIndex++;\r\n          }\r\n          else {\r\n              ruleNodes.push(rule);\r\n          }\r\n      }\r\n      ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n      // If this is the root node, we don't render\r\n      // a selector, or {}.\r\n      if (!this.root) {\r\n          debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n          if (debugInfo$1) {\r\n              output.add(debugInfo$1);\r\n              output.add(tabSetStr);\r\n          }\r\n          var paths = this.paths;\r\n          var pathCnt = paths.length;\r\n          var pathSubCnt = void 0;\r\n          sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n          for (i = 0; i < pathCnt; i++) {\r\n              path = paths[i];\r\n              if (!(pathSubCnt = path.length)) {\r\n                  continue;\r\n              }\r\n              if (i > 0) {\r\n                  output.add(sep);\r\n              }\r\n              context.firstSelector = true;\r\n              path[0].genCSS(context, output);\r\n              context.firstSelector = false;\r\n              for (j = 1; j < pathSubCnt; j++) {\r\n                  path[j].genCSS(context, output);\r\n              }\r\n          }\r\n          output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n      }\r\n      // Compile rules and rulesets\r\n      for (i = 0; (rule = ruleNodes[i]); i++) {\r\n          if (i + 1 === ruleNodes.length) {\r\n              context.lastRule = true;\r\n          }\r\n          var currentLastRule = context.lastRule;\r\n          if (rule.isRulesetLike(rule)) {\r\n              context.lastRule = false;\r\n          }\r\n          if (rule.genCSS) {\r\n              rule.genCSS(context, output);\r\n          }\r\n          else if (rule.value) {\r\n              output.add(rule.value.toString());\r\n          }\r\n          context.lastRule = currentLastRule;\r\n          if (!context.lastRule && rule.isVisible()) {\r\n              output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n          }\r\n          else {\r\n              context.lastRule = false;\r\n          }\r\n      }\r\n      if (!this.root) {\r\n          output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n          context.tabLevel--;\r\n      }\r\n      if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n          output.add('\\n');\r\n      }\r\n  };\r\n  Ruleset.prototype.joinSelectors = function (paths, context, selectors) {\r\n      for (var s = 0; s < selectors.length; s++) {\r\n          this.joinSelector(paths, context, selectors[s]);\r\n      }\r\n  };\r\n  Ruleset.prototype.joinSelector = function (paths, context, selector) {\r\n      function createParenthesis(elementsToPak, originalElement) {\r\n          var replacementParen;\r\n          var j;\r\n          if (elementsToPak.length === 0) {\r\n              replacementParen = new Paren(elementsToPak[0]);\r\n          }\r\n          else {\r\n              var insideParent = new Array(elementsToPak.length);\r\n              for (j = 0; j < elementsToPak.length; j++) {\r\n                  insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n              }\r\n              replacementParen = new Paren(new Selector(insideParent));\r\n          }\r\n          return replacementParen;\r\n      }\r\n      function createSelector(containedElement, originalElement) {\r\n          var element;\r\n          var selector;\r\n          element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n          selector = new Selector([element]);\r\n          return selector;\r\n      }\r\n      // joins selector path from `beginningPath` with selector path in `addPath`\r\n      // `replacedElement` contains element that is being replaced by `addPath`\r\n      // returns concatenated path\r\n      function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n          var newSelectorPath;\r\n          var lastSelector;\r\n          var newJoinedSelector;\r\n          // our new selector path\r\n          newSelectorPath = [];\r\n          // construct the joined selector - if & is the first thing this will be empty,\r\n          // if not newJoinedSelector will be the last set of elements in the selector\r\n          if (beginningPath.length > 0) {\r\n              newSelectorPath = copyArray(beginningPath);\r\n              lastSelector = newSelectorPath.pop();\r\n              newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n          }\r\n          else {\r\n              newJoinedSelector = originalSelector.createDerived([]);\r\n          }\r\n          if (addPath.length > 0) {\r\n              // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n              // that is valid without anything in front of it\r\n              // so if the & does not have a combinator that is \"\" or \" \" then\r\n              // and there is a combinator on the parent, then grab that.\r\n              // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n              var combinator = replacedElement.combinator;\r\n              var parentEl = addPath[0].elements[0];\r\n              if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                  combinator = parentEl.combinator;\r\n              }\r\n              // join the elements so far with the first part of the parent\r\n              newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n              newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n          }\r\n          // now add the joined selector - but only if it is not empty\r\n          if (newJoinedSelector.elements.length !== 0) {\r\n              newSelectorPath.push(newJoinedSelector);\r\n          }\r\n          // put together the parent selectors after the join (e.g. the rest of the parent)\r\n          if (addPath.length > 1) {\r\n              var restOfPath = addPath.slice(1);\r\n              restOfPath = restOfPath.map(function (selector) { return selector.createDerived(selector.elements, []); });\r\n              newSelectorPath = newSelectorPath.concat(restOfPath);\r\n          }\r\n          return newSelectorPath;\r\n      }\r\n      // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n      // `replacedElement` contains element that is being replaced by `addPath`\r\n      // returns array with all concatenated paths\r\n      function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n          var j;\r\n          for (j = 0; j < beginningPath.length; j++) {\r\n              var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n              result.push(newSelectorPath);\r\n          }\r\n          return result;\r\n      }\r\n      function mergeElementsOnToSelectors(elements, selectors) {\r\n          var i;\r\n          var sel;\r\n          if (elements.length === 0) {\r\n              return;\r\n          }\r\n          if (selectors.length === 0) {\r\n              selectors.push([new Selector(elements)]);\r\n              return;\r\n          }\r\n          for (i = 0; (sel = selectors[i]); i++) {\r\n              // if the previous thing in sel is a parent this needs to join on to it\r\n              if (sel.length > 0) {\r\n                  sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n              }\r\n              else {\r\n                  sel.push(new Selector(elements));\r\n              }\r\n          }\r\n      }\r\n      // replace all parent selectors inside `inSelector` by content of `context` array\r\n      // resulting selectors are returned inside `paths` array\r\n      // returns true if `inSelector` contained at least one parent selector\r\n      function replaceParentSelector(paths, context, inSelector) {\r\n          // The paths are [[Selector]]\r\n          // The first list is a list of comma separated selectors\r\n          // The inner list is a list of inheritance separated selectors\r\n          // e.g.\r\n          // .a, .b {\r\n          //   .c {\r\n          //   }\r\n          // }\r\n          // == [[.a] [.c]] [[.b] [.c]]\r\n          //\r\n          var i;\r\n          var j;\r\n          var k;\r\n          var currentElements;\r\n          var newSelectors;\r\n          var selectorsMultiplied;\r\n          var sel;\r\n          var el;\r\n          var hadParentSelector = false;\r\n          var length;\r\n          var lastSelector;\r\n          function findNestedSelector(element) {\r\n              var maybeSelector;\r\n              if (!(element.value instanceof Paren)) {\r\n                  return null;\r\n              }\r\n              maybeSelector = element.value.value;\r\n              if (!(maybeSelector instanceof Selector)) {\r\n                  return null;\r\n              }\r\n              return maybeSelector;\r\n          }\r\n          // the elements from the current selector so far\r\n          currentElements = [];\r\n          // the current list of new selectors to add to the path.\r\n          // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n          // by the parents\r\n          newSelectors = [\r\n              []\r\n          ];\r\n          for (i = 0; (el = inSelector.elements[i]); i++) {\r\n              // non parent reference elements just get added\r\n              if (el.value !== '&') {\r\n                  var nestedSelector = findNestedSelector(el);\r\n                  if (nestedSelector != null) {\r\n                      // merge the current list of non parent selector elements\r\n                      // on to the current list of selectors to add\r\n                      mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                      var nestedPaths = [];\r\n                      var replaced = void 0;\r\n                      var replacedNewSelectors = [];\r\n                      replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                      hadParentSelector = hadParentSelector || replaced;\r\n                      // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                      for (k = 0; k < nestedPaths.length; k++) {\r\n                          var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                          addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                      }\r\n                      newSelectors = replacedNewSelectors;\r\n                      currentElements = [];\r\n                  }\r\n                  else {\r\n                      currentElements.push(el);\r\n                  }\r\n              }\r\n              else {\r\n                  hadParentSelector = true;\r\n                  // the new list of selectors to add\r\n                  selectorsMultiplied = [];\r\n                  // merge the current list of non parent selector elements\r\n                  // on to the current list of selectors to add\r\n                  mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                  // loop through our current selectors\r\n                  for (j = 0; j < newSelectors.length; j++) {\r\n                      sel = newSelectors[j];\r\n                      // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                      // whether there are parents or not\r\n                      if (context.length === 0) {\r\n                          // the combinator used on el should now be applied to the next element instead so that\r\n                          // it is not lost\r\n                          if (sel.length > 0) {\r\n                              sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                          }\r\n                          selectorsMultiplied.push(sel);\r\n                      }\r\n                      else {\r\n                          // and the parent selectors\r\n                          for (k = 0; k < context.length; k++) {\r\n                              // We need to put the current selectors\r\n                              // then join the last selector's elements on to the parents selectors\r\n                              var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                              // add that to our new set of selectors\r\n                              selectorsMultiplied.push(newSelectorPath);\r\n                          }\r\n                      }\r\n                  }\r\n                  // our new selectors has been multiplied, so reset the state\r\n                  newSelectors = selectorsMultiplied;\r\n                  currentElements = [];\r\n              }\r\n          }\r\n          // if we have any elements left over (e.g. .a& .b == .b)\r\n          // add them on to all the current selectors\r\n          mergeElementsOnToSelectors(currentElements, newSelectors);\r\n          for (i = 0; i < newSelectors.length; i++) {\r\n              length = newSelectors[i].length;\r\n              if (length > 0) {\r\n                  paths.push(newSelectors[i]);\r\n                  lastSelector = newSelectors[i][length - 1];\r\n                  newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n              }\r\n          }\r\n          return hadParentSelector;\r\n      }\r\n      function deriveSelector(visibilityInfo, deriveFrom) {\r\n          var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n          newSelector.copyVisibilityInfo(visibilityInfo);\r\n          return newSelector;\r\n      }\r\n      // joinSelector code follows\r\n      var i;\r\n      var newPaths;\r\n      var hadParentSelector;\r\n      newPaths = [];\r\n      hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n      if (!hadParentSelector) {\r\n          if (context.length > 0) {\r\n              newPaths = [];\r\n              for (i = 0; i < context.length; i++) {\r\n                  var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                  concatenated.push(selector);\r\n                  newPaths.push(concatenated);\r\n              }\r\n          }\r\n          else {\r\n              newPaths = [[selector]];\r\n          }\r\n      }\r\n      for (i = 0; i < newPaths.length; i++) {\r\n          paths.push(newPaths[i]);\r\n      }\r\n  };\r\n  Ruleset.prototype.type = 'Ruleset';\r\n  Ruleset.prototype.isRuleset = true;\n\n  var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n      var i;\r\n      this.name = name;\r\n      this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n      if (rules) {\r\n          if (Array.isArray(rules)) {\r\n              this.rules = rules;\r\n          }\r\n          else {\r\n              this.rules = [rules];\r\n              this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n          }\r\n          for (i = 0; i < this.rules.length; i++) {\r\n              this.rules[i].allowImports = true;\r\n          }\r\n          this.setParent(this.rules, this);\r\n      }\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.debugInfo = debugInfo;\r\n      this.isRooted = isRooted || false;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n  };\r\n  AtRule.prototype = new Node();\r\n  AtRule.prototype.accept = function (visitor) {\r\n      var value = this.value;\r\n      var rules = this.rules;\r\n      if (rules) {\r\n          this.rules = visitor.visitArray(rules);\r\n      }\r\n      if (value) {\r\n          this.value = visitor.visit(value);\r\n      }\r\n  };\r\n  AtRule.prototype.isRulesetLike = function () {\r\n      return this.rules || !this.isCharset();\r\n  };\r\n  AtRule.prototype.isCharset = function () {\r\n      return '@charset' === this.name;\r\n  };\r\n  AtRule.prototype.genCSS = function (context, output) {\r\n      var value = this.value;\r\n      var rules = this.rules;\r\n      output.add(this.name, this.fileInfo(), this.getIndex());\r\n      if (value) {\r\n          output.add(' ');\r\n          value.genCSS(context, output);\r\n      }\r\n      if (rules) {\r\n          this.outputRuleset(context, output, rules);\r\n      }\r\n      else {\r\n          output.add(';');\r\n      }\r\n  };\r\n  AtRule.prototype.eval = function (context) {\r\n      var mediaPathBackup;\r\n      var mediaBlocksBackup;\r\n      var value = this.value;\r\n      var rules = this.rules;\r\n      // media stored inside other atrule should not bubble over it\r\n      // backpup media bubbling information\r\n      mediaPathBackup = context.mediaPath;\r\n      mediaBlocksBackup = context.mediaBlocks;\r\n      // deleted media bubbling information\r\n      context.mediaPath = [];\r\n      context.mediaBlocks = [];\r\n      if (value) {\r\n          value = value.eval(context);\r\n      }\r\n      if (rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          rules = [rules[0].eval(context)];\r\n          rules[0].root = true;\r\n      }\r\n      // restore media bubbling information\r\n      context.mediaPath = mediaPathBackup;\r\n      context.mediaBlocks = mediaBlocksBackup;\r\n      return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n  };\r\n  AtRule.prototype.variable = function (name) {\r\n      if (this.rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          return Ruleset.prototype.variable.call(this.rules[0], name);\r\n      }\r\n  };\r\n  AtRule.prototype.find = function () {\r\n      var args = [];\r\n      for (var _i = 0; _i < arguments.length; _i++) {\r\n          args[_i] = arguments[_i];\r\n      }\r\n      if (this.rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          return Ruleset.prototype.find.apply(this.rules[0], args);\r\n      }\r\n  };\r\n  AtRule.prototype.rulesets = function () {\r\n      if (this.rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n      }\r\n  };\r\n  AtRule.prototype.outputRuleset = function (context, output, rules) {\r\n      var ruleCnt = rules.length;\r\n      var i;\r\n      context.tabLevel = (context.tabLevel | 0) + 1;\r\n      // Compressed\r\n      if (context.compress) {\r\n          output.add('{');\r\n          for (i = 0; i < ruleCnt; i++) {\r\n              rules[i].genCSS(context, output);\r\n          }\r\n          output.add('}');\r\n          context.tabLevel--;\r\n          return;\r\n      }\r\n      // Non-compressed\r\n      var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  ');\r\n      var tabRuleStr = tabSetStr + \"  \";\r\n      if (!ruleCnt) {\r\n          output.add(\" {\" + tabSetStr + \"}\");\r\n      }\r\n      else {\r\n          output.add(\" {\" + tabRuleStr);\r\n          rules[0].genCSS(context, output);\r\n          for (i = 1; i < ruleCnt; i++) {\r\n              output.add(tabRuleStr);\r\n              rules[i].genCSS(context, output);\r\n          }\r\n          output.add(tabSetStr + \"}\");\r\n      }\r\n      context.tabLevel--;\r\n  };\r\n  AtRule.prototype.type = 'AtRule';\n\n  var DetachedRuleset = function (ruleset, frames) {\r\n      this.ruleset = ruleset;\r\n      this.frames = frames;\r\n      this.setParent(this.ruleset, this);\r\n  };\r\n  DetachedRuleset.prototype = new Node();\r\n  DetachedRuleset.prototype.accept = function (visitor) {\r\n      this.ruleset = visitor.visit(this.ruleset);\r\n  };\r\n  DetachedRuleset.prototype.eval = function (context) {\r\n      var frames = this.frames || copyArray(context.frames);\r\n      return new DetachedRuleset(this.ruleset, frames);\r\n  };\r\n  DetachedRuleset.prototype.callEval = function (context) {\r\n      return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n  };\r\n  DetachedRuleset.prototype.type = 'DetachedRuleset';\r\n  DetachedRuleset.prototype.evalFirst = true;\n\n  var Unit = function (numerator, denominator, backupUnit) {\r\n      this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n      this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n      if (backupUnit) {\r\n          this.backupUnit = backupUnit;\r\n      }\r\n      else if (numerator && numerator.length) {\r\n          this.backupUnit = numerator[0];\r\n      }\r\n  };\r\n  Unit.prototype = new Node();\r\n  Unit.prototype.clone = function () {\r\n      return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n  };\r\n  Unit.prototype.genCSS = function (context, output) {\r\n      // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n      var strictUnits = context && context.strictUnits;\r\n      if (this.numerator.length === 1) {\r\n          output.add(this.numerator[0]); // the ideal situation\r\n      }\r\n      else if (!strictUnits && this.backupUnit) {\r\n          output.add(this.backupUnit);\r\n      }\r\n      else if (!strictUnits && this.denominator.length) {\r\n          output.add(this.denominator[0]);\r\n      }\r\n  };\r\n  Unit.prototype.toString = function () {\r\n      var i;\r\n      var returnStr = this.numerator.join('*');\r\n      for (i = 0; i < this.denominator.length; i++) {\r\n          returnStr += \"/\" + this.denominator[i];\r\n      }\r\n      return returnStr;\r\n  };\r\n  Unit.prototype.compare = function (other) {\r\n      return this.is(other.toString()) ? 0 : undefined;\r\n  };\r\n  Unit.prototype.is = function (unitString) {\r\n      return this.toString().toUpperCase() === unitString.toUpperCase();\r\n  };\r\n  Unit.prototype.isLength = function () {\r\n      return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n  };\r\n  Unit.prototype.isEmpty = function () {\r\n      return this.numerator.length === 0 && this.denominator.length === 0;\r\n  };\r\n  Unit.prototype.isSingular = function () {\r\n      return this.numerator.length <= 1 && this.denominator.length === 0;\r\n  };\r\n  Unit.prototype.map = function (callback) {\r\n      var i;\r\n      for (i = 0; i < this.numerator.length; i++) {\r\n          this.numerator[i] = callback(this.numerator[i], false);\r\n      }\r\n      for (i = 0; i < this.denominator.length; i++) {\r\n          this.denominator[i] = callback(this.denominator[i], true);\r\n      }\r\n  };\r\n  Unit.prototype.usedUnits = function () {\r\n      var group;\r\n      var result = {};\r\n      var mapUnit;\r\n      var groupName;\r\n      mapUnit = function (atomicUnit) {\r\n          /* jshint loopfunc:true */\r\n          if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n              result[groupName] = atomicUnit;\r\n          }\r\n          return atomicUnit;\r\n      };\r\n      for (groupName in unitConversions) {\r\n          if (unitConversions.hasOwnProperty(groupName)) {\r\n              group = unitConversions[groupName];\r\n              this.map(mapUnit);\r\n          }\r\n      }\r\n      return result;\r\n  };\r\n  Unit.prototype.cancel = function () {\r\n      var counter = {};\r\n      var atomicUnit;\r\n      var i;\r\n      for (i = 0; i < this.numerator.length; i++) {\r\n          atomicUnit = this.numerator[i];\r\n          counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n      }\r\n      for (i = 0; i < this.denominator.length; i++) {\r\n          atomicUnit = this.denominator[i];\r\n          counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n      }\r\n      this.numerator = [];\r\n      this.denominator = [];\r\n      for (atomicUnit in counter) {\r\n          if (counter.hasOwnProperty(atomicUnit)) {\r\n              var count = counter[atomicUnit];\r\n              if (count > 0) {\r\n                  for (i = 0; i < count; i++) {\r\n                      this.numerator.push(atomicUnit);\r\n                  }\r\n              }\r\n              else if (count < 0) {\r\n                  for (i = 0; i < -count; i++) {\r\n                      this.denominator.push(atomicUnit);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      this.numerator.sort();\r\n      this.denominator.sort();\r\n  };\r\n  Unit.prototype.type = 'Unit';\n\n  //\r\n  // A number with a unit\r\n  //\r\n  var Dimension = function (value, unit) {\r\n      this.value = parseFloat(value);\r\n      if (isNaN(this.value)) {\r\n          throw new Error('Dimension is not a number.');\r\n      }\r\n      this.unit = (unit && unit instanceof Unit) ? unit :\r\n          new Unit(unit ? [unit] : undefined);\r\n      this.setParent(this.unit, this);\r\n  };\r\n  Dimension.prototype = new Node();\r\n  Dimension.prototype.accept = function (visitor) {\r\n      this.unit = visitor.visit(this.unit);\r\n  };\r\n  Dimension.prototype.eval = function (context) {\r\n      return this;\r\n  };\r\n  Dimension.prototype.toColor = function () {\r\n      return new Color([this.value, this.value, this.value]);\r\n  };\r\n  Dimension.prototype.genCSS = function (context, output) {\r\n      if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n          throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n      }\r\n      var value = this.fround(context, this.value);\r\n      var strValue = String(value);\r\n      if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n          // would be output 1e-6 etc.\r\n          strValue = value.toFixed(20).replace(/0+$/, '');\r\n      }\r\n      if (context && context.compress) {\r\n          // Zero values doesn't need a unit\r\n          if (value === 0 && this.unit.isLength()) {\r\n              output.add(strValue);\r\n              return;\r\n          }\r\n          // Float values doesn't need a leading zero\r\n          if (value > 0 && value < 1) {\r\n              strValue = (strValue).substr(1);\r\n          }\r\n      }\r\n      output.add(strValue);\r\n      this.unit.genCSS(context, output);\r\n  };\r\n  // In an operation between two Dimensions,\r\n  // we default to the first Dimension's unit,\r\n  // so `1px + 2` will yield `3px`.\r\n  Dimension.prototype.operate = function (context, op, other) {\r\n      /* jshint noempty:false */\r\n      var value = this._operate(context, op, this.value, other.value);\r\n      var unit = this.unit.clone();\r\n      if (op === '+' || op === '-') {\r\n          if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n              unit = other.unit.clone();\r\n              if (this.unit.backupUnit) {\r\n                  unit.backupUnit = this.unit.backupUnit;\r\n              }\r\n          }\r\n          else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n          else {\r\n              other = other.convertTo(this.unit.usedUnits());\r\n              if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                  throw new Error(\"Incompatible units. Change the units or use the unit function. \" +\r\n                      (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n              }\r\n              value = this._operate(context, op, this.value, other.value);\r\n          }\r\n      }\r\n      else if (op === '*') {\r\n          unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n          unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n          unit.cancel();\r\n      }\r\n      else if (op === '/') {\r\n          unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n          unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n          unit.cancel();\r\n      }\r\n      return new Dimension(value, unit);\r\n  };\r\n  Dimension.prototype.compare = function (other) {\r\n      var a;\r\n      var b;\r\n      if (!(other instanceof Dimension)) {\r\n          return undefined;\r\n      }\r\n      if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n          a = this;\r\n          b = other;\r\n      }\r\n      else {\r\n          a = this.unify();\r\n          b = other.unify();\r\n          if (a.unit.compare(b.unit) !== 0) {\r\n              return undefined;\r\n          }\r\n      }\r\n      return Node.numericCompare(a.value, b.value);\r\n  };\r\n  Dimension.prototype.unify = function () {\r\n      return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n  };\r\n  Dimension.prototype.convertTo = function (conversions) {\r\n      var value = this.value;\r\n      var unit = this.unit.clone();\r\n      var i;\r\n      var groupName;\r\n      var group;\r\n      var targetUnit;\r\n      var derivedConversions = {};\r\n      var applyUnit;\r\n      if (typeof conversions === 'string') {\r\n          for (i in unitConversions) {\r\n              if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                  derivedConversions = {};\r\n                  derivedConversions[i] = conversions;\r\n              }\r\n          }\r\n          conversions = derivedConversions;\r\n      }\r\n      applyUnit = function (atomicUnit, denominator) {\r\n          /* jshint loopfunc:true */\r\n          if (group.hasOwnProperty(atomicUnit)) {\r\n              if (denominator) {\r\n                  value = value / (group[atomicUnit] / group[targetUnit]);\r\n              }\r\n              else {\r\n                  value = value * (group[atomicUnit] / group[targetUnit]);\r\n              }\r\n              return targetUnit;\r\n          }\r\n          return atomicUnit;\r\n      };\r\n      for (groupName in conversions) {\r\n          if (conversions.hasOwnProperty(groupName)) {\r\n              targetUnit = conversions[groupName];\r\n              group = unitConversions[groupName];\r\n              unit.map(applyUnit);\r\n          }\r\n      }\r\n      unit.cancel();\r\n      return new Dimension(value, unit);\r\n  };\r\n  Dimension.prototype.type = 'Dimension';\n\n  var MATH$1 = Math$1;\r\n  var Operation = function (op, operands, isSpaced) {\r\n      this.op = op.trim();\r\n      this.operands = operands;\r\n      this.isSpaced = isSpaced;\r\n  };\r\n  Operation.prototype = new Node();\r\n  Operation.prototype.accept = function (visitor) {\r\n      this.operands = visitor.visitArray(this.operands);\r\n  };\r\n  Operation.prototype.eval = function (context) {\r\n      var a = this.operands[0].eval(context);\r\n      var b = this.operands[1].eval(context);\r\n      var op;\r\n      if (context.isMathOn(this.op)) {\r\n          op = this.op === './' ? '/' : this.op;\r\n          if (a instanceof Dimension && b instanceof Color) {\r\n              a = a.toColor();\r\n          }\r\n          if (b instanceof Dimension && a instanceof Color) {\r\n              b = b.toColor();\r\n          }\r\n          if (!a.operate) {\r\n              if (a instanceof Operation && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\r\n                  return new Operation(this.op, [a, b], this.isSpaced);\r\n              }\r\n              throw { type: 'Operation',\r\n                  message: 'Operation on an invalid type' };\r\n          }\r\n          return a.operate(context, op, b);\r\n      }\r\n      else {\r\n          return new Operation(this.op, [a, b], this.isSpaced);\r\n      }\r\n  };\r\n  Operation.prototype.genCSS = function (context, output) {\r\n      this.operands[0].genCSS(context, output);\r\n      if (this.isSpaced) {\r\n          output.add(' ');\r\n      }\r\n      output.add(this.op);\r\n      if (this.isSpaced) {\r\n          output.add(' ');\r\n      }\r\n      this.operands[1].genCSS(context, output);\r\n  };\r\n  Operation.prototype.type = 'Operation';\n\n  var MATH$2 = Math$1;\r\n  var Expression = function (value, noSpacing) {\r\n      this.value = value;\r\n      this.noSpacing = noSpacing;\r\n      if (!value) {\r\n          throw new Error('Expression requires an array parameter');\r\n      }\r\n  };\r\n  Expression.prototype = new Node();\r\n  Expression.prototype.accept = function (visitor) {\r\n      this.value = visitor.visitArray(this.value);\r\n  };\r\n  Expression.prototype.eval = function (context) {\r\n      var returnValue;\r\n      var mathOn = context.isMathOn();\r\n      var inParenthesis = this.parens &&\r\n          (context.math !== MATH$2.STRICT_LEGACY || !this.parensInOp);\r\n      var doubleParen = false;\r\n      if (inParenthesis) {\r\n          context.inParenthesis();\r\n      }\r\n      if (this.value.length > 1) {\r\n          returnValue = new Expression(this.value.map(function (e) {\r\n              if (!e.eval) {\r\n                  return e;\r\n              }\r\n              return e.eval(context);\r\n          }), this.noSpacing);\r\n      }\r\n      else if (this.value.length === 1) {\r\n          if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n              doubleParen = true;\r\n          }\r\n          returnValue = this.value[0].eval(context);\r\n      }\r\n      else {\r\n          returnValue = this;\r\n      }\r\n      if (inParenthesis) {\r\n          context.outOfParenthesis();\r\n      }\r\n      if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n          && (!(returnValue instanceof Dimension))) {\r\n          returnValue = new Paren(returnValue);\r\n      }\r\n      return returnValue;\r\n  };\r\n  Expression.prototype.genCSS = function (context, output) {\r\n      for (var i = 0; i < this.value.length; i++) {\r\n          this.value[i].genCSS(context, output);\r\n          if (!this.noSpacing && i + 1 < this.value.length) {\r\n              output.add(' ');\r\n          }\r\n      }\r\n  };\r\n  Expression.prototype.throwAwayComments = function () {\r\n      this.value = this.value.filter(function (v) { return !(v instanceof Comment); });\r\n  };\r\n  Expression.prototype.type = 'Expression';\n\n  var functionCaller = /** @class */ (function () {\r\n      function functionCaller(name, context, index, currentFileInfo) {\r\n          this.name = name.toLowerCase();\r\n          this.index = index;\r\n          this.context = context;\r\n          this.currentFileInfo = currentFileInfo;\r\n          this.func = context.frames[0].functionRegistry.get(this.name);\r\n      }\r\n      functionCaller.prototype.isValid = function () {\r\n          return Boolean(this.func);\r\n      };\r\n      functionCaller.prototype.call = function (args) {\r\n          var _this = this;\r\n          var evalArgs = this.func.evalArgs;\r\n          if (evalArgs !== false) {\r\n              args = args.map(function (a) { return a.eval(_this.context); });\r\n          }\r\n          // This code is terrible and should be replaced as per this issue...\r\n          // https://github.com/less/less.js/issues/2477\r\n          if (Array.isArray(args)) {\r\n              args = args.filter(function (item) {\r\n                  if (item.type === 'Comment') {\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              })\r\n                  .map(function (item) {\r\n                  if (item.type === 'Expression') {\r\n                      var subNodes = item.value.filter(function (item) {\r\n                          if (item.type === 'Comment') {\r\n                              return false;\r\n                          }\r\n                          return true;\r\n                      });\r\n                      if (subNodes.length === 1) {\r\n                          return subNodes[0];\r\n                      }\r\n                      else {\r\n                          return new Expression(subNodes);\r\n                      }\r\n                  }\r\n                  return item;\r\n              });\r\n          }\r\n          if (evalArgs === false) {\r\n              return this.func.apply(this, __spreadArrays([this.context], args));\r\n          }\r\n          return this.func.apply(this, args);\r\n      };\r\n      return functionCaller;\r\n  }());\n\n  //\r\n  // A function call node.\r\n  //\r\n  var Call = function (name, args, index, currentFileInfo) {\r\n      this.name = name;\r\n      this.args = args;\r\n      this.calc = name === 'calc';\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  Call.prototype = new Node();\r\n  Call.prototype.accept = function (visitor) {\r\n      if (this.args) {\r\n          this.args = visitor.visitArray(this.args);\r\n      }\r\n  };\r\n  //\r\n  // When evaluating a function call,\r\n  // we either find the function in the functionRegistry,\r\n  // in which case we call it, passing the  evaluated arguments,\r\n  // if this returns null or we cannot find the function, we\r\n  // simply print it out as it appeared originally [2].\r\n  //\r\n  // The reason why we evaluate the arguments, is in the case where\r\n  // we try to pass a variable to a function, like: `saturate(@color)`.\r\n  // The function should receive the value, not the variable.\r\n  //\r\n  Call.prototype.eval = function (context) {\r\n      var _this = this;\r\n      /**\r\n       * Turn off math for calc(), and switch back on for evaluating nested functions\r\n       */\r\n      var currentMathContext = context.mathOn;\r\n      context.mathOn = !this.calc;\r\n      if (this.calc || context.inCalc) {\r\n          context.enterCalc();\r\n      }\r\n      var exitCalc = function () {\r\n          if (_this.calc || context.inCalc) {\r\n              context.exitCalc();\r\n          }\r\n          context.mathOn = currentMathContext;\r\n      };\r\n      var result;\r\n      var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n      if (funcCaller.isValid()) {\r\n          try {\r\n              result = funcCaller.call(this.args);\r\n              exitCalc();\r\n          }\r\n          catch (e) {\r\n              if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                  throw e;\r\n              }\r\n              throw {\r\n                  type: e.type || 'Runtime',\r\n                  message: \"error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                  index: this.getIndex(),\r\n                  filename: this.fileInfo().filename,\r\n                  line: e.lineNumber,\r\n                  column: e.columnNumber\r\n              };\r\n          }\r\n          if (result !== null && result !== undefined) {\r\n              // Results that that are not nodes are cast as Anonymous nodes\r\n              // Falsy values or booleans are returned as empty nodes\r\n              if (!(result instanceof Node)) {\r\n                  if (!result || result === true) {\r\n                      result = new Anonymous(null);\r\n                  }\r\n                  else {\r\n                      result = new Anonymous(result.toString());\r\n                  }\r\n              }\r\n              result._index = this._index;\r\n              result._fileInfo = this._fileInfo;\r\n              return result;\r\n          }\r\n      }\r\n      var args = this.args.map(function (a) { return a.eval(context); });\r\n      exitCalc();\r\n      return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n  };\r\n  Call.prototype.genCSS = function (context, output) {\r\n      output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n      for (var i = 0; i < this.args.length; i++) {\r\n          this.args[i].genCSS(context, output);\r\n          if (i + 1 < this.args.length) {\r\n              output.add(', ');\r\n          }\r\n      }\r\n      output.add(')');\r\n  };\r\n  Call.prototype.type = 'Call';\n\n  var Variable = function (name, index, currentFileInfo) {\r\n      this.name = name;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  Variable.prototype = new Node();\r\n  Variable.prototype.eval = function (context) {\r\n      var variable;\r\n      var name = this.name;\r\n      if (name.indexOf('@@') === 0) {\r\n          name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n      }\r\n      if (this.evaluating) {\r\n          throw { type: 'Name', message: \"Recursive variable definition for \" + name, filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      this.evaluating = true;\r\n      variable = this.find(context.frames, function (frame) {\r\n          var v = frame.variable(name);\r\n          if (v) {\r\n              if (v.important) {\r\n                  var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                  importantScope.important = v.important;\r\n              }\r\n              // If in calc, wrap vars in a function call to cascade evaluate args first\r\n              if (context.inCalc) {\r\n                  return (new Call('_SELF', [v.value])).eval(context);\r\n              }\r\n              else {\r\n                  return v.value.eval(context);\r\n              }\r\n          }\r\n      });\r\n      if (variable) {\r\n          this.evaluating = false;\r\n          return variable;\r\n      }\r\n      else {\r\n          throw { type: 'Name', message: \"variable \" + name + \" is undefined\", filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n  };\r\n  Variable.prototype.find = function (obj, fun) {\r\n      for (var i = 0, r = void 0; i < obj.length; i++) {\r\n          r = fun.call(obj, obj[i]);\r\n          if (r) {\r\n              return r;\r\n          }\r\n      }\r\n      return null;\r\n  };\r\n  Variable.prototype.type = 'Variable';\n\n  var Property = function (name, index, currentFileInfo) {\r\n      this.name = name;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  Property.prototype = new Node();\r\n  Property.prototype.eval = function (context) {\r\n      var property;\r\n      var name = this.name;\r\n      // TODO: shorten this reference\r\n      var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n      if (this.evaluating) {\r\n          throw { type: 'Name', message: \"Recursive property reference for \" + name, filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      this.evaluating = true;\r\n      property = this.find(context.frames, function (frame) {\r\n          var v;\r\n          var vArr = frame.property(name);\r\n          if (vArr) {\r\n              for (var i = 0; i < vArr.length; i++) {\r\n                  v = vArr[i];\r\n                  vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n              }\r\n              mergeRules(vArr);\r\n              v = vArr[vArr.length - 1];\r\n              if (v.important) {\r\n                  var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                  importantScope.important = v.important;\r\n              }\r\n              v = v.value.eval(context);\r\n              return v;\r\n          }\r\n      });\r\n      if (property) {\r\n          this.evaluating = false;\r\n          return property;\r\n      }\r\n      else {\r\n          throw { type: 'Name', message: \"Property '\" + name + \"' is undefined\", filename: this.currentFileInfo.filename,\r\n              index: this.index };\r\n      }\r\n  };\r\n  Property.prototype.find = function (obj, fun) {\r\n      for (var i = 0, r = void 0; i < obj.length; i++) {\r\n          r = fun.call(obj, obj[i]);\r\n          if (r) {\r\n              return r;\r\n          }\r\n      }\r\n      return null;\r\n  };\r\n  Property.prototype.type = 'Property';\n\n  var Attribute = function (key, op, value) {\r\n      this.key = key;\r\n      this.op = op;\r\n      this.value = value;\r\n  };\r\n  Attribute.prototype = new Node();\r\n  Attribute.prototype.eval = function (context) {\r\n      return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\r\n  };\r\n  Attribute.prototype.genCSS = function (context, output) {\r\n      output.add(this.toCSS(context));\r\n  };\r\n  Attribute.prototype.toCSS = function (context) {\r\n      var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n      if (this.op) {\r\n          value += this.op;\r\n          value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n      }\r\n      return \"[\" + value + \"]\";\r\n  };\r\n  Attribute.prototype.type = 'Attribute';\n\n  var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n      this.escaped = (escaped == null) ? true : escaped;\r\n      this.value = content || '';\r\n      this.quote = str.charAt(0);\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n      this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n      this.allowRoot = escaped;\r\n  };\r\n  Quoted.prototype = new Node();\r\n  Quoted.prototype.genCSS = function (context, output) {\r\n      if (!this.escaped) {\r\n          output.add(this.quote, this.fileInfo(), this.getIndex());\r\n      }\r\n      output.add(this.value);\r\n      if (!this.escaped) {\r\n          output.add(this.quote);\r\n      }\r\n  };\r\n  Quoted.prototype.containsVariables = function () {\r\n      return this.value.match(this.variableRegex);\r\n  };\r\n  Quoted.prototype.eval = function (context) {\r\n      var that = this;\r\n      var value = this.value;\r\n      var variableReplacement = function (_, name) {\r\n          var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n          return (v instanceof Quoted) ? v.value : v.toCSS();\r\n      };\r\n      var propertyReplacement = function (_, name) {\r\n          var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n          return (v instanceof Quoted) ? v.value : v.toCSS();\r\n      };\r\n      function iterativeReplace(value, regexp, replacementFnc) {\r\n          var evaluatedValue = value;\r\n          do {\r\n              value = evaluatedValue.toString();\r\n              evaluatedValue = value.replace(regexp, replacementFnc);\r\n          } while (value !== evaluatedValue);\r\n          return evaluatedValue;\r\n      }\r\n      value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n      value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n      return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n  };\r\n  Quoted.prototype.compare = function (other) {\r\n      // when comparing quoted strings allow the quote to differ\r\n      if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n          return Node.numericCompare(this.value, other.value);\r\n      }\r\n      else {\r\n          return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n      }\r\n  };\r\n  Quoted.prototype.type = 'Quoted';\n\n  var URL = function (val, index, currentFileInfo, isEvald) {\r\n      this.value = val;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.isEvald = isEvald;\r\n  };\r\n  URL.prototype = new Node();\r\n  URL.prototype.accept = function (visitor) {\r\n      this.value = visitor.visit(this.value);\r\n  };\r\n  URL.prototype.genCSS = function (context, output) {\r\n      output.add('url(');\r\n      this.value.genCSS(context, output);\r\n      output.add(')');\r\n  };\r\n  URL.prototype.eval = function (context) {\r\n      var val = this.value.eval(context);\r\n      var rootpath;\r\n      if (!this.isEvald) {\r\n          // Add the rootpath if the URL requires a rewrite\r\n          rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n          if (typeof rootpath === 'string' &&\r\n              typeof val.value === 'string' &&\r\n              context.pathRequiresRewrite(val.value)) {\r\n              if (!val.quote) {\r\n                  rootpath = escapePath(rootpath);\r\n              }\r\n              val.value = context.rewritePath(val.value, rootpath);\r\n          }\r\n          else {\r\n              val.value = context.normalizePath(val.value);\r\n          }\r\n          // Add url args if enabled\r\n          if (context.urlArgs) {\r\n              if (!val.value.match(/^\\s*data:/)) {\r\n                  var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                  var urlArgs = delimiter + context.urlArgs;\r\n                  if (val.value.indexOf('#') !== -1) {\r\n                      val.value = val.value.replace('#', urlArgs + \"#\");\r\n                  }\r\n                  else {\r\n                      val.value += urlArgs;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n  };\r\n  URL.prototype.type = 'Url';\r\n  function escapePath(path) {\r\n      return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n  }\n\n  var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n      this.features = new Value(features);\r\n      this.rules = [new Ruleset(selectors, value)];\r\n      this.rules[0].allowImports = true;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n      this.setParent(selectors, this);\r\n      this.setParent(this.features, this);\r\n      this.setParent(this.rules, this);\r\n  };\r\n  Media.prototype = new AtRule();\r\n  Media.prototype.isRulesetLike = function () {\r\n      return true;\r\n  };\r\n  Media.prototype.accept = function (visitor) {\r\n      if (this.features) {\r\n          this.features = visitor.visit(this.features);\r\n      }\r\n      if (this.rules) {\r\n          this.rules = visitor.visitArray(this.rules);\r\n      }\r\n  };\r\n  Media.prototype.genCSS = function (context, output) {\r\n      output.add('@media ', this._fileInfo, this._index);\r\n      this.features.genCSS(context, output);\r\n      this.outputRuleset(context, output, this.rules);\r\n  };\r\n  Media.prototype.eval = function (context) {\r\n      if (!context.mediaBlocks) {\r\n          context.mediaBlocks = [];\r\n          context.mediaPath = [];\r\n      }\r\n      var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n      if (this.debugInfo) {\r\n          this.rules[0].debugInfo = this.debugInfo;\r\n          media.debugInfo = this.debugInfo;\r\n      }\r\n      media.features = this.features.eval(context);\r\n      context.mediaPath.push(media);\r\n      context.mediaBlocks.push(media);\r\n      this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n      context.frames.unshift(this.rules[0]);\r\n      media.rules = [this.rules[0].eval(context)];\r\n      context.frames.shift();\r\n      context.mediaPath.pop();\r\n      return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n          media.evalNested(context);\r\n  };\r\n  Media.prototype.evalTop = function (context) {\r\n      var result = this;\r\n      // Render all dependent Media blocks.\r\n      if (context.mediaBlocks.length > 1) {\r\n          var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n          result = new Ruleset(selectors, context.mediaBlocks);\r\n          result.multiMedia = true;\r\n          result.copyVisibilityInfo(this.visibilityInfo());\r\n          this.setParent(result, this);\r\n      }\r\n      delete context.mediaBlocks;\r\n      delete context.mediaPath;\r\n      return result;\r\n  };\r\n  Media.prototype.evalNested = function (context) {\r\n      var i;\r\n      var value;\r\n      var path = context.mediaPath.concat([this]);\r\n      // Extract the media-query conditions separated with `,` (OR).\r\n      for (i = 0; i < path.length; i++) {\r\n          value = path[i].features instanceof Value ?\r\n              path[i].features.value : path[i].features;\r\n          path[i] = Array.isArray(value) ? value : [value];\r\n      }\r\n      // Trace all permutations to generate the resulting media-query.\r\n      //\r\n      // (a, b and c) with nested (d, e) ->\r\n      //    a and d\r\n      //    a and e\r\n      //    b and c and d\r\n      //    b and c and e\r\n      this.features = new Value(this.permute(path).map(function (path) {\r\n          path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n          for (i = path.length - 1; i > 0; i--) {\r\n              path.splice(i, 0, new Anonymous('and'));\r\n          }\r\n          return new Expression(path);\r\n      }));\r\n      this.setParent(this.features, this);\r\n      // Fake a tree-node that doesn't output anything.\r\n      return new Ruleset([], []);\r\n  };\r\n  Media.prototype.permute = function (arr) {\r\n      if (arr.length === 0) {\r\n          return [];\r\n      }\r\n      else if (arr.length === 1) {\r\n          return arr[0];\r\n      }\r\n      else {\r\n          var result = [];\r\n          var rest = this.permute(arr.slice(1));\r\n          for (var i = 0; i < rest.length; i++) {\r\n              for (var j = 0; j < arr[0].length; j++) {\r\n                  result.push([arr[0][j]].concat(rest[i]));\r\n              }\r\n          }\r\n          return result;\r\n      }\r\n  };\r\n  Media.prototype.bubbleSelectors = function (selectors) {\r\n      if (!selectors) {\r\n          return;\r\n      }\r\n      this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n      this.setParent(this.rules, this);\r\n  };\r\n  Media.prototype.type = 'Media';\n\n  //\r\n  // CSS @import node\r\n  //\r\n  // The general strategy here is that we don't want to wait\r\n  // for the parsing to be completed, before we start importing\r\n  // the file. That's because in the context of a browser,\r\n  // most of the time will be spent waiting for the server to respond.\r\n  //\r\n  // On creation, we push the import path to our import queue, though\r\n  // `import,push`, we also pass it a callback, which it'll call once\r\n  // the file has been fetched, and parsed.\r\n  //\r\n  var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n      this.options = options;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.path = path;\r\n      this.features = features;\r\n      this.allowRoot = true;\r\n      if (this.options.less !== undefined || this.options.inline) {\r\n          this.css = !this.options.less || this.options.inline;\r\n      }\r\n      else {\r\n          var pathValue = this.getPath();\r\n          if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n              this.css = true;\r\n          }\r\n      }\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.setParent(this.features, this);\r\n      this.setParent(this.path, this);\r\n  };\r\n  Import.prototype = new Node();\r\n  Import.prototype.accept = function (visitor) {\r\n      if (this.features) {\r\n          this.features = visitor.visit(this.features);\r\n      }\r\n      this.path = visitor.visit(this.path);\r\n      if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n          this.root = visitor.visit(this.root);\r\n      }\r\n  };\r\n  Import.prototype.genCSS = function (context, output) {\r\n      if (this.css && this.path._fileInfo.reference === undefined) {\r\n          output.add('@import ', this._fileInfo, this._index);\r\n          this.path.genCSS(context, output);\r\n          if (this.features) {\r\n              output.add(' ');\r\n              this.features.genCSS(context, output);\r\n          }\r\n          output.add(';');\r\n      }\r\n  };\r\n  Import.prototype.getPath = function () {\r\n      return (this.path instanceof URL) ?\r\n          this.path.value.value : this.path.value;\r\n  };\r\n  Import.prototype.isVariableImport = function () {\r\n      var path = this.path;\r\n      if (path instanceof URL) {\r\n          path = path.value;\r\n      }\r\n      if (path instanceof Quoted) {\r\n          return path.containsVariables();\r\n      }\r\n      return true;\r\n  };\r\n  Import.prototype.evalForImport = function (context) {\r\n      var path = this.path;\r\n      if (path instanceof URL) {\r\n          path = path.value;\r\n      }\r\n      return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n  };\r\n  Import.prototype.evalPath = function (context) {\r\n      var path = this.path.eval(context);\r\n      var fileInfo = this._fileInfo;\r\n      if (!(path instanceof URL)) {\r\n          // Add the rootpath if the URL requires a rewrite\r\n          var pathValue = path.value;\r\n          if (fileInfo &&\r\n              pathValue &&\r\n              context.pathRequiresRewrite(pathValue)) {\r\n              path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n          }\r\n          else {\r\n              path.value = context.normalizePath(path.value);\r\n          }\r\n      }\r\n      return path;\r\n  };\r\n  Import.prototype.eval = function (context) {\r\n      var result = this.doEval(context);\r\n      if (this.options.reference || this.blocksVisibility()) {\r\n          if (result.length || result.length === 0) {\r\n              result.forEach(function (node) {\r\n                  node.addVisibilityBlock();\r\n              });\r\n          }\r\n          else {\r\n              result.addVisibilityBlock();\r\n          }\r\n      }\r\n      return result;\r\n  };\r\n  Import.prototype.doEval = function (context) {\r\n      var ruleset;\r\n      var registry;\r\n      var features = this.features && this.features.eval(context);\r\n      if (this.options.isPlugin) {\r\n          if (this.root && this.root.eval) {\r\n              try {\r\n                  this.root.eval(context);\r\n              }\r\n              catch (e) {\r\n                  e.message = 'Plugin error during evaluation';\r\n                  throw new LessError(e, this.root.imports, this.root.filename);\r\n              }\r\n          }\r\n          registry = context.frames[0] && context.frames[0].functionRegistry;\r\n          if (registry && this.root && this.root.functions) {\r\n              registry.addMultiple(this.root.functions);\r\n          }\r\n          return [];\r\n      }\r\n      if (this.skip) {\r\n          if (typeof this.skip === 'function') {\r\n              this.skip = this.skip();\r\n          }\r\n          if (this.skip) {\r\n              return [];\r\n          }\r\n      }\r\n      if (this.options.inline) {\r\n          var contents = new Anonymous(this.root, 0, {\r\n              filename: this.importedFilename,\r\n              reference: this.path._fileInfo && this.path._fileInfo.reference\r\n          }, true, true);\r\n          return this.features ? new Media([contents], this.features.value) : [contents];\r\n      }\r\n      else if (this.css) {\r\n          var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n          if (!newImport.css && this.error) {\r\n              throw this.error;\r\n          }\r\n          return newImport;\r\n      }\r\n      else if (this.root) {\r\n          ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n          ruleset.evalImports(context);\r\n          return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n      }\r\n      else {\r\n          return [];\r\n      }\r\n  };\r\n  Import.prototype.type = 'Import';\n\n  var JsEvalNode = function () { };\r\n  JsEvalNode.prototype = new Node();\r\n  JsEvalNode.prototype.evaluateJavaScript = function (expression, context) {\r\n      var result;\r\n      var that = this;\r\n      var evalContext = {};\r\n      if (!context.javascriptEnabled) {\r\n          throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n              filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) { return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context)); });\r\n      try {\r\n          expression = new Function(\"return (\" + expression + \")\");\r\n      }\r\n      catch (e) {\r\n          throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\", filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      var variables = context.frames[0].variables();\r\n      for (var k in variables) {\r\n          if (variables.hasOwnProperty(k)) {\r\n              /* jshint loopfunc:true */\r\n              evalContext[k.slice(1)] = {\r\n                  value: variables[k].value,\r\n                  toJS: function () {\r\n                      return this.value.eval(context).toCSS();\r\n                  }\r\n              };\r\n          }\r\n      }\r\n      try {\r\n          result = expression.call(evalContext);\r\n      }\r\n      catch (e) {\r\n          throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\", filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      return result;\r\n  };\r\n  JsEvalNode.prototype.jsify = function (obj) {\r\n      if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n          return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n      }\r\n      else {\r\n          return obj.toCSS();\r\n      }\r\n  };\n\n  var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n      this.escaped = escaped;\r\n      this.expression = string;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  JavaScript.prototype = new JsEvalNode();\r\n  JavaScript.prototype.eval = function (context) {\r\n      var result = this.evaluateJavaScript(this.expression, context);\r\n      var type = typeof result;\r\n      if (type === 'number' && !isNaN(result)) {\r\n          return new Dimension(result);\r\n      }\r\n      else if (type === 'string') {\r\n          return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n      }\r\n      else if (Array.isArray(result)) {\r\n          return new Anonymous(result.join(', '));\r\n      }\r\n      else {\r\n          return new Anonymous(result);\r\n      }\r\n  };\r\n  JavaScript.prototype.type = 'JavaScript';\n\n  var Assignment = function (key, val) {\r\n      this.key = key;\r\n      this.value = val;\r\n  };\r\n  Assignment.prototype = new Node();\r\n  Assignment.prototype.accept = function (visitor) {\r\n      this.value = visitor.visit(this.value);\r\n  };\r\n  Assignment.prototype.eval = function (context) {\r\n      if (this.value.eval) {\r\n          return new Assignment(this.key, this.value.eval(context));\r\n      }\r\n      return this;\r\n  };\r\n  Assignment.prototype.genCSS = function (context, output) {\r\n      output.add(this.key + \"=\");\r\n      if (this.value.genCSS) {\r\n          this.value.genCSS(context, output);\r\n      }\r\n      else {\r\n          output.add(this.value);\r\n      }\r\n  };\r\n  Assignment.prototype.type = 'Assignment';\n\n  var Condition = function (op, l, r, i, negate) {\r\n      this.op = op.trim();\r\n      this.lvalue = l;\r\n      this.rvalue = r;\r\n      this._index = i;\r\n      this.negate = negate;\r\n  };\r\n  Condition.prototype = new Node();\r\n  Condition.prototype.accept = function (visitor) {\r\n      this.lvalue = visitor.visit(this.lvalue);\r\n      this.rvalue = visitor.visit(this.rvalue);\r\n  };\r\n  Condition.prototype.eval = function (context) {\r\n      var result = (function (op, a, b) {\r\n          switch (op) {\r\n              case 'and': return a && b;\r\n              case 'or': return a || b;\r\n              default:\r\n                  switch (Node.compare(a, b)) {\r\n                      case -1:\r\n                          return op === '<' || op === '=<' || op === '<=';\r\n                      case 0:\r\n                          return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                      case 1:\r\n                          return op === '>' || op === '>=';\r\n                      default:\r\n                          return false;\r\n                  }\r\n          }\r\n      })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n      return this.negate ? !result : result;\r\n  };\r\n  Condition.prototype.type = 'Condition';\n\n  var UnicodeDescriptor = function (value) {\r\n      this.value = value;\r\n  };\r\n  UnicodeDescriptor.prototype = new Node();\r\n  UnicodeDescriptor.prototype.type = 'UnicodeDescriptor';\n\n  var Negative = function (node) {\r\n      this.value = node;\r\n  };\r\n  Negative.prototype = new Node();\r\n  Negative.prototype.genCSS = function (context, output) {\r\n      output.add('-');\r\n      this.value.genCSS(context, output);\r\n  };\r\n  Negative.prototype.eval = function (context) {\r\n      if (context.isMathOn()) {\r\n          return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n      }\r\n      return new Negative(this.value.eval(context));\r\n  };\r\n  Negative.prototype.type = 'Negative';\n\n  var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n      this.selector = selector;\r\n      this.option = option;\r\n      this.object_id = Extend.next_id++;\r\n      this.parent_ids = [this.object_id];\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n      switch (option) {\r\n          case 'all':\r\n              this.allowBefore = true;\r\n              this.allowAfter = true;\r\n              break;\r\n          default:\r\n              this.allowBefore = false;\r\n              this.allowAfter = false;\r\n              break;\r\n      }\r\n      this.setParent(this.selector, this);\r\n  };\r\n  Extend.prototype = new Node();\r\n  Extend.prototype.accept = function (visitor) {\r\n      this.selector = visitor.visit(this.selector);\r\n  };\r\n  Extend.prototype.eval = function (context) {\r\n      return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  Extend.prototype.clone = function (context) {\r\n      return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  // it concatenates (joins) all selectors in selector array\r\n  Extend.prototype.findSelfSelectors = function (selectors) {\r\n      var selfElements = [];\r\n      var i;\r\n      var selectorElements;\r\n      for (i = 0; i < selectors.length; i++) {\r\n          selectorElements = selectors[i].elements;\r\n          // duplicate the logic in genCSS function inside the selector node.\r\n          // future TODO - move both logics into the selector joiner visitor\r\n          if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n              selectorElements[0].combinator.value = ' ';\r\n          }\r\n          selfElements = selfElements.concat(selectors[i].elements);\r\n      }\r\n      this.selfSelectors = [new Selector(selfElements)];\r\n      this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n  };\r\n  /**\r\n   * Used with the extend visitor\r\n   */\r\n  Extend.next_id = 0;\r\n  Extend.prototype.type = 'Extend';\n\n  var VariableCall = function (variable, index, currentFileInfo) {\r\n      this.variable = variable;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.allowRoot = true;\r\n  };\r\n  VariableCall.prototype = new Node();\r\n  VariableCall.prototype.eval = function (context) {\r\n      var rules;\r\n      var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n      var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n      if (!detachedRuleset.ruleset) {\r\n          if (detachedRuleset.rules) {\r\n              rules = detachedRuleset;\r\n          }\r\n          else if (Array.isArray(detachedRuleset)) {\r\n              rules = new Ruleset('', detachedRuleset);\r\n          }\r\n          else if (Array.isArray(detachedRuleset.value)) {\r\n              rules = new Ruleset('', detachedRuleset.value);\r\n          }\r\n          else {\r\n              throw error;\r\n          }\r\n          detachedRuleset = new DetachedRuleset(rules);\r\n      }\r\n      if (detachedRuleset.ruleset) {\r\n          return detachedRuleset.callEval(context);\r\n      }\r\n      throw error;\r\n  };\r\n  VariableCall.prototype.type = 'VariableCall';\n\n  var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n      this.value = ruleCall;\r\n      this.lookups = lookups;\r\n      this._index = index;\r\n      this._fileInfo = fileInfo;\r\n  };\r\n  NamespaceValue.prototype = new Node();\r\n  NamespaceValue.prototype.eval = function (context) {\r\n      var i;\r\n      var name;\r\n      var rules = this.value.eval(context);\r\n      for (i = 0; i < this.lookups.length; i++) {\r\n          name = this.lookups[i];\r\n          /**\r\n           * Eval'd DRs return rulesets.\r\n           * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n           * We need to do this because of late parsing of values\r\n           */\r\n          if (Array.isArray(rules)) {\r\n              rules = new Ruleset([new Selector()], rules);\r\n          }\r\n          if (name === '') {\r\n              rules = rules.lastDeclaration();\r\n          }\r\n          else if (name.charAt(0) === '@') {\r\n              if (name.charAt(1) === '@') {\r\n                  name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n              }\r\n              if (rules.variables) {\r\n                  rules = rules.variable(name);\r\n              }\r\n              if (!rules) {\r\n                  throw { type: 'Name', message: \"variable \" + name + \" not found\", filename: this.fileInfo().filename,\r\n                      index: this.getIndex() };\r\n              }\r\n          }\r\n          else {\r\n              if (name.substring(0, 2) === '$@') {\r\n                  name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n              }\r\n              else {\r\n                  name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n              }\r\n              if (rules.properties) {\r\n                  rules = rules.property(name);\r\n              }\r\n              if (!rules) {\r\n                  throw { type: 'Name', message: \"property \\\"\" + name.substr(1) + \"\\\" not found\", filename: this.fileInfo().filename,\r\n                      index: this.getIndex() };\r\n              }\r\n              // Properties are an array of values, since a ruleset can have multiple props.\r\n              // We pick the last one (the \"cascaded\" value)\r\n              rules = rules[rules.length - 1];\r\n          }\r\n          if (rules.value) {\r\n              rules = rules.eval(context).value;\r\n          }\r\n          if (rules.ruleset) {\r\n              rules = rules.ruleset.eval(context);\r\n          }\r\n      }\r\n      return rules;\r\n  };\r\n  NamespaceValue.prototype.type = 'NamespaceValue';\n\n  var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n      this.name = name || 'anonymous mixin';\r\n      this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n      this.params = params;\r\n      this.condition = condition;\r\n      this.variadic = variadic;\r\n      this.arity = params.length;\r\n      this.rules = rules;\r\n      this._lookups = {};\r\n      var optionalParameters = [];\r\n      this.required = params.reduce(function (count, p) {\r\n          if (!p.name || (p.name && !p.value)) {\r\n              return count + 1;\r\n          }\r\n          else {\r\n              optionalParameters.push(p.name);\r\n              return count;\r\n          }\r\n      }, 0);\r\n      this.optionalParameters = optionalParameters;\r\n      this.frames = frames;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n  };\r\n  Definition.prototype = new Ruleset();\r\n  Definition.prototype.accept = function (visitor) {\r\n      if (this.params && this.params.length) {\r\n          this.params = visitor.visitArray(this.params);\r\n      }\r\n      this.rules = visitor.visitArray(this.rules);\r\n      if (this.condition) {\r\n          this.condition = visitor.visit(this.condition);\r\n      }\r\n  };\r\n  Definition.prototype.evalParams = function (context, mixinEnv, args, evaldArguments) {\r\n      /* jshint boss:true */\r\n      var frame = new Ruleset(null, null);\r\n      var varargs;\r\n      var arg;\r\n      var params = copyArray(this.params);\r\n      var i;\r\n      var j;\r\n      var val;\r\n      var name;\r\n      var isNamedFound;\r\n      var argIndex;\r\n      var argsLength = 0;\r\n      if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n          frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n      }\r\n      mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n      if (args) {\r\n          args = copyArray(args);\r\n          argsLength = args.length;\r\n          for (i = 0; i < argsLength; i++) {\r\n              arg = args[i];\r\n              if (name = (arg && arg.name)) {\r\n                  isNamedFound = false;\r\n                  for (j = 0; j < params.length; j++) {\r\n                      if (!evaldArguments[j] && name === params[j].name) {\r\n                          evaldArguments[j] = arg.value.eval(context);\r\n                          frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                          isNamedFound = true;\r\n                          break;\r\n                      }\r\n                  }\r\n                  if (isNamedFound) {\r\n                      args.splice(i, 1);\r\n                      i--;\r\n                      continue;\r\n                  }\r\n                  else {\r\n                      throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      argIndex = 0;\r\n      for (i = 0; i < params.length; i++) {\r\n          if (evaldArguments[i]) {\r\n              continue;\r\n          }\r\n          arg = args && args[argIndex];\r\n          if (name = params[i].name) {\r\n              if (params[i].variadic) {\r\n                  varargs = [];\r\n                  for (j = argIndex; j < argsLength; j++) {\r\n                      varargs.push(args[j].value.eval(context));\r\n                  }\r\n                  frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n              }\r\n              else {\r\n                  val = arg && arg.value;\r\n                  if (val) {\r\n                      // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                      if (Array.isArray(val)) {\r\n                          val = new DetachedRuleset(new Ruleset('', val));\r\n                      }\r\n                      else {\r\n                          val = val.eval(context);\r\n                      }\r\n                  }\r\n                  else if (params[i].value) {\r\n                      val = params[i].value.eval(mixinEnv);\r\n                      frame.resetCache();\r\n                  }\r\n                  else {\r\n                      throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                  }\r\n                  frame.prependRule(new Declaration(name, val));\r\n                  evaldArguments[i] = val;\r\n              }\r\n          }\r\n          if (params[i].variadic && args) {\r\n              for (j = argIndex; j < argsLength; j++) {\r\n                  evaldArguments[j] = args[j].value.eval(context);\r\n              }\r\n          }\r\n          argIndex++;\r\n      }\r\n      return frame;\r\n  };\r\n  Definition.prototype.makeImportant = function () {\r\n      var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n          if (r.makeImportant) {\r\n              return r.makeImportant(true);\r\n          }\r\n          else {\r\n              return r;\r\n          }\r\n      });\r\n      var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n      return result;\r\n  };\r\n  Definition.prototype.eval = function (context) {\r\n      return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n  };\r\n  Definition.prototype.evalCall = function (context, args, important) {\r\n      var _arguments = [];\r\n      var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n      var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n      var rules;\r\n      var ruleset;\r\n      frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n      rules = copyArray(this.rules);\r\n      ruleset = new Ruleset(null, rules);\r\n      ruleset.originalRuleset = this;\r\n      ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n      if (important) {\r\n          ruleset = ruleset.makeImportant();\r\n      }\r\n      return ruleset;\r\n  };\r\n  Definition.prototype.matchCondition = function (args, context) {\r\n      if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n          .concat(this.frames || []) // the parent namespace/mixin frames\r\n          .concat(context.frames)))) { // the current environment frames\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n  Definition.prototype.matchArgs = function (args, context) {\r\n      var allArgsCnt = (args && args.length) || 0;\r\n      var len;\r\n      var optionalParameters = this.optionalParameters;\r\n      var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n          if (optionalParameters.indexOf(p.name) < 0) {\r\n              return count + 1;\r\n          }\r\n          else {\r\n              return count;\r\n          }\r\n      }, 0);\r\n      if (!this.variadic) {\r\n          if (requiredArgsCnt < this.required) {\r\n              return false;\r\n          }\r\n          if (allArgsCnt > this.params.length) {\r\n              return false;\r\n          }\r\n      }\r\n      else {\r\n          if (requiredArgsCnt < (this.required - 1)) {\r\n              return false;\r\n          }\r\n      }\r\n      // check patterns\r\n      len = Math.min(requiredArgsCnt, this.arity);\r\n      for (var i = 0; i < len; i++) {\r\n          if (!this.params[i].name && !this.params[i].variadic) {\r\n              if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                  return false;\r\n              }\r\n          }\r\n      }\r\n      return true;\r\n  };\r\n  Definition.prototype.type = 'MixinDefinition';\r\n  Definition.prototype.evalFirst = true;\n\n  var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n      this.selector = new Selector(elements);\r\n      this.arguments = args || [];\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.important = important;\r\n      this.allowRoot = true;\r\n      this.setParent(this.selector, this);\r\n  };\r\n  MixinCall.prototype = new Node();\r\n  MixinCall.prototype.accept = function (visitor) {\r\n      if (this.selector) {\r\n          this.selector = visitor.visit(this.selector);\r\n      }\r\n      if (this.arguments.length) {\r\n          this.arguments = visitor.visitArray(this.arguments);\r\n      }\r\n  };\r\n  MixinCall.prototype.eval = function (context) {\r\n      var mixins;\r\n      var mixin;\r\n      var mixinPath;\r\n      var args = [];\r\n      var arg;\r\n      var argValue;\r\n      var rules = [];\r\n      var match = false;\r\n      var i;\r\n      var m;\r\n      var f;\r\n      var isRecursive;\r\n      var isOneFound;\r\n      var candidates = [];\r\n      var candidate;\r\n      var conditionResult = [];\r\n      var defaultResult;\r\n      var defFalseEitherCase = -1;\r\n      var defNone = 0;\r\n      var defTrue = 1;\r\n      var defFalse = 2;\r\n      var count;\r\n      var originalRuleset;\r\n      var noArgumentsFilter;\r\n      this.selector = this.selector.eval(context);\r\n      function calcDefGroup(mixin, mixinPath) {\r\n          var f;\r\n          var p;\r\n          var namespace;\r\n          for (f = 0; f < 2; f++) {\r\n              conditionResult[f] = true;\r\n              defaultFunc.value(f);\r\n              for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                  namespace = mixinPath[p];\r\n                  if (namespace.matchCondition) {\r\n                      conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                  }\r\n              }\r\n              if (mixin.matchCondition) {\r\n                  conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n              }\r\n          }\r\n          if (conditionResult[0] || conditionResult[1]) {\r\n              if (conditionResult[0] != conditionResult[1]) {\r\n                  return conditionResult[1] ?\r\n                      defTrue : defFalse;\r\n              }\r\n              return defNone;\r\n          }\r\n          return defFalseEitherCase;\r\n      }\r\n      for (i = 0; i < this.arguments.length; i++) {\r\n          arg = this.arguments[i];\r\n          argValue = arg.value.eval(context);\r\n          if (arg.expand && Array.isArray(argValue.value)) {\r\n              argValue = argValue.value;\r\n              for (m = 0; m < argValue.length; m++) {\r\n                  args.push({ value: argValue[m] });\r\n              }\r\n          }\r\n          else {\r\n              args.push({ name: arg.name, value: argValue });\r\n          }\r\n      }\r\n      noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n      for (i = 0; i < context.frames.length; i++) {\r\n          if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n              isOneFound = true;\r\n              // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n              // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n              // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n              // we make a final decision.\r\n              for (m = 0; m < mixins.length; m++) {\r\n                  mixin = mixins[m].rule;\r\n                  mixinPath = mixins[m].path;\r\n                  isRecursive = false;\r\n                  for (f = 0; f < context.frames.length; f++) {\r\n                      if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                          isRecursive = true;\r\n                          break;\r\n                      }\r\n                  }\r\n                  if (isRecursive) {\r\n                      continue;\r\n                  }\r\n                  if (mixin.matchArgs(args, context)) {\r\n                      candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                      if (candidate.group !== defFalseEitherCase) {\r\n                          candidates.push(candidate);\r\n                      }\r\n                      match = true;\r\n                  }\r\n              }\r\n              defaultFunc.reset();\r\n              count = [0, 0, 0];\r\n              for (m = 0; m < candidates.length; m++) {\r\n                  count[candidates[m].group]++;\r\n              }\r\n              if (count[defNone] > 0) {\r\n                  defaultResult = defFalse;\r\n              }\r\n              else {\r\n                  defaultResult = defTrue;\r\n                  if ((count[defTrue] + count[defFalse]) > 1) {\r\n                      throw { type: 'Runtime', message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n                  }\r\n              }\r\n              for (m = 0; m < candidates.length; m++) {\r\n                  candidate = candidates[m].group;\r\n                  if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                      try {\r\n                          mixin = candidates[m].mixin;\r\n                          if (!(mixin instanceof Definition)) {\r\n                              originalRuleset = mixin.originalRuleset || mixin;\r\n                              mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                              mixin.originalRuleset = originalRuleset;\r\n                          }\r\n                          var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                          this._setVisibilityToReplacement(newRules);\r\n                          Array.prototype.push.apply(rules, newRules);\r\n                      }\r\n                      catch (e) {\r\n                          throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                      }\r\n                  }\r\n              }\r\n              if (match) {\r\n                  return rules;\r\n              }\r\n          }\r\n      }\r\n      if (isOneFound) {\r\n          throw { type: 'Runtime', message: \"No matching definition was found for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n      }\r\n      else {\r\n          throw { type: 'Name', message: this.selector.toCSS().trim() + \" is undefined\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n      }\r\n  };\r\n  MixinCall.prototype._setVisibilityToReplacement = function (replacement) {\r\n      var i;\r\n      var rule;\r\n      if (this.blocksVisibility()) {\r\n          for (i = 0; i < replacement.length; i++) {\r\n              rule = replacement[i];\r\n              rule.addVisibilityBlock();\r\n          }\r\n      }\r\n  };\r\n  MixinCall.prototype.format = function (args) {\r\n      return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n          var argValue = '';\r\n          if (a.name) {\r\n              argValue += a.name + \":\";\r\n          }\r\n          if (a.value.toCSS) {\r\n              argValue += a.value.toCSS();\r\n          }\r\n          else {\r\n              argValue += '???';\r\n          }\r\n          return argValue;\r\n      }).join(', ') : '') + \")\";\r\n  };\r\n  MixinCall.prototype.type = 'MixinCall';\n\n  var tree = {\r\n      Node: Node, Color: Color, AtRule: AtRule, DetachedRuleset: DetachedRuleset, Operation: Operation,\r\n      Dimension: Dimension, Unit: Unit, Keyword: Keyword, Variable: Variable, Property: Property,\r\n      Ruleset: Ruleset, Element: Element, Attribute: Attribute, Combinator: Combinator, Selector: Selector,\r\n      Quoted: Quoted, Expression: Expression, Declaration: Declaration, Call: Call, URL: URL, Import: Import,\r\n      Comment: Comment, Anonymous: Anonymous, Value: Value, JavaScript: JavaScript, Assignment: Assignment,\r\n      Condition: Condition, Paren: Paren, Media: Media, UnicodeDescriptor: UnicodeDescriptor, Negative: Negative,\r\n      Extend: Extend, VariableCall: VariableCall, NamespaceValue: NamespaceValue,\r\n      mixin: {\r\n          Call: MixinCall,\r\n          Definition: Definition\r\n      }\r\n  };\n\n  var logger = {\r\n      error: function (msg) {\r\n          this._fireEvent('error', msg);\r\n      },\r\n      warn: function (msg) {\r\n          this._fireEvent('warn', msg);\r\n      },\r\n      info: function (msg) {\r\n          this._fireEvent('info', msg);\r\n      },\r\n      debug: function (msg) {\r\n          this._fireEvent('debug', msg);\r\n      },\r\n      addListener: function (listener) {\r\n          this._listeners.push(listener);\r\n      },\r\n      removeListener: function (listener) {\r\n          for (var i = 0; i < this._listeners.length; i++) {\r\n              if (this._listeners[i] === listener) {\r\n                  this._listeners.splice(i, 1);\r\n                  return;\r\n              }\r\n          }\r\n      },\r\n      _fireEvent: function (type, msg) {\r\n          for (var i = 0; i < this._listeners.length; i++) {\r\n              var logFunction = this._listeners[i][type];\r\n              if (logFunction) {\r\n                  logFunction(msg);\r\n              }\r\n          }\r\n      },\r\n      _listeners: []\r\n  };\n\n  /**\r\n   * @todo Document why this abstraction exists, and the relationship between\r\n   *       environment, file managers, and plugin manager\r\n   */\r\n  var environment = /** @class */ (function () {\r\n      function environment(externalEnvironment, fileManagers) {\r\n          this.fileManagers = fileManagers || [];\r\n          externalEnvironment = externalEnvironment || {};\r\n          var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n          var requiredFunctions = [];\r\n          var functions = requiredFunctions.concat(optionalFunctions);\r\n          for (var i = 0; i < functions.length; i++) {\r\n              var propName = functions[i];\r\n              var environmentFunc = externalEnvironment[propName];\r\n              if (environmentFunc) {\r\n                  this[propName] = environmentFunc.bind(externalEnvironment);\r\n              }\r\n              else if (i < requiredFunctions.length) {\r\n                  this.warn(\"missing required function in environment - \" + propName);\r\n              }\r\n          }\r\n      }\r\n      environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n          if (!filename) {\r\n              logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n          }\r\n          if (currentDirectory == null) {\r\n              logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n          }\r\n          var fileManagers = this.fileManagers;\r\n          if (options.pluginManager) {\r\n              fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n          }\r\n          for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n              var fileManager = fileManagers[i];\r\n              if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                  return fileManager;\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      environment.prototype.addFileManager = function (fileManager) {\r\n          this.fileManagers.push(fileManager);\r\n      };\r\n      environment.prototype.clearFileManagers = function () {\r\n          this.fileManagers = [];\r\n      };\r\n      return environment;\r\n  }());\n\n  var AbstractFileManager = /** @class */ (function () {\r\n      function AbstractFileManager() {\r\n      }\r\n      AbstractFileManager.prototype.getPath = function (filename) {\r\n          var j = filename.lastIndexOf('?');\r\n          if (j > 0) {\r\n              filename = filename.slice(0, j);\r\n          }\r\n          j = filename.lastIndexOf('/');\r\n          if (j < 0) {\r\n              j = filename.lastIndexOf('\\\\');\r\n          }\r\n          if (j < 0) {\r\n              return '';\r\n          }\r\n          return filename.slice(0, j + 1);\r\n      };\r\n      AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n          return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n      };\r\n      AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n          return this.tryAppendExtension(path, '.less');\r\n      };\r\n      AbstractFileManager.prototype.supportsSync = function () { return false; };\r\n      AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () { return false; };\r\n      AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n          return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n      };\r\n      // TODO: pull out / replace?\r\n      AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n          if (!basePath) {\r\n              return laterPath;\r\n          }\r\n          return basePath + laterPath;\r\n      };\r\n      AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n          // diff between two paths to create a relative path\r\n          var urlParts = this.extractUrlParts(url);\r\n          var baseUrlParts = this.extractUrlParts(baseUrl);\r\n          var i;\r\n          var max;\r\n          var urlDirectories;\r\n          var baseUrlDirectories;\r\n          var diff = '';\r\n          if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n              return '';\r\n          }\r\n          max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n          for (i = 0; i < max; i++) {\r\n              if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                  break;\r\n              }\r\n          }\r\n          baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n          urlDirectories = urlParts.directories.slice(i);\r\n          for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n              diff += '../';\r\n          }\r\n          for (i = 0; i < urlDirectories.length - 1; i++) {\r\n              diff += urlDirectories[i] + \"/\";\r\n          }\r\n          return diff;\r\n      };\r\n      // helper function, not part of API\r\n      AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n          // urlParts[1] = protocol://hostname/ OR /\r\n          // urlParts[2] = / if path relative to host base\r\n          // urlParts[3] = directories\r\n          // urlParts[4] = filename\r\n          // urlParts[5] = parameters\r\n          var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n          var urlParts = url.match(urlPartsRegex);\r\n          var returner = {};\r\n          var rawDirectories = [];\r\n          var directories = [];\r\n          var i;\r\n          var baseUrlParts;\r\n          if (!urlParts) {\r\n              throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n          }\r\n          // Stylesheets in IE don't always return the full path\r\n          if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n              baseUrlParts = baseUrl.match(urlPartsRegex);\r\n              if (!baseUrlParts) {\r\n                  throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n              }\r\n              urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n              if (!urlParts[2]) {\r\n                  urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n              }\r\n          }\r\n          if (urlParts[3]) {\r\n              rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n              // collapse '..' and skip '.'\r\n              for (i = 0; i < rawDirectories.length; i++) {\r\n                  if (rawDirectories[i] === '..') {\r\n                      directories.pop();\r\n                  }\r\n                  else if (rawDirectories[i] !== '.') {\r\n                      directories.push(rawDirectories[i]);\r\n                  }\r\n              }\r\n          }\r\n          returner.hostPart = urlParts[1];\r\n          returner.directories = directories;\r\n          returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n          returner.path = (urlParts[1] || '') + directories.join('/');\r\n          returner.filename = urlParts[4];\r\n          returner.fileUrl = returner.path + (urlParts[4] || '');\r\n          returner.url = returner.fileUrl + (urlParts[5] || '');\r\n          return returner;\r\n      };\r\n      return AbstractFileManager;\r\n  }());\n\n  var AbstractPluginLoader = /** @class */ (function () {\r\n      function AbstractPluginLoader() {\r\n          // Implemented by Node.js plugin loader\r\n          this.require = function () { return null; };\r\n      }\r\n      AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n          var loader;\r\n          var registry;\r\n          var pluginObj;\r\n          var localModule;\r\n          var pluginManager;\r\n          var filename;\r\n          var result;\r\n          pluginManager = context.pluginManager;\r\n          if (fileInfo) {\r\n              if (typeof fileInfo === 'string') {\r\n                  filename = fileInfo;\r\n              }\r\n              else {\r\n                  filename = fileInfo.filename;\r\n              }\r\n          }\r\n          var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n          if (filename) {\r\n              pluginObj = pluginManager.get(filename);\r\n              if (pluginObj) {\r\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                  if (result) {\r\n                      return result;\r\n                  }\r\n                  try {\r\n                      if (pluginObj.use) {\r\n                          pluginObj.use.call(this.context, pluginObj);\r\n                      }\r\n                  }\r\n                  catch (e) {\r\n                      e.message = e.message || 'Error during @plugin call';\r\n                      return new LessError(e, imports, filename);\r\n                  }\r\n                  return pluginObj;\r\n              }\r\n          }\r\n          localModule = {\r\n              exports: {},\r\n              pluginManager: pluginManager,\r\n              fileInfo: fileInfo\r\n          };\r\n          registry = functionRegistry.create();\r\n          var registerPlugin = function (obj) {\r\n              pluginObj = obj;\r\n          };\r\n          try {\r\n              loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n              loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n          }\r\n          catch (e) {\r\n              return new LessError(e, imports, filename);\r\n          }\r\n          if (!pluginObj) {\r\n              pluginObj = localModule.exports;\r\n          }\r\n          pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n          if (pluginObj instanceof LessError) {\r\n              return pluginObj;\r\n          }\r\n          if (pluginObj) {\r\n              pluginObj.imports = imports;\r\n              pluginObj.filename = filename;\r\n              // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n              if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                  if (result) {\r\n                      return result;\r\n                  }\r\n              }\r\n              // Run on first load\r\n              pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n              pluginObj.functions = registry.getLocalFunctions();\r\n              // Need to call setOptions again because the pluginObj might have functions\r\n              result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n              if (result) {\r\n                  return result;\r\n              }\r\n              // Run every @plugin call\r\n              try {\r\n                  if (pluginObj.use) {\r\n                      pluginObj.use.call(this.context, pluginObj);\r\n                  }\r\n              }\r\n              catch (e) {\r\n                  e.message = e.message || 'Error during @plugin call';\r\n                  return new LessError(e, imports, filename);\r\n              }\r\n          }\r\n          else {\r\n              return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n          }\r\n          return pluginObj;\r\n      };\r\n      AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n          if (options && !plugin.setOptions) {\r\n              return new LessError({\r\n                  message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n              });\r\n          }\r\n          try {\r\n              plugin.setOptions && plugin.setOptions(options);\r\n          }\r\n          catch (e) {\r\n              return new LessError(e);\r\n          }\r\n      };\r\n      AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n          if (plugin) {\r\n              // support plugins being a function\r\n              // so that the plugin can be more usable programmatically\r\n              if (typeof plugin === 'function') {\r\n                  plugin = new plugin();\r\n              }\r\n              if (plugin.minVersion) {\r\n                  if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                      return new LessError({\r\n                          message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                      });\r\n                  }\r\n              }\r\n              return plugin;\r\n          }\r\n          return null;\r\n      };\r\n      AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n          if (typeof aVersion === 'string') {\r\n              aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n              aVersion.shift();\r\n          }\r\n          for (var i = 0; i < aVersion.length; i++) {\r\n              if (aVersion[i] !== bVersion[i]) {\r\n                  return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n              }\r\n          }\r\n          return 0;\r\n      };\r\n      AbstractPluginLoader.prototype.versionToString = function (version) {\r\n          var versionString = '';\r\n          for (var i = 0; i < version.length; i++) {\r\n              versionString += (versionString ? '.' : '') + version[i];\r\n          }\r\n          return versionString;\r\n      };\r\n      AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n          for (var i = 0; i < plugins.length; i++) {\r\n              var plugin = plugins[i];\r\n              if (plugin.printUsage) {\r\n                  plugin.printUsage();\r\n              }\r\n          }\r\n      };\r\n      return AbstractPluginLoader;\r\n  }());\n\n  var _visitArgs = { visitDeeper: true };\r\n  var _hasIndexed = false;\r\n  function _noop(node) {\r\n      return node;\r\n  }\r\n  function indexNodeTypes(parent, ticker) {\r\n      // add .typeIndex to tree node types for lookup table\r\n      var key;\r\n      var child;\r\n      for (key in parent) {\r\n          /* eslint guard-for-in: 0 */\r\n          child = parent[key];\r\n          switch (typeof child) {\r\n              case 'function':\r\n                  // ignore bound functions directly on tree which do not have a prototype\r\n                  // or aren't nodes\r\n                  if (child.prototype && child.prototype.type) {\r\n                      child.prototype.typeIndex = ticker++;\r\n                  }\r\n                  break;\r\n              case 'object':\r\n                  ticker = indexNodeTypes(child, ticker);\r\n                  break;\r\n          }\r\n      }\r\n      return ticker;\r\n  }\r\n  var Visitor = /** @class */ (function () {\r\n      function Visitor(implementation) {\r\n          this._implementation = implementation;\r\n          this._visitInCache = {};\r\n          this._visitOutCache = {};\r\n          if (!_hasIndexed) {\r\n              indexNodeTypes(tree, 1);\r\n              _hasIndexed = true;\r\n          }\r\n      }\r\n      Visitor.prototype.visit = function (node) {\r\n          if (!node) {\r\n              return node;\r\n          }\r\n          var nodeTypeIndex = node.typeIndex;\r\n          if (!nodeTypeIndex) {\r\n              // MixinCall args aren't a node type?\r\n              if (node.value && node.value.typeIndex) {\r\n                  this.visit(node.value);\r\n              }\r\n              return node;\r\n          }\r\n          var impl = this._implementation;\r\n          var func = this._visitInCache[nodeTypeIndex];\r\n          var funcOut = this._visitOutCache[nodeTypeIndex];\r\n          var visitArgs = _visitArgs;\r\n          var fnName;\r\n          visitArgs.visitDeeper = true;\r\n          if (!func) {\r\n              fnName = \"visit\" + node.type;\r\n              func = impl[fnName] || _noop;\r\n              funcOut = impl[fnName + \"Out\"] || _noop;\r\n              this._visitInCache[nodeTypeIndex] = func;\r\n              this._visitOutCache[nodeTypeIndex] = funcOut;\r\n          }\r\n          if (func !== _noop) {\r\n              var newNode = func.call(impl, node, visitArgs);\r\n              if (node && impl.isReplacing) {\r\n                  node = newNode;\r\n              }\r\n          }\r\n          if (visitArgs.visitDeeper && node) {\r\n              if (node.length) {\r\n                  for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                      if (node[i].accept) {\r\n                          node[i].accept(this);\r\n                      }\r\n                  }\r\n              }\r\n              else if (node.accept) {\r\n                  node.accept(this);\r\n              }\r\n          }\r\n          if (funcOut != _noop) {\r\n              funcOut.call(impl, node);\r\n          }\r\n          return node;\r\n      };\r\n      Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n          if (!nodes) {\r\n              return nodes;\r\n          }\r\n          var cnt = nodes.length;\r\n          var i;\r\n          // Non-replacing\r\n          if (nonReplacing || !this._implementation.isReplacing) {\r\n              for (i = 0; i < cnt; i++) {\r\n                  this.visit(nodes[i]);\r\n              }\r\n              return nodes;\r\n          }\r\n          // Replacing\r\n          var out = [];\r\n          for (i = 0; i < cnt; i++) {\r\n              var evald = this.visit(nodes[i]);\r\n              if (evald === undefined) {\r\n                  continue;\r\n              }\r\n              if (!evald.splice) {\r\n                  out.push(evald);\r\n              }\r\n              else if (evald.length) {\r\n                  this.flatten(evald, out);\r\n              }\r\n          }\r\n          return out;\r\n      };\r\n      Visitor.prototype.flatten = function (arr, out) {\r\n          if (!out) {\r\n              out = [];\r\n          }\r\n          var cnt;\r\n          var i;\r\n          var item;\r\n          var nestedCnt;\r\n          var j;\r\n          var nestedItem;\r\n          for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n              item = arr[i];\r\n              if (item === undefined) {\r\n                  continue;\r\n              }\r\n              if (!item.splice) {\r\n                  out.push(item);\r\n                  continue;\r\n              }\r\n              for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                  nestedItem = item[j];\r\n                  if (nestedItem === undefined) {\r\n                      continue;\r\n                  }\r\n                  if (!nestedItem.splice) {\r\n                      out.push(nestedItem);\r\n                  }\r\n                  else if (nestedItem.length) {\r\n                      this.flatten(nestedItem, out);\r\n                  }\r\n              }\r\n          }\r\n          return out;\r\n      };\r\n      return Visitor;\r\n  }());\n\n  var ImportSequencer = /** @class */ (function () {\r\n      function ImportSequencer(onSequencerEmpty) {\r\n          this.imports = [];\r\n          this.variableImports = [];\r\n          this._onSequencerEmpty = onSequencerEmpty;\r\n          this._currentDepth = 0;\r\n      }\r\n      ImportSequencer.prototype.addImport = function (callback) {\r\n          var importSequencer = this;\r\n          var importItem = {\r\n              callback: callback,\r\n              args: null,\r\n              isReady: false\r\n          };\r\n          this.imports.push(importItem);\r\n          return function () {\r\n              var args = [];\r\n              for (var _i = 0; _i < arguments.length; _i++) {\r\n                  args[_i] = arguments[_i];\r\n              }\r\n              importItem.args = Array.prototype.slice.call(args, 0);\r\n              importItem.isReady = true;\r\n              importSequencer.tryRun();\r\n          };\r\n      };\r\n      ImportSequencer.prototype.addVariableImport = function (callback) {\r\n          this.variableImports.push(callback);\r\n      };\r\n      ImportSequencer.prototype.tryRun = function () {\r\n          this._currentDepth++;\r\n          try {\r\n              while (true) {\r\n                  while (this.imports.length > 0) {\r\n                      var importItem = this.imports[0];\r\n                      if (!importItem.isReady) {\r\n                          return;\r\n                      }\r\n                      this.imports = this.imports.slice(1);\r\n                      importItem.callback.apply(null, importItem.args);\r\n                  }\r\n                  if (this.variableImports.length === 0) {\r\n                      break;\r\n                  }\r\n                  var variableImport = this.variableImports[0];\r\n                  this.variableImports = this.variableImports.slice(1);\r\n                  variableImport();\r\n              }\r\n          }\r\n          finally {\r\n              this._currentDepth--;\r\n          }\r\n          if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n              this._onSequencerEmpty();\r\n          }\r\n      };\r\n      return ImportSequencer;\r\n  }());\n\n  var ImportVisitor = function (importer, finish) {\r\n      this._visitor = new Visitor(this);\r\n      this._importer = importer;\r\n      this._finish = finish;\r\n      this.context = new contexts.Eval();\r\n      this.importCount = 0;\r\n      this.onceFileDetectionMap = {};\r\n      this.recursionDetector = {};\r\n      this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n  };\r\n  ImportVisitor.prototype = {\r\n      isReplacing: false,\r\n      run: function (root) {\r\n          try {\r\n              // process the contents\r\n              this._visitor.visit(root);\r\n          }\r\n          catch (e) {\r\n              this.error = e;\r\n          }\r\n          this.isFinished = true;\r\n          this._sequencer.tryRun();\r\n      },\r\n      _onSequencerEmpty: function () {\r\n          if (!this.isFinished) {\r\n              return;\r\n          }\r\n          this._finish(this.error);\r\n      },\r\n      visitImport: function (importNode, visitArgs) {\r\n          var inlineCSS = importNode.options.inline;\r\n          if (!importNode.css || inlineCSS) {\r\n              var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n              var importParent = context.frames[0];\r\n              this.importCount++;\r\n              if (importNode.isVariableImport()) {\r\n                  this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n              }\r\n              else {\r\n                  this.processImportNode(importNode, context, importParent);\r\n              }\r\n          }\r\n          visitArgs.visitDeeper = false;\r\n      },\r\n      processImportNode: function (importNode, context, importParent) {\r\n          var evaldImportNode;\r\n          var inlineCSS = importNode.options.inline;\r\n          try {\r\n              evaldImportNode = importNode.evalForImport(context);\r\n          }\r\n          catch (e) {\r\n              if (!e.filename) {\r\n                  e.index = importNode.getIndex();\r\n                  e.filename = importNode.fileInfo().filename;\r\n              }\r\n              // attempt to eval properly and treat as css\r\n              importNode.css = true;\r\n              // if that fails, this error will be thrown\r\n              importNode.error = e;\r\n          }\r\n          if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n              if (evaldImportNode.options.multiple) {\r\n                  context.importMultiple = true;\r\n              }\r\n              // try appending if we haven't determined if it is css or not\r\n              var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n              for (var i = 0; i < importParent.rules.length; i++) {\r\n                  if (importParent.rules[i] === importNode) {\r\n                      importParent.rules[i] = evaldImportNode;\r\n                      break;\r\n                  }\r\n              }\r\n              var onImported = this.onImported.bind(this, evaldImportNode, context);\r\n              var sequencedOnImported = this._sequencer.addImport(onImported);\r\n              this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n          }\r\n          else {\r\n              this.importCount--;\r\n              if (this.isFinished) {\r\n                  this._sequencer.tryRun();\r\n              }\r\n          }\r\n      },\r\n      onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n          if (e) {\r\n              if (!e.filename) {\r\n                  e.index = importNode.getIndex();\r\n                  e.filename = importNode.fileInfo().filename;\r\n              }\r\n              this.error = e;\r\n          }\r\n          var importVisitor = this;\r\n          var inlineCSS = importNode.options.inline;\r\n          var isPlugin = importNode.options.isPlugin;\r\n          var isOptional = importNode.options.optional;\r\n          var duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n          if (!context.importMultiple) {\r\n              if (duplicateImport) {\r\n                  importNode.skip = true;\r\n              }\r\n              else {\r\n                  importNode.skip = function () {\r\n                      if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                          return true;\r\n                      }\r\n                      importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                      return false;\r\n                  };\r\n              }\r\n          }\r\n          if (!fullPath && isOptional) {\r\n              importNode.skip = true;\r\n          }\r\n          if (root) {\r\n              importNode.root = root;\r\n              importNode.importedFilename = fullPath;\r\n              if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                  importVisitor.recursionDetector[fullPath] = true;\r\n                  var oldContext = this.context;\r\n                  this.context = context;\r\n                  try {\r\n                      this._visitor.visit(root);\r\n                  }\r\n                  catch (e) {\r\n                      this.error = e;\r\n                  }\r\n                  this.context = oldContext;\r\n              }\r\n          }\r\n          importVisitor.importCount--;\r\n          if (importVisitor.isFinished) {\r\n              importVisitor._sequencer.tryRun();\r\n          }\r\n      },\r\n      visitDeclaration: function (declNode, visitArgs) {\r\n          if (declNode.value.type === 'DetachedRuleset') {\r\n              this.context.frames.unshift(declNode);\r\n          }\r\n          else {\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n      },\r\n      visitDeclarationOut: function (declNode) {\r\n          if (declNode.value.type === 'DetachedRuleset') {\r\n              this.context.frames.shift();\r\n          }\r\n      },\r\n      visitAtRule: function (atRuleNode, visitArgs) {\r\n          this.context.frames.unshift(atRuleNode);\r\n      },\r\n      visitAtRuleOut: function (atRuleNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n          this.context.frames.unshift(mixinDefinitionNode);\r\n      },\r\n      visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitRuleset: function (rulesetNode, visitArgs) {\r\n          this.context.frames.unshift(rulesetNode);\r\n      },\r\n      visitRulesetOut: function (rulesetNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitMedia: function (mediaNode, visitArgs) {\r\n          this.context.frames.unshift(mediaNode.rules[0]);\r\n      },\r\n      visitMediaOut: function (mediaNode) {\r\n          this.context.frames.shift();\r\n      }\r\n  };\n\n  var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n      function SetTreeVisibilityVisitor(visible) {\r\n          this.visible = visible;\r\n      }\r\n      SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n          this.visit(root);\r\n      };\r\n      SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n          if (!nodes) {\r\n              return nodes;\r\n          }\r\n          var cnt = nodes.length;\r\n          var i;\r\n          for (i = 0; i < cnt; i++) {\r\n              this.visit(nodes[i]);\r\n          }\r\n          return nodes;\r\n      };\r\n      SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n          if (!node) {\r\n              return node;\r\n          }\r\n          if (node.constructor === Array) {\r\n              return this.visitArray(node);\r\n          }\r\n          if (!node.blocksVisibility || node.blocksVisibility()) {\r\n              return node;\r\n          }\r\n          if (this.visible) {\r\n              node.ensureVisibility();\r\n          }\r\n          else {\r\n              node.ensureInvisibility();\r\n          }\r\n          node.accept(this);\r\n          return node;\r\n      };\r\n      return SetTreeVisibilityVisitor;\r\n  }());\n\n  /* jshint loopfunc:true */\r\n  var ExtendFinderVisitor = /** @class */ (function () {\r\n      function ExtendFinderVisitor() {\r\n          this._visitor = new Visitor(this);\r\n          this.contexts = [];\r\n          this.allExtendsStack = [[]];\r\n      }\r\n      ExtendFinderVisitor.prototype.run = function (root) {\r\n          root = this._visitor.visit(root);\r\n          root.allExtends = this.allExtendsStack[0];\r\n          return root;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          if (rulesetNode.root) {\r\n              return;\r\n          }\r\n          var i;\r\n          var j;\r\n          var extend;\r\n          var allSelectorsExtendList = [];\r\n          var extendList;\r\n          // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n          var rules = rulesetNode.rules;\r\n          var ruleCnt = rules ? rules.length : 0;\r\n          for (i = 0; i < ruleCnt; i++) {\r\n              if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                  allSelectorsExtendList.push(rules[i]);\r\n                  rulesetNode.extendOnEveryPath = true;\r\n              }\r\n          }\r\n          // now find every selector and apply the extends that apply to all extends\r\n          // and the ones which apply to an individual extend\r\n          var paths = rulesetNode.paths;\r\n          for (i = 0; i < paths.length; i++) {\r\n              var selectorPath = paths[i];\r\n              var selector = selectorPath[selectorPath.length - 1];\r\n              var selExtendList = selector.extendList;\r\n              extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                  : allSelectorsExtendList;\r\n              if (extendList) {\r\n                  extendList = extendList.map(function (allSelectorsExtend) { return allSelectorsExtend.clone(); });\r\n              }\r\n              for (j = 0; j < extendList.length; j++) {\r\n                  this.foundExtends = true;\r\n                  extend = extendList[j];\r\n                  extend.findSelfSelectors(selectorPath);\r\n                  extend.ruleset = rulesetNode;\r\n                  if (j === 0) {\r\n                      extend.firstExtendOnThisSelectorPath = true;\r\n                  }\r\n                  this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n              }\r\n          }\r\n          this.contexts.push(rulesetNode.selectors);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n          if (!rulesetNode.root) {\r\n              this.contexts.length = this.contexts.length - 1;\r\n          }\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          mediaNode.allExtends = [];\r\n          this.allExtendsStack.push(mediaNode.allExtends);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          atRuleNode.allExtends = [];\r\n          this.allExtendsStack.push(atRuleNode.allExtends);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n      };\r\n      return ExtendFinderVisitor;\r\n  }());\r\n  var ProcessExtendsVisitor = /** @class */ (function () {\r\n      function ProcessExtendsVisitor() {\r\n          this._visitor = new Visitor(this);\r\n      }\r\n      ProcessExtendsVisitor.prototype.run = function (root) {\r\n          var extendFinder = new ExtendFinderVisitor();\r\n          this.extendIndices = {};\r\n          extendFinder.run(root);\r\n          if (!extendFinder.foundExtends) {\r\n              return root;\r\n          }\r\n          root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n          this.allExtendsStack = [root.allExtends];\r\n          var newRoot = this._visitor.visit(root);\r\n          this.checkExtendsForNonMatched(root.allExtends);\r\n          return newRoot;\r\n      };\r\n      ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n          var indices = this.extendIndices;\r\n          extendList.filter(function (extend) { return !extend.hasFoundMatches && extend.parent_ids.length == 1; }).forEach(function (extend) {\r\n              var selector = '_unknown_';\r\n              try {\r\n                  selector = extend.selector.toCSS({});\r\n              }\r\n              catch (_) { }\r\n              if (!indices[extend.index + \" \" + selector]) {\r\n                  indices[extend.index + \" \" + selector] = true;\r\n                  logger.warn(\"extend '\" + selector + \"' has no matches\");\r\n              }\r\n          });\r\n      };\r\n      ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n          //\r\n          // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n          // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n          // this means this new extend can then go and alter other extends\r\n          //\r\n          // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n          // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n          // processed if we look at each selector at a time, as is done in visitRuleset\r\n          var extendIndex;\r\n          var targetExtendIndex;\r\n          var matches;\r\n          var extendsToAdd = [];\r\n          var newSelector;\r\n          var extendVisitor = this;\r\n          var selectorPath;\r\n          var extend;\r\n          var targetExtend;\r\n          var newExtend;\r\n          iterationCount = iterationCount || 0;\r\n          // loop through comparing every extend with every target extend.\r\n          // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n          // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n          // and the second is the target.\r\n          // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n          // case when processing media queries\r\n          for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n              for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                  extend = extendsList[extendIndex];\r\n                  targetExtend = extendsListTarget[targetExtendIndex];\r\n                  // look for circular references\r\n                  if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                      continue;\r\n                  }\r\n                  // find a match in the target extends self selector (the bit before :extend)\r\n                  selectorPath = [targetExtend.selfSelectors[0]];\r\n                  matches = extendVisitor.findMatch(extend, selectorPath);\r\n                  if (matches.length) {\r\n                      extend.hasFoundMatches = true;\r\n                      // we found a match, so for each self selector..\r\n                      extend.selfSelectors.forEach(function (selfSelector) {\r\n                          var info = targetExtend.visibilityInfo();\r\n                          // process the extend as usual\r\n                          newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                          // but now we create a new extend from it\r\n                          newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                          newExtend.selfSelectors = newSelector;\r\n                          // add the extend onto the list of extends for that selector\r\n                          newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                          // record that we need to add it.\r\n                          extendsToAdd.push(newExtend);\r\n                          newExtend.ruleset = targetExtend.ruleset;\r\n                          // remember its parents for circular references\r\n                          newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                          // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                          // extends will look at the same selector path, so when extending\r\n                          // we know that any others will be duplicates in terms of what is added to the css\r\n                          if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                              newExtend.firstExtendOnThisSelectorPath = true;\r\n                              targetExtend.ruleset.paths.push(newSelector);\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n          if (extendsToAdd.length) {\r\n              // try to detect circular references to stop a stack overflow.\r\n              // may no longer be needed.\r\n              this.extendChainCount++;\r\n              if (iterationCount > 100) {\r\n                  var selectorOne = '{unable to calculate}';\r\n                  var selectorTwo = '{unable to calculate}';\r\n                  try {\r\n                      selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                      selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                  }\r\n                  catch (e) { }\r\n                  throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n              }\r\n              // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n              // d extending e...\r\n              return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n          }\r\n          else {\r\n              return extendsToAdd;\r\n          }\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          if (rulesetNode.root) {\r\n              return;\r\n          }\r\n          var matches;\r\n          var pathIndex;\r\n          var extendIndex;\r\n          var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n          var selectorsToAdd = [];\r\n          var extendVisitor = this;\r\n          var selectorPath;\r\n          // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n          for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n              for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                  selectorPath = rulesetNode.paths[pathIndex];\r\n                  // extending extends happens initially, before the main pass\r\n                  if (rulesetNode.extendOnEveryPath) {\r\n                      continue;\r\n                  }\r\n                  var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                  if (extendList && extendList.length) {\r\n                      continue;\r\n                  }\r\n                  matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                  if (matches.length) {\r\n                      allExtends[extendIndex].hasFoundMatches = true;\r\n                      allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                          var extendedSelectors;\r\n                          extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                          selectorsToAdd.push(extendedSelectors);\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n          rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n      };\r\n      ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n          //\r\n          // look through the haystack selector path to try and find the needle - extend.selector\r\n          // returns an array of selector matches that can then be replaced\r\n          //\r\n          var haystackSelectorIndex;\r\n          var hackstackSelector;\r\n          var hackstackElementIndex;\r\n          var haystackElement;\r\n          var targetCombinator;\r\n          var i;\r\n          var extendVisitor = this;\r\n          var needleElements = extend.selector.elements;\r\n          var potentialMatches = [];\r\n          var potentialMatch;\r\n          var matches = [];\r\n          // loop through the haystack elements\r\n          for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n              hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n              for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                  haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                  // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                  if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                      potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                          initialCombinator: haystackElement.combinator });\r\n                  }\r\n                  for (i = 0; i < potentialMatches.length; i++) {\r\n                      potentialMatch = potentialMatches[i];\r\n                      // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                      // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                      // work out what the resulting combinator will be\r\n                      targetCombinator = haystackElement.combinator.value;\r\n                      if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                          targetCombinator = ' ';\r\n                      }\r\n                      // if we don't match, null our match to indicate failure\r\n                      if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                          (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                          potentialMatch = null;\r\n                      }\r\n                      else {\r\n                          potentialMatch.matched++;\r\n                      }\r\n                      // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                      if (potentialMatch) {\r\n                          potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                          if (potentialMatch.finished &&\r\n                              (!extend.allowAfter &&\r\n                                  (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                              potentialMatch = null;\r\n                          }\r\n                      }\r\n                      // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                      if (potentialMatch) {\r\n                          if (potentialMatch.finished) {\r\n                              potentialMatch.length = needleElements.length;\r\n                              potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                              potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                              potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                              matches.push(potentialMatch);\r\n                          }\r\n                      }\r\n                      else {\r\n                          potentialMatches.splice(i, 1);\r\n                          i--;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return matches;\r\n      };\r\n      ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n          if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n              return elementValue1 === elementValue2;\r\n          }\r\n          if (elementValue1 instanceof tree.Attribute) {\r\n              if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                  return false;\r\n              }\r\n              if (!elementValue1.value || !elementValue2.value) {\r\n                  if (elementValue1.value || elementValue2.value) {\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              }\r\n              elementValue1 = elementValue1.value.value || elementValue1.value;\r\n              elementValue2 = elementValue2.value.value || elementValue2.value;\r\n              return elementValue1 === elementValue2;\r\n          }\r\n          elementValue1 = elementValue1.value;\r\n          elementValue2 = elementValue2.value;\r\n          if (elementValue1 instanceof tree.Selector) {\r\n              if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                  return false;\r\n              }\r\n              for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                  if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                      if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                          return false;\r\n                      }\r\n                  }\r\n                  if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                      return false;\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n          // for a set of matches, replace each match with the replacement selector\r\n          var currentSelectorPathIndex = 0;\r\n          var currentSelectorPathElementIndex = 0;\r\n          var path = [];\r\n          var matchIndex;\r\n          var selector;\r\n          var firstElement;\r\n          var match;\r\n          var newElements;\r\n          for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n              match = matches[matchIndex];\r\n              selector = selectorPath[match.pathIndex];\r\n              firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n              if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                  path[path.length - 1].elements = path[path.length - 1]\r\n                      .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                  currentSelectorPathElementIndex = 0;\r\n                  currentSelectorPathIndex++;\r\n              }\r\n              newElements = selector.elements\r\n                  .slice(currentSelectorPathElementIndex, match.index)\r\n                  .concat([firstElement])\r\n                  .concat(replacementSelector.elements.slice(1));\r\n              if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                  path[path.length - 1].elements =\r\n                      path[path.length - 1].elements.concat(newElements);\r\n              }\r\n              else {\r\n                  path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                  path.push(new tree.Selector(newElements));\r\n              }\r\n              currentSelectorPathIndex = match.endPathIndex;\r\n              currentSelectorPathElementIndex = match.endPathElementIndex;\r\n              if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                  currentSelectorPathElementIndex = 0;\r\n                  currentSelectorPathIndex++;\r\n              }\r\n          }\r\n          if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n              path[path.length - 1].elements = path[path.length - 1]\r\n                  .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n              currentSelectorPathIndex++;\r\n          }\r\n          path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n          path = path.map(function (currentValue) {\r\n              // we can re-use elements here, because the visibility property matters only for selectors\r\n              var derived = currentValue.createDerived(currentValue.elements);\r\n              if (isVisible) {\r\n                  derived.ensureVisibility();\r\n              }\r\n              else {\r\n                  derived.ensureInvisibility();\r\n              }\r\n              return derived;\r\n          });\r\n          return path;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n          this.allExtendsStack.push(newAllExtends);\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n          var lastIndex = this.allExtendsStack.length - 1;\r\n          this.allExtendsStack.length = lastIndex;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n          this.allExtendsStack.push(newAllExtends);\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n          var lastIndex = this.allExtendsStack.length - 1;\r\n          this.allExtendsStack.length = lastIndex;\r\n      };\r\n      return ProcessExtendsVisitor;\r\n  }());\n\n  var JoinSelectorVisitor = /** @class */ (function () {\r\n      function JoinSelectorVisitor() {\r\n          this.contexts = [[]];\r\n          this._visitor = new Visitor(this);\r\n      }\r\n      JoinSelectorVisitor.prototype.run = function (root) {\r\n          return this._visitor.visit(root);\r\n      };\r\n      JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          var paths = [];\r\n          var selectors;\r\n          this.contexts.push(paths);\r\n          if (!rulesetNode.root) {\r\n              selectors = rulesetNode.selectors;\r\n              if (selectors) {\r\n                  selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                  rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                  if (selectors) {\r\n                      rulesetNode.joinSelectors(paths, context, selectors);\r\n                  }\r\n              }\r\n              if (!selectors) {\r\n                  rulesetNode.rules = null;\r\n              }\r\n              rulesetNode.paths = paths;\r\n          }\r\n      };\r\n      JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n          this.contexts.length = this.contexts.length - 1;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n      };\r\n      JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          if (atRuleNode.rules && atRuleNode.rules.length) {\r\n              atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n          }\r\n      };\r\n      return JoinSelectorVisitor;\r\n  }());\n\n  var CSSVisitorUtils = /** @class */ (function () {\r\n      function CSSVisitorUtils(context) {\r\n          this._visitor = new Visitor(this);\r\n          this._context = context;\r\n      }\r\n      CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n          var rule;\r\n          if (!bodyRules) {\r\n              return false;\r\n          }\r\n          for (var r = 0; r < bodyRules.length; r++) {\r\n              rule = bodyRules[r];\r\n              if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                  // the atrule contains something that was referenced (likely by extend)\r\n                  // therefore it needs to be shown in output too\r\n                  return true;\r\n              }\r\n          }\r\n          return false;\r\n      };\r\n      CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n          if (owner && owner.rules) {\r\n              owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n          }\r\n      };\r\n      CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n          return (owner && owner.rules)\r\n              ? (owner.rules.length === 0) : true;\r\n      };\r\n      CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n          return (rulesetNode && rulesetNode.paths)\r\n              ? (rulesetNode.paths.length > 0) : false;\r\n      };\r\n      CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n          if (!node.blocksVisibility()) {\r\n              if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                  return;\r\n              }\r\n              return node;\r\n          }\r\n          var compiledRulesBody = node.rules[0];\r\n          this.keepOnlyVisibleChilds(compiledRulesBody);\r\n          if (this.isEmpty(compiledRulesBody)) {\r\n              return;\r\n          }\r\n          node.ensureVisibility();\r\n          node.removeVisibilityBlock();\r\n          return node;\r\n      };\r\n      CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n          if (rulesetNode.firstRoot) {\r\n              return true;\r\n          }\r\n          if (this.isEmpty(rulesetNode)) {\r\n              return false;\r\n          }\r\n          if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n              return false;\r\n          }\r\n          return true;\r\n      };\r\n      return CSSVisitorUtils;\r\n  }());\r\n  var ToCSSVisitor = function (context) {\r\n      this._visitor = new Visitor(this);\r\n      this._context = context;\r\n      this.utils = new CSSVisitorUtils(context);\r\n  };\r\n  ToCSSVisitor.prototype = {\r\n      isReplacing: true,\r\n      run: function (root) {\r\n          return this._visitor.visit(root);\r\n      },\r\n      visitDeclaration: function (declNode, visitArgs) {\r\n          if (declNode.blocksVisibility() || declNode.variable) {\r\n              return;\r\n          }\r\n          return declNode;\r\n      },\r\n      visitMixinDefinition: function (mixinNode, visitArgs) {\r\n          // mixin definitions do not get eval'd - this means they keep state\r\n          // so we have to clear that state here so it isn't used if toCSS is called twice\r\n          mixinNode.frames = [];\r\n      },\r\n      visitExtend: function (extendNode, visitArgs) {\r\n      },\r\n      visitComment: function (commentNode, visitArgs) {\r\n          if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n              return;\r\n          }\r\n          return commentNode;\r\n      },\r\n      visitMedia: function (mediaNode, visitArgs) {\r\n          var originalRules = mediaNode.rules[0].rules;\r\n          mediaNode.accept(this._visitor);\r\n          visitArgs.visitDeeper = false;\r\n          return this.utils.resolveVisibility(mediaNode, originalRules);\r\n      },\r\n      visitImport: function (importNode, visitArgs) {\r\n          if (importNode.blocksVisibility()) {\r\n              return;\r\n          }\r\n          return importNode;\r\n      },\r\n      visitAtRule: function (atRuleNode, visitArgs) {\r\n          if (atRuleNode.rules && atRuleNode.rules.length) {\r\n              return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n          }\r\n          else {\r\n              return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n          }\r\n      },\r\n      visitAnonymous: function (anonymousNode, visitArgs) {\r\n          if (!anonymousNode.blocksVisibility()) {\r\n              anonymousNode.accept(this._visitor);\r\n              return anonymousNode;\r\n          }\r\n      },\r\n      visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n          // if there is only one nested ruleset and that one has no path, then it is\r\n          // just fake ruleset\r\n          function hasFakeRuleset(atRuleNode) {\r\n              var bodyRules = atRuleNode.rules;\r\n              return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n          }\r\n          function getBodyRules(atRuleNode) {\r\n              var nodeRules = atRuleNode.rules;\r\n              if (hasFakeRuleset(atRuleNode)) {\r\n                  return nodeRules[0].rules;\r\n              }\r\n              return nodeRules;\r\n          }\r\n          // it is still true that it is only one ruleset in array\r\n          // this is last such moment\r\n          // process childs\r\n          var originalRules = getBodyRules(atRuleNode);\r\n          atRuleNode.accept(this._visitor);\r\n          visitArgs.visitDeeper = false;\r\n          if (!this.utils.isEmpty(atRuleNode)) {\r\n              this._mergeRules(atRuleNode.rules[0].rules);\r\n          }\r\n          return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n      },\r\n      visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n          if (atRuleNode.blocksVisibility()) {\r\n              return;\r\n          }\r\n          if (atRuleNode.name === '@charset') {\r\n              // Only output the debug info together with subsequent @charset definitions\r\n              // a comment (or @media statement) before the actual @charset atrule would\r\n              // be considered illegal css as it has to be on the first line\r\n              if (this.charset) {\r\n                  if (atRuleNode.debugInfo) {\r\n                      var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                      comment.debugInfo = atRuleNode.debugInfo;\r\n                      return this._visitor.visit(comment);\r\n                  }\r\n                  return;\r\n              }\r\n              this.charset = true;\r\n          }\r\n          return atRuleNode;\r\n      },\r\n      checkValidNodes: function (rules, isRoot) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          for (var i = 0; i < rules.length; i++) {\r\n              var ruleNode = rules[i];\r\n              if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                  throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                      index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n              if (ruleNode instanceof tree.Call) {\r\n                  throw { message: \"Function '\" + ruleNode.name + \"' is undefined\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n              if (ruleNode.type && !ruleNode.allowRoot) {\r\n                  throw { message: ruleNode.type + \" node returned by a function is not valid here\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n          }\r\n      },\r\n      visitRuleset: function (rulesetNode, visitArgs) {\r\n          // at this point rulesets are nested into each other\r\n          var rule;\r\n          var rulesets = [];\r\n          this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n          if (!rulesetNode.root) {\r\n              // remove invisible paths\r\n              this._compileRulesetPaths(rulesetNode);\r\n              // remove rulesets from this ruleset body and compile them separately\r\n              var nodeRules = rulesetNode.rules;\r\n              var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n              for (var i = 0; i < nodeRuleCnt;) {\r\n                  rule = nodeRules[i];\r\n                  if (rule && rule.rules) {\r\n                      // visit because we are moving them out from being a child\r\n                      rulesets.push(this._visitor.visit(rule));\r\n                      nodeRules.splice(i, 1);\r\n                      nodeRuleCnt--;\r\n                      continue;\r\n                  }\r\n                  i++;\r\n              }\r\n              // accept the visitor to remove rules and refactor itself\r\n              // then we can decide nogw whether we want it or not\r\n              // compile body\r\n              if (nodeRuleCnt > 0) {\r\n                  rulesetNode.accept(this._visitor);\r\n              }\r\n              else {\r\n                  rulesetNode.rules = null;\r\n              }\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n          else { // if (! rulesetNode.root) {\r\n              rulesetNode.accept(this._visitor);\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n          if (rulesetNode.rules) {\r\n              this._mergeRules(rulesetNode.rules);\r\n              this._removeDuplicateRules(rulesetNode.rules);\r\n          }\r\n          // now decide whether we keep the ruleset\r\n          if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n              rulesetNode.ensureVisibility();\r\n              rulesets.splice(0, 0, rulesetNode);\r\n          }\r\n          if (rulesets.length === 1) {\r\n              return rulesets[0];\r\n          }\r\n          return rulesets;\r\n      },\r\n      _compileRulesetPaths: function (rulesetNode) {\r\n          if (rulesetNode.paths) {\r\n              rulesetNode.paths = rulesetNode.paths\r\n                  .filter(function (p) {\r\n                  var i;\r\n                  if (p[0].elements[0].combinator.value === ' ') {\r\n                      p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                  }\r\n                  for (i = 0; i < p.length; i++) {\r\n                      if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                          return true;\r\n                      }\r\n                  }\r\n                  return false;\r\n              });\r\n          }\r\n      },\r\n      _removeDuplicateRules: function (rules) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          // remove duplicates\r\n          var ruleCache = {};\r\n          var ruleList;\r\n          var rule;\r\n          var i;\r\n          for (i = rules.length - 1; i >= 0; i--) {\r\n              rule = rules[i];\r\n              if (rule instanceof tree.Declaration) {\r\n                  if (!ruleCache[rule.name]) {\r\n                      ruleCache[rule.name] = rule;\r\n                  }\r\n                  else {\r\n                      ruleList = ruleCache[rule.name];\r\n                      if (ruleList instanceof tree.Declaration) {\r\n                          ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                      }\r\n                      var ruleCSS = rule.toCSS(this._context);\r\n                      if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                          rules.splice(i, 1);\r\n                      }\r\n                      else {\r\n                          ruleList.push(ruleCSS);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      },\r\n      _mergeRules: function (rules) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          var groups = {};\r\n          var groupsArr = [];\r\n          for (var i = 0; i < rules.length; i++) {\r\n              var rule = rules[i];\r\n              if (rule.merge) {\r\n                  var key = rule.name;\r\n                  groups[key] ? rules.splice(i--, 1) :\r\n                      groupsArr.push(groups[key] = []);\r\n                  groups[key].push(rule);\r\n              }\r\n          }\r\n          groupsArr.forEach(function (group) {\r\n              if (group.length > 0) {\r\n                  var result_1 = group[0];\r\n                  var space_1 = [];\r\n                  var comma_1 = [new tree.Expression(space_1)];\r\n                  group.forEach(function (rule) {\r\n                      if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                          comma_1.push(new tree.Expression(space_1 = []));\r\n                      }\r\n                      space_1.push(rule.value);\r\n                      result_1.important = result_1.important || rule.important;\r\n                  });\r\n                  result_1.value = new tree.Value(comma_1);\r\n              }\r\n          });\r\n      }\r\n  };\n\n  var visitors = {\r\n      Visitor: Visitor,\r\n      ImportVisitor: ImportVisitor,\r\n      MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n      ExtendVisitor: ProcessExtendsVisitor,\r\n      JoinSelectorVisitor: JoinSelectorVisitor,\r\n      ToCSSVisitor: ToCSSVisitor\r\n  };\n\n  // Split the input into chunks.\r\n  var chunker = (function (input, fail) {\r\n      var len = input.length;\r\n      var level = 0;\r\n      var parenLevel = 0;\r\n      var lastOpening;\r\n      var lastOpeningParen;\r\n      var lastMultiComment;\r\n      var lastMultiCommentEndBrace;\r\n      var chunks = [];\r\n      var emitFrom = 0;\r\n      var chunkerCurrentIndex;\r\n      var currentChunkStartIndex;\r\n      var cc;\r\n      var cc2;\r\n      var matched;\r\n      function emitChunk(force) {\r\n          var len = chunkerCurrentIndex - emitFrom;\r\n          if (((len < 512) && !force) || !len) {\r\n              return;\r\n          }\r\n          chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n          emitFrom = chunkerCurrentIndex + 1;\r\n      }\r\n      for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n          cc = input.charCodeAt(chunkerCurrentIndex);\r\n          if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n              // a-z or whitespace\r\n              continue;\r\n          }\r\n          switch (cc) {\r\n              case 40: // (\r\n                  parenLevel++;\r\n                  lastOpeningParen = chunkerCurrentIndex;\r\n                  continue;\r\n              case 41: // )\r\n                  if (--parenLevel < 0) {\r\n                      return fail('missing opening `(`', chunkerCurrentIndex);\r\n                  }\r\n                  continue;\r\n              case 59: // ;\r\n                  if (!parenLevel) {\r\n                      emitChunk();\r\n                  }\r\n                  continue;\r\n              case 123: // {\r\n                  level++;\r\n                  lastOpening = chunkerCurrentIndex;\r\n                  continue;\r\n              case 125: // }\r\n                  if (--level < 0) {\r\n                      return fail('missing opening `{`', chunkerCurrentIndex);\r\n                  }\r\n                  if (!level && !parenLevel) {\r\n                      emitChunk();\r\n                  }\r\n                  continue;\r\n              case 92: // \\\r\n                  if (chunkerCurrentIndex < len - 1) {\r\n                      chunkerCurrentIndex++;\r\n                      continue;\r\n                  }\r\n                  return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n              case 34:\r\n              case 39:\r\n              case 96: // \", ' and `\r\n                  matched = 0;\r\n                  currentChunkStartIndex = chunkerCurrentIndex;\r\n                  for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                      cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                      if (cc2 > 96) {\r\n                          continue;\r\n                      }\r\n                      if (cc2 == cc) {\r\n                          matched = 1;\r\n                          break;\r\n                      }\r\n                      if (cc2 == 92) { // \\\r\n                          if (chunkerCurrentIndex == len - 1) {\r\n                              return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                          }\r\n                          chunkerCurrentIndex++;\r\n                      }\r\n                  }\r\n                  if (matched) {\r\n                      continue;\r\n                  }\r\n                  return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n              case 47: // /, check for comment\r\n                  if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                      continue;\r\n                  }\r\n                  cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                  if (cc2 == 47) {\r\n                      // //, find lnfeed\r\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                          if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  }\r\n                  else if (cc2 == 42) {\r\n                      // /*, find */\r\n                      lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                          if (cc2 == 125) {\r\n                              lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                          }\r\n                          if (cc2 != 42) {\r\n                              continue;\r\n                          }\r\n                          if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                              break;\r\n                          }\r\n                      }\r\n                      if (chunkerCurrentIndex == len - 1) {\r\n                          return fail('missing closing `*/`', currentChunkStartIndex);\r\n                      }\r\n                      chunkerCurrentIndex++;\r\n                  }\r\n                  continue;\r\n              case 42: // *, check for unmatched */\r\n                  if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                      return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                  }\r\n                  continue;\r\n          }\r\n      }\r\n      if (level !== 0) {\r\n          if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n              return fail('missing closing `}` or `*/`', lastOpening);\r\n          }\r\n          else {\r\n              return fail('missing closing `}`', lastOpening);\r\n          }\r\n      }\r\n      else if (parenLevel !== 0) {\r\n          return fail('missing closing `)`', lastOpeningParen);\r\n      }\r\n      emitChunk(true);\r\n      return chunks;\r\n  });\n\n  var getParserInput = (function () {\r\n      var // Less input string\r\n      input;\r\n      var // current chunk\r\n      j;\r\n      var // holds state for backtracking\r\n      saveStack = [];\r\n      var // furthest index the parser has gone to\r\n      furthest;\r\n      var // if this is furthest we got to, this is the probably cause\r\n      furthestPossibleErrorMessage;\r\n      var // chunkified input\r\n      chunks;\r\n      var // current chunk\r\n      current;\r\n      var // index of current chunk, in `input`\r\n      currentPos;\r\n      var parserInput = {};\r\n      var CHARCODE_SPACE = 32;\r\n      var CHARCODE_TAB = 9;\r\n      var CHARCODE_LF = 10;\r\n      var CHARCODE_CR = 13;\r\n      var CHARCODE_PLUS = 43;\r\n      var CHARCODE_COMMA = 44;\r\n      var CHARCODE_FORWARD_SLASH = 47;\r\n      var CHARCODE_9 = 57;\r\n      function skipWhitespace(length) {\r\n          var oldi = parserInput.i;\r\n          var oldj = j;\r\n          var curr = parserInput.i - currentPos;\r\n          var endIndex = parserInput.i + current.length - curr;\r\n          var mem = (parserInput.i += length);\r\n          var inp = input;\r\n          var c;\r\n          var nextChar;\r\n          var comment;\r\n          for (; parserInput.i < endIndex; parserInput.i++) {\r\n              c = inp.charCodeAt(parserInput.i);\r\n              if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                  nextChar = inp.charAt(parserInput.i + 1);\r\n                  if (nextChar === '/') {\r\n                      comment = { index: parserInput.i, isLineComment: true };\r\n                      var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                      if (nextNewLine < 0) {\r\n                          nextNewLine = endIndex;\r\n                      }\r\n                      parserInput.i = nextNewLine;\r\n                      comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                      parserInput.commentStore.push(comment);\r\n                      continue;\r\n                  }\r\n                  else if (nextChar === '*') {\r\n                      var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                      if (nextStarSlash >= 0) {\r\n                          comment = {\r\n                              index: parserInput.i,\r\n                              text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                              isLineComment: false\r\n                          };\r\n                          parserInput.i += comment.text.length - 1;\r\n                          parserInput.commentStore.push(comment);\r\n                          continue;\r\n                      }\r\n                  }\r\n                  break;\r\n              }\r\n              if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                  break;\r\n              }\r\n          }\r\n          current = current.slice(length + parserInput.i - mem + curr);\r\n          currentPos = parserInput.i;\r\n          if (!current.length) {\r\n              if (j < chunks.length - 1) {\r\n                  current = chunks[++j];\r\n                  skipWhitespace(0); // skip space at the beginning of a chunk\r\n                  return true; // things changed\r\n              }\r\n              parserInput.finished = true;\r\n          }\r\n          return oldi !== parserInput.i || oldj !== j;\r\n      }\r\n      parserInput.save = function () {\r\n          currentPos = parserInput.i;\r\n          saveStack.push({ current: current, i: parserInput.i, j: j });\r\n      };\r\n      parserInput.restore = function (possibleErrorMessage) {\r\n          if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n              furthest = parserInput.i;\r\n              furthestPossibleErrorMessage = possibleErrorMessage;\r\n          }\r\n          var state = saveStack.pop();\r\n          current = state.current;\r\n          currentPos = parserInput.i = state.i;\r\n          j = state.j;\r\n      };\r\n      parserInput.forget = function () {\r\n          saveStack.pop();\r\n      };\r\n      parserInput.isWhitespace = function (offset) {\r\n          var pos = parserInput.i + (offset || 0);\r\n          var code = input.charCodeAt(pos);\r\n          return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n      };\r\n      // Specialization of $(tok)\r\n      parserInput.$re = function (tok) {\r\n          if (parserInput.i > currentPos) {\r\n              current = current.slice(parserInput.i - currentPos);\r\n              currentPos = parserInput.i;\r\n          }\r\n          var m = tok.exec(current);\r\n          if (!m) {\r\n              return null;\r\n          }\r\n          skipWhitespace(m[0].length);\r\n          if (typeof m === 'string') {\r\n              return m;\r\n          }\r\n          return m.length === 1 ? m[0] : m;\r\n      };\r\n      parserInput.$char = function (tok) {\r\n          if (input.charAt(parserInput.i) !== tok) {\r\n              return null;\r\n          }\r\n          skipWhitespace(1);\r\n          return tok;\r\n      };\r\n      parserInput.$str = function (tok) {\r\n          var tokLength = tok.length;\r\n          // https://jsperf.com/string-startswith/21\r\n          for (var i = 0; i < tokLength; i++) {\r\n              if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                  return null;\r\n              }\r\n          }\r\n          skipWhitespace(tokLength);\r\n          return tok;\r\n      };\r\n      parserInput.$quoted = function (loc) {\r\n          var pos = loc || parserInput.i;\r\n          var startChar = input.charAt(pos);\r\n          if (startChar !== '\\'' && startChar !== '\"') {\r\n              return;\r\n          }\r\n          var length = input.length;\r\n          var currentPosition = pos;\r\n          for (var i = 1; i + currentPosition < length; i++) {\r\n              var nextChar = input.charAt(i + currentPosition);\r\n              switch (nextChar) {\r\n                  case '\\\\':\r\n                      i++;\r\n                      continue;\r\n                  case '\\r':\r\n                  case '\\n':\r\n                      break;\r\n                  case startChar:\r\n                      var str = input.substr(currentPosition, i + 1);\r\n                      if (!loc && loc !== 0) {\r\n                          skipWhitespace(i + 1);\r\n                          return str;\r\n                      }\r\n                      return [startChar, str];\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      /**\r\n       * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n       * until matching token (outside of blocks)\r\n       */\r\n      parserInput.$parseUntil = function (tok) {\r\n          var quote = '';\r\n          var returnVal = null;\r\n          var inComment = false;\r\n          var blockDepth = 0;\r\n          var blockStack = [];\r\n          var parseGroups = [];\r\n          var length = input.length;\r\n          var startPos = parserInput.i;\r\n          var lastPos = parserInput.i;\r\n          var i = parserInput.i;\r\n          var loop = true;\r\n          var testChar;\r\n          if (typeof tok === 'string') {\r\n              testChar = function (char) { return char === tok; };\r\n          }\r\n          else {\r\n              testChar = function (char) { return tok.test(char); };\r\n          }\r\n          do {\r\n              var nextChar = input.charAt(i);\r\n              if (blockDepth === 0 && testChar(nextChar)) {\r\n                  returnVal = input.substr(lastPos, i - lastPos);\r\n                  if (returnVal) {\r\n                      parseGroups.push(returnVal);\r\n                  }\r\n                  else {\r\n                      parseGroups.push(' ');\r\n                  }\r\n                  returnVal = parseGroups;\r\n                  skipWhitespace(i - startPos);\r\n                  loop = false;\r\n              }\r\n              else {\r\n                  if (inComment) {\r\n                      if (nextChar === '*' &&\r\n                          input.charAt(i + 1) === '/') {\r\n                          i++;\r\n                          blockDepth--;\r\n                          inComment = false;\r\n                      }\r\n                      i++;\r\n                      continue;\r\n                  }\r\n                  switch (nextChar) {\r\n                      case '\\\\':\r\n                          i++;\r\n                          nextChar = input.charAt(i);\r\n                          parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                          lastPos = i + 1;\r\n                          break;\r\n                      case '/':\r\n                          if (input.charAt(i + 1) === '*') {\r\n                              i++;\r\n                              inComment = true;\r\n                              blockDepth++;\r\n                          }\r\n                          break;\r\n                      case '\\'':\r\n                      case '\"':\r\n                          quote = parserInput.$quoted(i);\r\n                          if (quote) {\r\n                              parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                              i += quote[1].length - 1;\r\n                              lastPos = i + 1;\r\n                          }\r\n                          else {\r\n                              skipWhitespace(i - startPos);\r\n                              returnVal = nextChar;\r\n                              loop = false;\r\n                          }\r\n                          break;\r\n                      case '{':\r\n                          blockStack.push('}');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '(':\r\n                          blockStack.push(')');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '[':\r\n                          blockStack.push(']');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '}':\r\n                      case ')':\r\n                      case ']':\r\n                          var expected = blockStack.pop();\r\n                          if (nextChar === expected) {\r\n                              blockDepth--;\r\n                          }\r\n                          else {\r\n                              // move the parser to the error and return expected\r\n                              skipWhitespace(i - startPos);\r\n                              returnVal = expected;\r\n                              loop = false;\r\n                          }\r\n                  }\r\n                  i++;\r\n                  if (i > length) {\r\n                      loop = false;\r\n                  }\r\n              }\r\n          } while (loop);\r\n          return returnVal ? returnVal : null;\r\n      };\r\n      parserInput.autoCommentAbsorb = true;\r\n      parserInput.commentStore = [];\r\n      parserInput.finished = false;\r\n      // Same as $(), but don't change the state of the parser,\r\n      // just return the match.\r\n      parserInput.peek = function (tok) {\r\n          if (typeof tok === 'string') {\r\n              // https://jsperf.com/string-startswith/21\r\n              for (var i = 0; i < tok.length; i++) {\r\n                  if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                      return false;\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          else {\r\n              return tok.test(current);\r\n          }\r\n      };\r\n      // Specialization of peek()\r\n      // TODO remove or change some currentChar calls to peekChar\r\n      parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n      parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n      parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n      parserInput.getInput = function () { return input; };\r\n      parserInput.peekNotNumeric = function () {\r\n          var c = input.charCodeAt(parserInput.i);\r\n          // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n          return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n      };\r\n      parserInput.start = function (str, chunkInput, failFunction) {\r\n          input = str;\r\n          parserInput.i = j = currentPos = furthest = 0;\r\n          // chunking apparently makes things quicker (but my tests indicate\r\n          // it might actually make things slower in node at least)\r\n          // and it is a non-perfect parse - it can't recognise\r\n          // unquoted urls, meaning it can't distinguish comments\r\n          // meaning comments with quotes or {}() in them get 'counted'\r\n          // and then lead to parse errors.\r\n          // In addition if the chunking chunks in the wrong place we might\r\n          // not be able to parse a parser statement in one go\r\n          // this is officially deprecated but can be switched on via an option\r\n          // in the case it causes too much performance issues.\r\n          if (chunkInput) {\r\n              chunks = chunker(str, failFunction);\r\n          }\r\n          else {\r\n              chunks = [str];\r\n          }\r\n          current = chunks[0];\r\n          skipWhitespace(0);\r\n      };\r\n      parserInput.end = function () {\r\n          var message;\r\n          var isFinished = parserInput.i >= input.length;\r\n          if (parserInput.i < furthest) {\r\n              message = furthestPossibleErrorMessage;\r\n              parserInput.i = furthest;\r\n          }\r\n          return {\r\n              isFinished: isFinished,\r\n              furthest: parserInput.i,\r\n              furthestPossibleErrorMessage: message,\r\n              furthestReachedEnd: parserInput.i >= input.length - 1,\r\n              furthestChar: input[parserInput.i]\r\n          };\r\n      };\r\n      return parserInput;\r\n  });\n\n  //\r\n  // less.js - parser\r\n  //\r\n  //    A relatively straight-forward predictive parser.\r\n  //    There is no tokenization/lexing stage, the input is parsed\r\n  //    in one sweep.\r\n  //\r\n  //    To make the parser fast enough to run in the browser, several\r\n  //    optimization had to be made:\r\n  //\r\n  //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n  //      The solution is to chunkify the input into smaller strings.\r\n  //      The chunks are stored in the `chunks` var,\r\n  //      `j` holds the current chunk index, and `currentPos` holds\r\n  //      the index of the current chunk in relation to `input`.\r\n  //      This gives us an almost 4x speed-up.\r\n  //\r\n  //    - In many cases, we don't need to match individual tokens;\r\n  //      for example, if a value doesn't hold any variables, operations\r\n  //      or dynamic references, the parser can effectively 'skip' it,\r\n  //      treating it as a literal.\r\n  //      An example would be '1px solid #000' - which evaluates to itself,\r\n  //      we don't need to know what the individual components are.\r\n  //      The drawback, of course is that you don't get the benefits of\r\n  //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n  //      and a smaller speed-up in the code-gen.\r\n  //\r\n  //\r\n  //    Token matching is done with the `$` function, which either takes\r\n  //    a terminal string or regexp, or a non-terminal function to call.\r\n  //    It also takes care of moving all the indices forwards.\r\n  //\r\n  var Parser = function Parser(context, imports, fileInfo) {\r\n      var parsers;\r\n      var parserInput = getParserInput();\r\n      function error(msg, type) {\r\n          throw new LessError({\r\n              index: parserInput.i,\r\n              filename: fileInfo.filename,\r\n              type: type || 'Syntax',\r\n              message: msg\r\n          }, imports);\r\n      }\r\n      function expect(arg, msg) {\r\n          // some older browsers return typeof 'function' for RegExp\r\n          var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n          if (result) {\r\n              return result;\r\n          }\r\n          error(msg || (typeof arg === 'string'\r\n              ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n              : 'unexpected token'));\r\n      }\r\n      // Specialization of expect()\r\n      function expectChar(arg, msg) {\r\n          if (parserInput.$char(arg)) {\r\n              return arg;\r\n          }\r\n          error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n      }\r\n      function getDebugInfo(index) {\r\n          var filename = fileInfo.filename;\r\n          return {\r\n              lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n              fileName: filename\r\n          };\r\n      }\r\n      /**\r\n       *  Used after initial parsing to create nodes on the fly\r\n       *\r\n       *  @param {String} str          - string to parse\r\n       *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n       *  @param {Number} currentIndex - start number to begin indexing\r\n       *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n       */\r\n      function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n          var result;\r\n          var returnNodes = [];\r\n          var parser = parserInput;\r\n          try {\r\n              parser.start(str, false, function fail(msg, index) {\r\n                  callback({\r\n                      message: msg,\r\n                      index: index + currentIndex\r\n                  });\r\n              });\r\n              for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                  i = parser.i;\r\n                  result = parsers[p]();\r\n                  if (result) {\r\n                      try {\r\n                          result._index = i + currentIndex;\r\n                          result._fileInfo = fileInfo;\r\n                      }\r\n                      catch (e) { }\r\n                      returnNodes.push(result);\r\n                  }\r\n                  else {\r\n                      returnNodes.push(null);\r\n                  }\r\n              }\r\n              var endInfo = parser.end();\r\n              if (endInfo.isFinished) {\r\n                  callback(null, returnNodes);\r\n              }\r\n              else {\r\n                  callback(true, null);\r\n              }\r\n          }\r\n          catch (e) {\r\n              throw new LessError({\r\n                  index: e.index + currentIndex,\r\n                  message: e.message\r\n              }, imports, fileInfo.filename);\r\n          }\r\n      }\r\n      //\r\n      // The Parser\r\n      //\r\n      return {\r\n          parserInput: parserInput,\r\n          imports: imports,\r\n          fileInfo: fileInfo,\r\n          parseNode: parseNode,\r\n          //\r\n          // Parse an input string into an abstract syntax tree,\r\n          // @param str A string containing 'less' markup\r\n          // @param callback call `callback` when done.\r\n          // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n          //\r\n          parse: function (str, callback, additionalData) {\r\n              var root;\r\n              var error = null;\r\n              var globalVars;\r\n              var modifyVars;\r\n              var ignored;\r\n              var preText = '';\r\n              globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n              modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n              if (context.pluginManager) {\r\n                  var preProcessors = context.pluginManager.getPreProcessors();\r\n                  for (var i = 0; i < preProcessors.length; i++) {\r\n                      str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                  }\r\n              }\r\n              if (globalVars || (additionalData && additionalData.banner)) {\r\n                  preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                  ignored = imports.contentsIgnoredChars;\r\n                  ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                  ignored[fileInfo.filename] += preText.length;\r\n              }\r\n              str = str.replace(/\\r\\n?/g, '\\n');\r\n              // Remove potential UTF Byte Order Mark\r\n              str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n              imports.contents[fileInfo.filename] = str;\r\n              // Start with the primary rule.\r\n              // The whole syntax tree is held under a Ruleset node,\r\n              // with the `root` property set to true, so no `{}` are\r\n              // output. The callback is called when the input is parsed.\r\n              try {\r\n                  parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                      throw new LessError({\r\n                          index: index,\r\n                          type: 'Parse',\r\n                          message: msg,\r\n                          filename: fileInfo.filename\r\n                      }, imports);\r\n                  });\r\n                  tree.Node.prototype.parse = this;\r\n                  root = new tree.Ruleset(null, this.parsers.primary());\r\n                  tree.Node.prototype.rootNode = root;\r\n                  root.root = true;\r\n                  root.firstRoot = true;\r\n                  root.functionRegistry = functionRegistry.inherit();\r\n              }\r\n              catch (e) {\r\n                  return callback(new LessError(e, imports, fileInfo.filename));\r\n              }\r\n              // If `i` is smaller than the `input.length - 1`,\r\n              // it means the parser wasn't able to parse the whole\r\n              // string, so we've got a parsing error.\r\n              //\r\n              // We try to extract a \\n delimited string,\r\n              // showing the line where the parse error occurred.\r\n              // We split it up into two parts (the part which parsed,\r\n              // and the part which didn't), so we can color them differently.\r\n              var endInfo = parserInput.end();\r\n              if (!endInfo.isFinished) {\r\n                  var message = endInfo.furthestPossibleErrorMessage;\r\n                  if (!message) {\r\n                      message = 'Unrecognised input';\r\n                      if (endInfo.furthestChar === '}') {\r\n                          message += '. Possibly missing opening \\'{\\'';\r\n                      }\r\n                      else if (endInfo.furthestChar === ')') {\r\n                          message += '. Possibly missing opening \\'(\\'';\r\n                      }\r\n                      else if (endInfo.furthestReachedEnd) {\r\n                          message += '. Possibly missing something';\r\n                      }\r\n                  }\r\n                  error = new LessError({\r\n                      type: 'Parse',\r\n                      message: message,\r\n                      index: endInfo.furthest,\r\n                      filename: fileInfo.filename\r\n                  }, imports);\r\n              }\r\n              var finish = function (e) {\r\n                  e = error || e || imports.error;\r\n                  if (e) {\r\n                      if (!(e instanceof LessError)) {\r\n                          e = new LessError(e, imports, fileInfo.filename);\r\n                      }\r\n                      return callback(e);\r\n                  }\r\n                  else {\r\n                      return callback(null, root);\r\n                  }\r\n              };\r\n              if (context.processImports !== false) {\r\n                  new visitors.ImportVisitor(imports, finish)\r\n                      .run(root);\r\n              }\r\n              else {\r\n                  return finish();\r\n              }\r\n          },\r\n          //\r\n          // Here in, the parsing rules/functions\r\n          //\r\n          // The basic structure of the syntax tree generated is as follows:\r\n          //\r\n          //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n          //\r\n          // Here's some Less code:\r\n          //\r\n          //    .class {\r\n          //      color: #fff;\r\n          //      border: 1px solid #000;\r\n          //      width: @w + 4px;\r\n          //      > .child {...}\r\n          //    }\r\n          //\r\n          // And here's what the parse tree might look like:\r\n          //\r\n          //     Ruleset (Selector '.class', [\r\n          //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n          //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n          //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n          //         Ruleset (Selector [Element '>', '.child'], [...])\r\n          //     ])\r\n          //\r\n          //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n          //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n          //  first, before parsing, that's when we use `peek()`.\r\n          //\r\n          parsers: parsers = {\r\n              //\r\n              // The `primary` rule is the *entry* and *exit* point of the parser.\r\n              // The rules here can appear at any level of the parse tree.\r\n              //\r\n              // The recursive nature of the grammar is an interplay between the `block`\r\n              // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n              // as represented by this simplified grammar:\r\n              //\r\n              //     primary  →  (ruleset | declaration)+\r\n              //     ruleset  →  selector+ block\r\n              //     block    →  '{' primary '}'\r\n              //\r\n              // Only at one point is the primary rule not called from the\r\n              // block rule: at the root level.\r\n              //\r\n              primary: function () {\r\n                  var mixin = this.mixin;\r\n                  var root = [];\r\n                  var node;\r\n                  while (true) {\r\n                      while (true) {\r\n                          node = this.comment();\r\n                          if (!node) {\r\n                              break;\r\n                          }\r\n                          root.push(node);\r\n                      }\r\n                      // always process comments before deciding if finished\r\n                      if (parserInput.finished) {\r\n                          break;\r\n                      }\r\n                      if (parserInput.peek('}')) {\r\n                          break;\r\n                      }\r\n                      node = this.extendRule();\r\n                      if (node) {\r\n                          root = root.concat(node);\r\n                          continue;\r\n                      }\r\n                      node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                          this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                      if (node) {\r\n                          root.push(node);\r\n                      }\r\n                      else {\r\n                          var foundSemiColon = false;\r\n                          while (parserInput.$char(';')) {\r\n                              foundSemiColon = true;\r\n                          }\r\n                          if (!foundSemiColon) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  }\r\n                  return root;\r\n              },\r\n              // comments are collected by the main parsing mechanism and then assigned to nodes\r\n              // where the current structure allows it\r\n              comment: function () {\r\n                  if (parserInput.commentStore.length) {\r\n                      var comment = parserInput.commentStore.shift();\r\n                      return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                  }\r\n              },\r\n              //\r\n              // Entities are tokens which can be found inside an Expression\r\n              //\r\n              entities: {\r\n                  mixinLookup: function () {\r\n                      return parsers.mixin.call(true, true);\r\n                  },\r\n                  //\r\n                  // A string, which supports escaping \" and '\r\n                  //\r\n                  //     \"milky way\" 'he\\'s the one!'\r\n                  //\r\n                  quoted: function (forceEscaped) {\r\n                      var str;\r\n                      var index = parserInput.i;\r\n                      var isEscaped = false;\r\n                      parserInput.save();\r\n                      if (parserInput.$char('~')) {\r\n                          isEscaped = true;\r\n                      }\r\n                      else if (forceEscaped) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      str = parserInput.$quoted();\r\n                      if (!str) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                  },\r\n                  //\r\n                  // A catch-all word, such as:\r\n                  //\r\n                  //     black border-collapse\r\n                  //\r\n                  keyword: function () {\r\n                      var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                      if (k) {\r\n                          return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A function call\r\n                  //\r\n                  //     rgb(255, 0, 255)\r\n                  //\r\n                  // The arguments are parsed with the `entities.arguments` parser.\r\n                  //\r\n                  call: function () {\r\n                      var name;\r\n                      var args;\r\n                      var func;\r\n                      var index = parserInput.i;\r\n                      // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                      if (parserInput.peek(/^url\\(/i)) {\r\n                          return;\r\n                      }\r\n                      parserInput.save();\r\n                      name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\r\n                      if (!name) {\r\n                          parserInput.forget();\r\n                          return;\r\n                      }\r\n                      name = name[1];\r\n                      func = this.customFuncCall(name);\r\n                      if (func) {\r\n                          args = func.parse();\r\n                          if (args && func.stop) {\r\n                              parserInput.forget();\r\n                              return args;\r\n                          }\r\n                      }\r\n                      args = this.arguments(args);\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return new (tree.Call)(name, args, index, fileInfo);\r\n                  },\r\n                  //\r\n                  // Parsing rules for functions with non-standard args, e.g.:\r\n                  //\r\n                  //     boolean(not(2 > 1))\r\n                  //\r\n                  //     This is a quick prototype, to be modified/improved when\r\n                  //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                  //\r\n                  customFuncCall: function (name) {\r\n                      /* Ideally the table is to be moved out of here for faster perf.,\r\n                         but it's quite tricky since it relies on all these `parsers`\r\n                         and `expect` available only here */\r\n                      return {\r\n                          alpha: f(parsers.ieAlpha, true),\r\n                          boolean: f(condition),\r\n                          'if': f(condition)\r\n                      }[name.toLowerCase()];\r\n                      function f(parse, stop) {\r\n                          return {\r\n                              parse: parse,\r\n                              stop: stop // when true - stop after parse() and return its result, \r\n                              // otherwise continue for plain args\r\n                          };\r\n                      }\r\n                      function condition() {\r\n                          return [expect(parsers.condition, 'expected condition')];\r\n                      }\r\n                  },\r\n                  arguments: function (prevArgs) {\r\n                      var argsComma = prevArgs || [];\r\n                      var argsSemiColon = [];\r\n                      var isSemiColonSeparated;\r\n                      var value;\r\n                      parserInput.save();\r\n                      while (true) {\r\n                          if (prevArgs) {\r\n                              prevArgs = false;\r\n                          }\r\n                          else {\r\n                              value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                              if (!value) {\r\n                                  break;\r\n                              }\r\n                              if (value.value && value.value.length == 1) {\r\n                                  value = value.value[0];\r\n                              }\r\n                              argsComma.push(value);\r\n                          }\r\n                          if (parserInput.$char(',')) {\r\n                              continue;\r\n                          }\r\n                          if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                              isSemiColonSeparated = true;\r\n                              value = (argsComma.length < 1) ? argsComma[0]\r\n                                  : new tree.Value(argsComma);\r\n                              argsSemiColon.push(value);\r\n                              argsComma = [];\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                  },\r\n                  literal: function () {\r\n                      return this.dimension() ||\r\n                          this.color() ||\r\n                          this.quoted() ||\r\n                          this.unicodeDescriptor();\r\n                  },\r\n                  // Assignments are argument entities for calls.\r\n                  // They are present in ie filter properties as shown below.\r\n                  //\r\n                  //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                  //\r\n                  assignment: function () {\r\n                      var key;\r\n                      var value;\r\n                      parserInput.save();\r\n                      key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                      if (!key) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (!parserInput.$char('=')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      value = parsers.entity();\r\n                      if (value) {\r\n                          parserInput.forget();\r\n                          return new (tree.Assignment)(key, value);\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  },\r\n                  //\r\n                  // Parse url() tokens\r\n                  //\r\n                  // We use a specific rule for urls, because they don't really behave like\r\n                  // standard function calls. The difference is that the argument doesn't have\r\n                  // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                  //\r\n                  url: function () {\r\n                      var value;\r\n                      var index = parserInput.i;\r\n                      parserInput.autoCommentAbsorb = false;\r\n                      if (!parserInput.$str('url(')) {\r\n                          parserInput.autoCommentAbsorb = true;\r\n                          return;\r\n                      }\r\n                      value = this.quoted() || this.variable() || this.property() ||\r\n                          parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                      parserInput.autoCommentAbsorb = true;\r\n                      expectChar(')');\r\n                      return new (tree.URL)((value.value != null ||\r\n                          value instanceof tree.Variable ||\r\n                          value instanceof tree.Property) ?\r\n                          value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                  },\r\n                  //\r\n                  // A Variable entity, such as `@fink`, in\r\n                  //\r\n                  //     width: @fink + 2px\r\n                  //\r\n                  // We use a different parser for variable definitions,\r\n                  // see `parsers.variable`.\r\n                  //\r\n                  variable: function () {\r\n                      var ch;\r\n                      var name;\r\n                      var index = parserInput.i;\r\n                      parserInput.save();\r\n                      if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                          ch = parserInput.currentChar();\r\n                          if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                              // this may be a VariableCall lookup\r\n                              var result = parsers.variableCall(name);\r\n                              if (result) {\r\n                                  parserInput.forget();\r\n                                  return result;\r\n                              }\r\n                          }\r\n                          parserInput.forget();\r\n                          return new (tree.Variable)(name, index, fileInfo);\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  // A variable entity using the protective {} e.g. @{var}\r\n                  variableCurly: function () {\r\n                      var curly;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                          return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Property accessor, such as `$color`, in\r\n                  //\r\n                  //     background-color: $color\r\n                  //\r\n                  property: function () {\r\n                      var name;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                          return new (tree.Property)(name, index, fileInfo);\r\n                      }\r\n                  },\r\n                  // A property entity useing the protective {} e.g. ${prop}\r\n                  propertyCurly: function () {\r\n                      var curly;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                          return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Hexadecimal color\r\n                  //\r\n                  //     #4F3C2F\r\n                  //\r\n                  // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                  //\r\n                  color: function () {\r\n                      var rgb;\r\n                      parserInput.save();\r\n                      if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                          if (!rgb[2]) {\r\n                              parserInput.forget();\r\n                              return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                          }\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  colorKeyword: function () {\r\n                      parserInput.save();\r\n                      var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                      parserInput.autoCommentAbsorb = false;\r\n                      var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                      parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                      if (!k) {\r\n                          parserInput.forget();\r\n                          return;\r\n                      }\r\n                      parserInput.restore();\r\n                      var color = tree.Color.fromKeyword(k);\r\n                      if (color) {\r\n                          parserInput.$str(k);\r\n                          return color;\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Dimension, that is, a number and a unit\r\n                  //\r\n                  //     0.5em 95%\r\n                  //\r\n                  dimension: function () {\r\n                      if (parserInput.peekNotNumeric()) {\r\n                          return;\r\n                      }\r\n                      var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                      if (value) {\r\n                          return new (tree.Dimension)(value[1], value[2]);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A unicode descriptor, as is used in unicode-range\r\n                  //\r\n                  // U+0??  or U+00A1-00A9\r\n                  //\r\n                  unicodeDescriptor: function () {\r\n                      var ud;\r\n                      ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                      if (ud) {\r\n                          return new (tree.UnicodeDescriptor)(ud[0]);\r\n                      }\r\n                  },\r\n                  //\r\n                  // JavaScript code to be evaluated\r\n                  //\r\n                  //     `window.location.href`\r\n                  //\r\n                  javascript: function () {\r\n                      var js;\r\n                      var index = parserInput.i;\r\n                      parserInput.save();\r\n                      var escape = parserInput.$char('~');\r\n                      var jsQuote = parserInput.$char('`');\r\n                      if (!jsQuote) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      js = parserInput.$re(/^[^`]*`/);\r\n                      if (js) {\r\n                          parserInput.forget();\r\n                          return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                      }\r\n                      parserInput.restore('invalid javascript definition');\r\n                  }\r\n              },\r\n              //\r\n              // The variable part of a variable definition. Used in the `rule` parser\r\n              //\r\n              //     @fink:\r\n              //\r\n              variable: function () {\r\n                  var name;\r\n                  if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                      return name[1];\r\n                  }\r\n              },\r\n              //\r\n              // Call a variable value to retrieve a detached ruleset\r\n              // or a value from a detached ruleset's rules.\r\n              //\r\n              //     @fink();\r\n              //     @fink;\r\n              //     color: @fink[@color];\r\n              //\r\n              variableCall: function (parsedName) {\r\n                  var lookups;\r\n                  var i = parserInput.i;\r\n                  var inValue = !!parsedName;\r\n                  var name = parsedName;\r\n                  parserInput.save();\r\n                  if (name || (parserInput.currentChar() === '@'\r\n                      && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                      lookups = this.mixin.ruleLookups();\r\n                      if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                          parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                          return;\r\n                      }\r\n                      if (!inValue) {\r\n                          name = name[1];\r\n                      }\r\n                      var call = new tree.VariableCall(name, i, fileInfo);\r\n                      if (!inValue && parsers.end()) {\r\n                          parserInput.forget();\r\n                          return call;\r\n                      }\r\n                      else {\r\n                          parserInput.forget();\r\n                          return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                      }\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // extend syntax - used to extend selectors\r\n              //\r\n              extend: function (isRule) {\r\n                  var elements;\r\n                  var e;\r\n                  var index = parserInput.i;\r\n                  var option;\r\n                  var extendList;\r\n                  var extend;\r\n                  if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                      return;\r\n                  }\r\n                  do {\r\n                      option = null;\r\n                      elements = null;\r\n                      while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                          e = this.element();\r\n                          if (!e) {\r\n                              break;\r\n                          }\r\n                          if (elements) {\r\n                              elements.push(e);\r\n                          }\r\n                          else {\r\n                              elements = [e];\r\n                          }\r\n                      }\r\n                      option = option && option[1];\r\n                      if (!elements) {\r\n                          error('Missing target selector for :extend().');\r\n                      }\r\n                      extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                      if (extendList) {\r\n                          extendList.push(extend);\r\n                      }\r\n                      else {\r\n                          extendList = [extend];\r\n                      }\r\n                  } while (parserInput.$char(','));\r\n                  expect(/^\\)/);\r\n                  if (isRule) {\r\n                      expect(/^;/);\r\n                  }\r\n                  return extendList;\r\n              },\r\n              //\r\n              // extendRule - used in a rule to extend all the parent selectors\r\n              //\r\n              extendRule: function () {\r\n                  return this.extend(true);\r\n              },\r\n              //\r\n              // Mixins\r\n              //\r\n              mixin: {\r\n                  //\r\n                  // A Mixin call, with an optional argument list\r\n                  //\r\n                  //     #mixins > .square(#fff);\r\n                  //     #mixins.square(#fff);\r\n                  //     .rounded(4px, black);\r\n                  //     .button;\r\n                  //\r\n                  // We can lookup / return a value using the lookup syntax:\r\n                  //\r\n                  //     color: #mixin.square(#fff)[@color];\r\n                  //\r\n                  // The `while` loop is there because mixins can be\r\n                  // namespaced, but we only support the child and descendant\r\n                  // selector for now.\r\n                  //\r\n                  call: function (inValue, getLookup) {\r\n                      var s = parserInput.currentChar();\r\n                      var important = false;\r\n                      var lookups;\r\n                      var index = parserInput.i;\r\n                      var elements;\r\n                      var args;\r\n                      var hasParens;\r\n                      if (s !== '.' && s !== '#') {\r\n                          return;\r\n                      }\r\n                      parserInput.save(); // stop us absorbing part of an invalid selector\r\n                      elements = this.elements();\r\n                      if (elements) {\r\n                          if (parserInput.$char('(')) {\r\n                              args = this.args(true).args;\r\n                              expectChar(')');\r\n                              hasParens = true;\r\n                          }\r\n                          if (getLookup !== false) {\r\n                              lookups = this.ruleLookups();\r\n                          }\r\n                          if (getLookup === true && !lookups) {\r\n                              parserInput.restore();\r\n                              return;\r\n                          }\r\n                          if (inValue && !lookups && !hasParens) {\r\n                              // This isn't a valid in-value mixin call\r\n                              parserInput.restore();\r\n                              return;\r\n                          }\r\n                          if (!inValue && parsers.important()) {\r\n                              important = true;\r\n                          }\r\n                          if (inValue || parsers.end()) {\r\n                              parserInput.forget();\r\n                              var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                              if (lookups) {\r\n                                  return new tree.NamespaceValue(mixin, lookups);\r\n                              }\r\n                              else {\r\n                                  return mixin;\r\n                              }\r\n                          }\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  /**\r\n                   * Matching elements for mixins\r\n                   * (Start with . or # and can have > )\r\n                   */\r\n                  elements: function () {\r\n                      var elements;\r\n                      var e;\r\n                      var c;\r\n                      var elem;\r\n                      var elemIndex;\r\n                      var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                      while (true) {\r\n                          elemIndex = parserInput.i;\r\n                          e = parserInput.$re(re);\r\n                          if (!e) {\r\n                              break;\r\n                          }\r\n                          elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                          if (elements) {\r\n                              elements.push(elem);\r\n                          }\r\n                          else {\r\n                              elements = [elem];\r\n                          }\r\n                          c = parserInput.$char('>');\r\n                      }\r\n                      return elements;\r\n                  },\r\n                  args: function (isCall) {\r\n                      var entities = parsers.entities;\r\n                      var returner = { args: null, variadic: false };\r\n                      var expressions = [];\r\n                      var argsSemiColon = [];\r\n                      var argsComma = [];\r\n                      var isSemiColonSeparated;\r\n                      var expressionContainsNamed;\r\n                      var name;\r\n                      var nameLoop;\r\n                      var value;\r\n                      var arg;\r\n                      var expand;\r\n                      var hasSep = true;\r\n                      parserInput.save();\r\n                      while (true) {\r\n                          if (isCall) {\r\n                              arg = parsers.detachedRuleset() || parsers.expression();\r\n                          }\r\n                          else {\r\n                              parserInput.commentStore.length = 0;\r\n                              if (parserInput.$str('...')) {\r\n                                  returner.variadic = true;\r\n                                  if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                      isSemiColonSeparated = true;\r\n                                  }\r\n                                  (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                      .push({ variadic: true });\r\n                                  break;\r\n                              }\r\n                              arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                          }\r\n                          if (!arg || !hasSep) {\r\n                              break;\r\n                          }\r\n                          nameLoop = null;\r\n                          if (arg.throwAwayComments) {\r\n                              arg.throwAwayComments();\r\n                          }\r\n                          value = arg;\r\n                          var val = null;\r\n                          if (isCall) {\r\n                              // Variable\r\n                              if (arg.value && arg.value.length == 1) {\r\n                                  val = arg.value[0];\r\n                              }\r\n                          }\r\n                          else {\r\n                              val = arg;\r\n                          }\r\n                          if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                              if (parserInput.$char(':')) {\r\n                                  if (expressions.length > 0) {\r\n                                      if (isSemiColonSeparated) {\r\n                                          error('Cannot mix ; and , as delimiter types');\r\n                                      }\r\n                                      expressionContainsNamed = true;\r\n                                  }\r\n                                  value = parsers.detachedRuleset() || parsers.expression();\r\n                                  if (!value) {\r\n                                      if (isCall) {\r\n                                          error('could not understand value for named argument');\r\n                                      }\r\n                                      else {\r\n                                          parserInput.restore();\r\n                                          returner.args = [];\r\n                                          return returner;\r\n                                      }\r\n                                  }\r\n                                  nameLoop = (name = val.name);\r\n                              }\r\n                              else if (parserInput.$str('...')) {\r\n                                  if (!isCall) {\r\n                                      returner.variadic = true;\r\n                                      if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                          isSemiColonSeparated = true;\r\n                                      }\r\n                                      (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                          .push({ name: arg.name, variadic: true });\r\n                                      break;\r\n                                  }\r\n                                  else {\r\n                                      expand = true;\r\n                                  }\r\n                              }\r\n                              else if (!isCall) {\r\n                                  name = nameLoop = val.name;\r\n                                  value = null;\r\n                              }\r\n                          }\r\n                          if (value) {\r\n                              expressions.push(value);\r\n                          }\r\n                          argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                          if (parserInput.$char(',')) {\r\n                              hasSep = true;\r\n                              continue;\r\n                          }\r\n                          hasSep = parserInput.$char(';') === ';';\r\n                          if (hasSep || isSemiColonSeparated) {\r\n                              if (expressionContainsNamed) {\r\n                                  error('Cannot mix ; and , as delimiter types');\r\n                              }\r\n                              isSemiColonSeparated = true;\r\n                              if (expressions.length > 1) {\r\n                                  value = new (tree.Value)(expressions);\r\n                              }\r\n                              argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                              name = null;\r\n                              expressions = [];\r\n                              expressionContainsNamed = false;\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                      return returner;\r\n                  },\r\n                  //\r\n                  // A Mixin definition, with a list of parameters\r\n                  //\r\n                  //     .rounded (@radius: 2px, @color) {\r\n                  //        ...\r\n                  //     }\r\n                  //\r\n                  // Until we have a finer grained state-machine, we have to\r\n                  // do a look-ahead, to make sure we don't have a mixin call.\r\n                  // See the `rule` function for more information.\r\n                  //\r\n                  // We start by matching `.rounded (`, and then proceed on to\r\n                  // the argument list, which has optional default values.\r\n                  // We store the parameters in `params`, with a `value` key,\r\n                  // if there is a value, such as in the case of `@radius`.\r\n                  //\r\n                  // Once we've got our params list, and a closing `)`, we parse\r\n                  // the `{...}` block.\r\n                  //\r\n                  definition: function () {\r\n                      var name;\r\n                      var params = [];\r\n                      var match;\r\n                      var ruleset;\r\n                      var cond;\r\n                      var variadic = false;\r\n                      if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                          parserInput.peek(/^[^{]*\\}/)) {\r\n                          return;\r\n                      }\r\n                      parserInput.save();\r\n                      match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                      if (match) {\r\n                          name = match[1];\r\n                          var argInfo = this.args(false);\r\n                          params = argInfo.args;\r\n                          variadic = argInfo.variadic;\r\n                          // .mixincall(\"@{a}\");\r\n                          // looks a bit like a mixin definition..\r\n                          // also\r\n                          // .mixincall(@a: {rule: set;});\r\n                          // so we have to be nice and restore\r\n                          if (!parserInput.$char(')')) {\r\n                              parserInput.restore('Missing closing \\')\\'');\r\n                              return;\r\n                          }\r\n                          parserInput.commentStore.length = 0;\r\n                          if (parserInput.$str('when')) { // Guard\r\n                              cond = expect(parsers.conditions, 'expected condition');\r\n                          }\r\n                          ruleset = parsers.block();\r\n                          if (ruleset) {\r\n                              parserInput.forget();\r\n                              return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                          }\r\n                          else {\r\n                              parserInput.restore();\r\n                          }\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  },\r\n                  ruleLookups: function () {\r\n                      var rule;\r\n                      var lookups = [];\r\n                      if (parserInput.currentChar() !== '[') {\r\n                          return;\r\n                      }\r\n                      while (true) {\r\n                          parserInput.save();\r\n                          rule = this.lookupValue();\r\n                          if (!rule && rule !== '') {\r\n                              parserInput.restore();\r\n                              break;\r\n                          }\r\n                          lookups.push(rule);\r\n                          parserInput.forget();\r\n                      }\r\n                      if (lookups.length > 0) {\r\n                          return lookups;\r\n                      }\r\n                  },\r\n                  lookupValue: function () {\r\n                      parserInput.save();\r\n                      if (!parserInput.$char('[')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                      if (!parserInput.$char(']')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (name || name === '') {\r\n                          parserInput.forget();\r\n                          return name;\r\n                      }\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              //\r\n              // Entities are the smallest recognized token,\r\n              // and can be found inside a rule's value.\r\n              //\r\n              entity: function () {\r\n                  var entities = this.entities;\r\n                  return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                      entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                      entities.javascript();\r\n              },\r\n              //\r\n              // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n              // because the `block` rule will be expecting it, but we still need to make sure\r\n              // it's there, if ';' was omitted.\r\n              //\r\n              end: function () {\r\n                  return parserInput.$char(';') || parserInput.peek('}');\r\n              },\r\n              //\r\n              // IE's alpha function\r\n              //\r\n              //     alpha(opacity=88)\r\n              //\r\n              ieAlpha: function () {\r\n                  var value;\r\n                  // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                  if (!parserInput.$re(/^opacity=/i)) {\r\n                      return;\r\n                  }\r\n                  value = parserInput.$re(/^\\d+/);\r\n                  if (!value) {\r\n                      value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                      value = \"@{\" + value.name.slice(1) + \"}\";\r\n                  }\r\n                  expectChar(')');\r\n                  return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n              },\r\n              //\r\n              // A Selector Element\r\n              //\r\n              //     div\r\n              //     + h1\r\n              //     #socks\r\n              //     input[type=\"text\"]\r\n              //\r\n              // Elements are the building blocks for Selectors,\r\n              // they are made out of a `Combinator` (see combinator rule),\r\n              // and an element name, such as a tag a class, or `*`.\r\n              //\r\n              element: function () {\r\n                  var e;\r\n                  var c;\r\n                  var v;\r\n                  var index = parserInput.i;\r\n                  c = this.combinator();\r\n                  e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                      parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                      parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                      parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                      this.entities.variableCurly();\r\n                  if (!e) {\r\n                      parserInput.save();\r\n                      if (parserInput.$char('(')) {\r\n                          if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                              e = new (tree.Paren)(v);\r\n                              parserInput.forget();\r\n                          }\r\n                          else {\r\n                              parserInput.restore('Missing closing \\')\\'');\r\n                          }\r\n                      }\r\n                      else {\r\n                          parserInput.forget();\r\n                      }\r\n                  }\r\n                  if (e) {\r\n                      return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                  }\r\n              },\r\n              //\r\n              // Combinators combine elements together, in a Selector.\r\n              //\r\n              // Because our parser isn't white-space sensitive, special care\r\n              // has to be taken, when parsing the descendant combinator, ` `,\r\n              // as it's an empty space. We have to check the previous character\r\n              // in the input, to see if it's a ` ` character. More info on how\r\n              // we deal with this in *combinator.js*.\r\n              //\r\n              combinator: function () {\r\n                  var c = parserInput.currentChar();\r\n                  if (c === '/') {\r\n                      parserInput.save();\r\n                      var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                      if (slashedCombinator) {\r\n                          parserInput.forget();\r\n                          return new (tree.Combinator)(slashedCombinator);\r\n                      }\r\n                      parserInput.restore();\r\n                  }\r\n                  if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                      parserInput.i++;\r\n                      if (c === '^' && parserInput.currentChar() === '^') {\r\n                          c = '^^';\r\n                          parserInput.i++;\r\n                      }\r\n                      while (parserInput.isWhitespace()) {\r\n                          parserInput.i++;\r\n                      }\r\n                      return new (tree.Combinator)(c);\r\n                  }\r\n                  else if (parserInput.isWhitespace(-1)) {\r\n                      return new (tree.Combinator)(' ');\r\n                  }\r\n                  else {\r\n                      return new (tree.Combinator)(null);\r\n                  }\r\n              },\r\n              //\r\n              // A CSS Selector\r\n              // with less extensions e.g. the ability to extend and guard\r\n              //\r\n              //     .class > div + h1\r\n              //     li a:hover\r\n              //\r\n              // Selectors are made out of one or more Elements, see above.\r\n              //\r\n              selector: function (isLess) {\r\n                  var index = parserInput.i;\r\n                  var elements;\r\n                  var extendList;\r\n                  var c;\r\n                  var e;\r\n                  var allExtends;\r\n                  var when;\r\n                  var condition;\r\n                  isLess = isLess !== false;\r\n                  while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                      if (when) {\r\n                          condition = expect(this.conditions, 'expected condition');\r\n                      }\r\n                      else if (condition) {\r\n                          error('CSS guard can only be used at the end of selector');\r\n                      }\r\n                      else if (extendList) {\r\n                          if (allExtends) {\r\n                              allExtends = allExtends.concat(extendList);\r\n                          }\r\n                          else {\r\n                              allExtends = extendList;\r\n                          }\r\n                      }\r\n                      else {\r\n                          if (allExtends) {\r\n                              error('Extend can only be used at the end of selector');\r\n                          }\r\n                          c = parserInput.currentChar();\r\n                          if (elements) {\r\n                              elements.push(e);\r\n                          }\r\n                          else {\r\n                              elements = [e];\r\n                          }\r\n                          e = null;\r\n                      }\r\n                      if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                          break;\r\n                      }\r\n                  }\r\n                  if (elements) {\r\n                      return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                  }\r\n                  if (allExtends) {\r\n                      error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                  }\r\n              },\r\n              selectors: function () {\r\n                  var s;\r\n                  var selectors;\r\n                  while (true) {\r\n                      s = this.selector();\r\n                      if (!s) {\r\n                          break;\r\n                      }\r\n                      if (selectors) {\r\n                          selectors.push(s);\r\n                      }\r\n                      else {\r\n                          selectors = [s];\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                      if (s.condition && selectors.length > 1) {\r\n                          error(\"Guards are only currently allowed on a single selector.\");\r\n                      }\r\n                      if (!parserInput.$char(',')) {\r\n                          break;\r\n                      }\r\n                      if (s.condition) {\r\n                          error(\"Guards are only currently allowed on a single selector.\");\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                  }\r\n                  return selectors;\r\n              },\r\n              attribute: function () {\r\n                  if (!parserInput.$char('[')) {\r\n                      return;\r\n                  }\r\n                  var entities = this.entities;\r\n                  var key;\r\n                  var val;\r\n                  var op;\r\n                  if (!(key = entities.variableCurly())) {\r\n                      key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                  }\r\n                  op = parserInput.$re(/^[|~*$^]?=/);\r\n                  if (op) {\r\n                      val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                  }\r\n                  expectChar(']');\r\n                  return new (tree.Attribute)(key, op, val);\r\n              },\r\n              //\r\n              // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n              // It's a wrapper around the `primary` rule, with added `{}`.\r\n              //\r\n              block: function () {\r\n                  var content;\r\n                  if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                      return content;\r\n                  }\r\n              },\r\n              blockRuleset: function () {\r\n                  var block = this.block();\r\n                  if (block) {\r\n                      block = new tree.Ruleset(null, block);\r\n                  }\r\n                  return block;\r\n              },\r\n              detachedRuleset: function () {\r\n                  var argInfo;\r\n                  var params;\r\n                  var variadic;\r\n                  parserInput.save();\r\n                  if (parserInput.$re(/^[.#]\\(/)) {\r\n                      /**\r\n                       * DR args currently only implemented for each() function, and not\r\n                       * yet settable as `@dr: #(@arg) {}`\r\n                       * This should be done when DRs are merged with mixins.\r\n                       * See: https://github.com/less/less-meta/issues/16\r\n                       */\r\n                      argInfo = this.mixin.args(false);\r\n                      params = argInfo.args;\r\n                      variadic = argInfo.variadic;\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                  }\r\n                  var blockRuleset = this.blockRuleset();\r\n                  if (blockRuleset) {\r\n                      parserInput.forget();\r\n                      if (params) {\r\n                          return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                      }\r\n                      return new tree.DetachedRuleset(blockRuleset);\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // div, .class, body > p {...}\r\n              //\r\n              ruleset: function () {\r\n                  var selectors;\r\n                  var rules;\r\n                  var debugInfo;\r\n                  parserInput.save();\r\n                  if (context.dumpLineNumbers) {\r\n                      debugInfo = getDebugInfo(parserInput.i);\r\n                  }\r\n                  selectors = this.selectors();\r\n                  if (selectors && (rules = this.block())) {\r\n                      parserInput.forget();\r\n                      var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                      if (context.dumpLineNumbers) {\r\n                          ruleset.debugInfo = debugInfo;\r\n                      }\r\n                      return ruleset;\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              declaration: function () {\r\n                  var name;\r\n                  var value;\r\n                  var index = parserInput.i;\r\n                  var hasDR;\r\n                  var c = parserInput.currentChar();\r\n                  var important;\r\n                  var merge;\r\n                  var isVariable;\r\n                  if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                      return;\r\n                  }\r\n                  parserInput.save();\r\n                  name = this.variable() || this.ruleProperty();\r\n                  if (name) {\r\n                      isVariable = typeof name === 'string';\r\n                      if (isVariable) {\r\n                          value = this.detachedRuleset();\r\n                          if (value) {\r\n                              hasDR = true;\r\n                          }\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                      if (!value) {\r\n                          // a name returned by this.ruleProperty() is always an array of the form:\r\n                          // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                          // where each item is a tree.Keyword or tree.Variable\r\n                          merge = !isVariable && name.length > 1 && name.pop().value;\r\n                          // Custom property values get permissive parsing\r\n                          if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                              value = this.permissiveValue();\r\n                          }\r\n                          // Try to store values as anonymous\r\n                          // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                          else {\r\n                              value = this.anonymousValue();\r\n                          }\r\n                          if (value) {\r\n                              parserInput.forget();\r\n                              // anonymous values absorb the end ';' which is required for them to work\r\n                              return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                          }\r\n                          if (!value) {\r\n                              value = this.value();\r\n                          }\r\n                          if (value) {\r\n                              important = this.important();\r\n                          }\r\n                          else if (isVariable) {\r\n                              // As a last resort, try permissiveValue\r\n                              value = this.permissiveValue();\r\n                          }\r\n                      }\r\n                      if (value && (this.end() || hasDR)) {\r\n                          parserInput.forget();\r\n                          return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              anonymousValue: function () {\r\n                  var index = parserInput.i;\r\n                  var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                  if (match) {\r\n                      return new (tree.Anonymous)(match[1], index);\r\n                  }\r\n              },\r\n              /**\r\n               * Used for custom properties, at-rules, and variables (as fallback)\r\n               * Parses almost anything inside of {} [] () \"\" blocks\r\n               * until it reaches outer-most tokens.\r\n               *\r\n               * First, it will try to parse comments and entities to reach\r\n               * the end. This is mostly like the Expression parser except no\r\n               * math is allowed.\r\n               */\r\n              permissiveValue: function (untilTokens) {\r\n                  var i;\r\n                  var e;\r\n                  var done;\r\n                  var value;\r\n                  var tok = untilTokens || ';';\r\n                  var index = parserInput.i;\r\n                  var result = [];\r\n                  function testCurrentChar() {\r\n                      var char = parserInput.currentChar();\r\n                      if (typeof tok === 'string') {\r\n                          return char === tok;\r\n                      }\r\n                      else {\r\n                          return tok.test(char);\r\n                      }\r\n                  }\r\n                  if (testCurrentChar()) {\r\n                      return;\r\n                  }\r\n                  value = [];\r\n                  do {\r\n                      e = this.comment();\r\n                      if (e) {\r\n                          value.push(e);\r\n                          continue;\r\n                      }\r\n                      e = this.entity();\r\n                      if (e) {\r\n                          value.push(e);\r\n                      }\r\n                  } while (e);\r\n                  done = testCurrentChar();\r\n                  if (value.length > 0) {\r\n                      value = new (tree.Expression)(value);\r\n                      if (done) {\r\n                          return value;\r\n                      }\r\n                      else {\r\n                          result.push(value);\r\n                      }\r\n                      // Preserve space before $parseUntil as it will not\r\n                      if (parserInput.prevChar() === ' ') {\r\n                          result.push(new tree.Anonymous(' ', index));\r\n                      }\r\n                  }\r\n                  parserInput.save();\r\n                  value = parserInput.$parseUntil(tok);\r\n                  if (value) {\r\n                      if (typeof value === 'string') {\r\n                          error(\"Expected '\" + value + \"'\", 'Parse');\r\n                      }\r\n                      if (value.length === 1 && value[0] === ' ') {\r\n                          parserInput.forget();\r\n                          return new tree.Anonymous('', index);\r\n                      }\r\n                      var item = void 0;\r\n                      for (i = 0; i < value.length; i++) {\r\n                          item = value[i];\r\n                          if (Array.isArray(item)) {\r\n                              // Treat actual quotes as normal quoted values\r\n                              result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                          }\r\n                          else {\r\n                              if (i === value.length - 1) {\r\n                                  item = item.trim();\r\n                              }\r\n                              // Treat like quoted values, but replace vars like unquoted expressions\r\n                              var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                              quote.variableRegex = /@([\\w-]+)/g;\r\n                              quote.propRegex = /\\$([\\w-]+)/g;\r\n                              result.push(quote);\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      return new tree.Expression(result, true);\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // An @import atrule\r\n              //\r\n              //     @import \"lib\";\r\n              //\r\n              // Depending on our environment, importing is done differently:\r\n              // In the browser, it's an XHR request, in Node, it would be a\r\n              // file-system operation. The function used for importing is\r\n              // stored in `import`, which we pass to the Import constructor.\r\n              //\r\n              'import': function () {\r\n                  var path;\r\n                  var features;\r\n                  var index = parserInput.i;\r\n                  var dir = parserInput.$re(/^@import?\\s+/);\r\n                  if (dir) {\r\n                      var options = (dir ? this.importOptions() : null) || {};\r\n                      if ((path = this.entities.quoted() || this.entities.url())) {\r\n                          features = this.mediaFeatures();\r\n                          if (!parserInput.$char(';')) {\r\n                              parserInput.i = index;\r\n                              error('missing semi-colon or unrecognised media features on import');\r\n                          }\r\n                          features = features && new (tree.Value)(features);\r\n                          return new (tree.Import)(path, features, options, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.i = index;\r\n                          error('malformed import statement');\r\n                      }\r\n                  }\r\n              },\r\n              importOptions: function () {\r\n                  var o;\r\n                  var options = {};\r\n                  var optionName;\r\n                  var value;\r\n                  // list of options, surrounded by parens\r\n                  if (!parserInput.$char('(')) {\r\n                      return null;\r\n                  }\r\n                  do {\r\n                      o = this.importOption();\r\n                      if (o) {\r\n                          optionName = o;\r\n                          value = true;\r\n                          switch (optionName) {\r\n                              case 'css':\r\n                                  optionName = 'less';\r\n                                  value = false;\r\n                                  break;\r\n                              case 'once':\r\n                                  optionName = 'multiple';\r\n                                  value = false;\r\n                                  break;\r\n                          }\r\n                          options[optionName] = value;\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  } while (o);\r\n                  expectChar(')');\r\n                  return options;\r\n              },\r\n              importOption: function () {\r\n                  var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                  if (opt) {\r\n                      return opt[1];\r\n                  }\r\n              },\r\n              mediaFeature: function () {\r\n                  var entities = this.entities;\r\n                  var nodes = [];\r\n                  var e;\r\n                  var p;\r\n                  parserInput.save();\r\n                  do {\r\n                      e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                      if (e) {\r\n                          nodes.push(e);\r\n                      }\r\n                      else if (parserInput.$char('(')) {\r\n                          p = this.property();\r\n                          e = this.value();\r\n                          if (parserInput.$char(')')) {\r\n                              if (p && e) {\r\n                                  nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                              }\r\n                              else if (e) {\r\n                                  nodes.push(new (tree.Paren)(e));\r\n                              }\r\n                              else {\r\n                                  error('badly formed media feature definition');\r\n                              }\r\n                          }\r\n                          else {\r\n                              error('Missing closing \\')\\'', 'Parse');\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  parserInput.forget();\r\n                  if (nodes.length > 0) {\r\n                      return new (tree.Expression)(nodes);\r\n                  }\r\n              },\r\n              mediaFeatures: function () {\r\n                  var entities = this.entities;\r\n                  var features = [];\r\n                  var e;\r\n                  do {\r\n                      e = this.mediaFeature();\r\n                      if (e) {\r\n                          features.push(e);\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                      else {\r\n                          e = entities.variable() || entities.mixinLookup();\r\n                          if (e) {\r\n                              features.push(e);\r\n                              if (!parserInput.$char(',')) {\r\n                                  break;\r\n                              }\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  return features.length > 0 ? features : null;\r\n              },\r\n              media: function () {\r\n                  var features;\r\n                  var rules;\r\n                  var media;\r\n                  var debugInfo;\r\n                  var index = parserInput.i;\r\n                  if (context.dumpLineNumbers) {\r\n                      debugInfo = getDebugInfo(index);\r\n                  }\r\n                  parserInput.save();\r\n                  if (parserInput.$str('@media')) {\r\n                      features = this.mediaFeatures();\r\n                      rules = this.block();\r\n                      if (!rules) {\r\n                          error('media definitions require block statements after any features');\r\n                      }\r\n                      parserInput.forget();\r\n                      media = new (tree.Media)(rules, features, index, fileInfo);\r\n                      if (context.dumpLineNumbers) {\r\n                          media.debugInfo = debugInfo;\r\n                      }\r\n                      return media;\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // A @plugin directive, used to import plugins dynamically.\r\n              //\r\n              //     @plugin (args) \"lib\";\r\n              //\r\n              plugin: function () {\r\n                  var path;\r\n                  var args;\r\n                  var options;\r\n                  var index = parserInput.i;\r\n                  var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                  if (dir) {\r\n                      args = this.pluginArgs();\r\n                      if (args) {\r\n                          options = {\r\n                              pluginArgs: args,\r\n                              isPlugin: true\r\n                          };\r\n                      }\r\n                      else {\r\n                          options = { isPlugin: true };\r\n                      }\r\n                      if ((path = this.entities.quoted() || this.entities.url())) {\r\n                          if (!parserInput.$char(';')) {\r\n                              parserInput.i = index;\r\n                              error('missing semi-colon on @plugin');\r\n                          }\r\n                          return new (tree.Import)(path, null, options, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.i = index;\r\n                          error('malformed @plugin statement');\r\n                      }\r\n                  }\r\n              },\r\n              pluginArgs: function () {\r\n                  // list of options, surrounded by parens\r\n                  parserInput.save();\r\n                  if (!parserInput.$char('(')) {\r\n                      parserInput.restore();\r\n                      return null;\r\n                  }\r\n                  var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                  if (args[1]) {\r\n                      parserInput.forget();\r\n                      return args[1].trim();\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                      return null;\r\n                  }\r\n              },\r\n              //\r\n              // A CSS AtRule\r\n              //\r\n              //     @charset \"utf-8\";\r\n              //\r\n              atrule: function () {\r\n                  var index = parserInput.i;\r\n                  var name;\r\n                  var value;\r\n                  var rules;\r\n                  var nonVendorSpecificName;\r\n                  var hasIdentifier;\r\n                  var hasExpression;\r\n                  var hasUnknown;\r\n                  var hasBlock = true;\r\n                  var isRooted = true;\r\n                  if (parserInput.currentChar() !== '@') {\r\n                      return;\r\n                  }\r\n                  value = this['import']() || this.plugin() || this.media();\r\n                  if (value) {\r\n                      return value;\r\n                  }\r\n                  parserInput.save();\r\n                  name = parserInput.$re(/^@[a-z-]+/);\r\n                  if (!name) {\r\n                      return;\r\n                  }\r\n                  nonVendorSpecificName = name;\r\n                  if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                      nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                  }\r\n                  switch (nonVendorSpecificName) {\r\n                      case '@charset':\r\n                          hasIdentifier = true;\r\n                          hasBlock = false;\r\n                          break;\r\n                      case '@namespace':\r\n                          hasExpression = true;\r\n                          hasBlock = false;\r\n                          break;\r\n                      case '@keyframes':\r\n                      case '@counter-style':\r\n                          hasIdentifier = true;\r\n                          break;\r\n                      case '@document':\r\n                      case '@supports':\r\n                          hasUnknown = true;\r\n                          isRooted = false;\r\n                          break;\r\n                      default:\r\n                          hasUnknown = true;\r\n                          break;\r\n                  }\r\n                  parserInput.commentStore.length = 0;\r\n                  if (hasIdentifier) {\r\n                      value = this.entity();\r\n                      if (!value) {\r\n                          error(\"expected \" + name + \" identifier\");\r\n                      }\r\n                  }\r\n                  else if (hasExpression) {\r\n                      value = this.expression();\r\n                      if (!value) {\r\n                          error(\"expected \" + name + \" expression\");\r\n                      }\r\n                  }\r\n                  else if (hasUnknown) {\r\n                      value = this.permissiveValue(/^[{;]/);\r\n                      hasBlock = (parserInput.currentChar() === '{');\r\n                      if (!value) {\r\n                          if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                              error(name + \" rule is missing block or ending semi-colon\");\r\n                          }\r\n                      }\r\n                      else if (!value.value) {\r\n                          value = null;\r\n                      }\r\n                  }\r\n                  if (hasBlock) {\r\n                      rules = this.blockRuleset();\r\n                  }\r\n                  if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                      parserInput.forget();\r\n                      return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                  }\r\n                  parserInput.restore('at-rule options not recognised');\r\n              },\r\n              //\r\n              // A Value is a comma-delimited list of Expressions\r\n              //\r\n              //     font-family: Baskerville, Georgia, serif;\r\n              //\r\n              // In a Rule, a Value represents everything after the `:`,\r\n              // and before the `;`.\r\n              //\r\n              value: function () {\r\n                  var e;\r\n                  var expressions = [];\r\n                  var index = parserInput.i;\r\n                  do {\r\n                      e = this.expression();\r\n                      if (e) {\r\n                          expressions.push(e);\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  if (expressions.length > 0) {\r\n                      return new (tree.Value)(expressions, index);\r\n                  }\r\n              },\r\n              important: function () {\r\n                  if (parserInput.currentChar() === '!') {\r\n                      return parserInput.$re(/^! *important/);\r\n                  }\r\n              },\r\n              sub: function () {\r\n                  var a;\r\n                  var e;\r\n                  parserInput.save();\r\n                  if (parserInput.$char('(')) {\r\n                      a = this.addition();\r\n                      if (a && parserInput.$char(')')) {\r\n                          parserInput.forget();\r\n                          e = new (tree.Expression)([a]);\r\n                          e.parens = true;\r\n                          return e;\r\n                      }\r\n                      parserInput.restore('Expected \\')\\'');\r\n                      return;\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              multiplication: function () {\r\n                  var m;\r\n                  var a;\r\n                  var op;\r\n                  var operation;\r\n                  var isSpaced;\r\n                  m = this.operand();\r\n                  if (m) {\r\n                      isSpaced = parserInput.isWhitespace(-1);\r\n                      while (true) {\r\n                          if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                              break;\r\n                          }\r\n                          parserInput.save();\r\n                          op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                          if (!op) {\r\n                              parserInput.forget();\r\n                              break;\r\n                          }\r\n                          a = this.operand();\r\n                          if (!a) {\r\n                              parserInput.restore();\r\n                              break;\r\n                          }\r\n                          parserInput.forget();\r\n                          m.parensInOp = true;\r\n                          a.parensInOp = true;\r\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                          isSpaced = parserInput.isWhitespace(-1);\r\n                      }\r\n                      return operation || m;\r\n                  }\r\n              },\r\n              addition: function () {\r\n                  var m;\r\n                  var a;\r\n                  var op;\r\n                  var operation;\r\n                  var isSpaced;\r\n                  m = this.multiplication();\r\n                  if (m) {\r\n                      isSpaced = parserInput.isWhitespace(-1);\r\n                      while (true) {\r\n                          op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                          if (!op) {\r\n                              break;\r\n                          }\r\n                          a = this.multiplication();\r\n                          if (!a) {\r\n                              break;\r\n                          }\r\n                          m.parensInOp = true;\r\n                          a.parensInOp = true;\r\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                          isSpaced = parserInput.isWhitespace(-1);\r\n                      }\r\n                      return operation || m;\r\n                  }\r\n              },\r\n              conditions: function () {\r\n                  var a;\r\n                  var b;\r\n                  var index = parserInput.i;\r\n                  var condition;\r\n                  a = this.condition(true);\r\n                  if (a) {\r\n                      while (true) {\r\n                          if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                          b = this.condition(true);\r\n                          if (!b) {\r\n                              break;\r\n                          }\r\n                          condition = new (tree.Condition)('or', condition || a, b, index);\r\n                      }\r\n                      return condition || a;\r\n                  }\r\n              },\r\n              condition: function (needsParens) {\r\n                  var result;\r\n                  var logical;\r\n                  var next;\r\n                  function or() {\r\n                      return parserInput.$str('or');\r\n                  }\r\n                  result = this.conditionAnd(needsParens);\r\n                  if (!result) {\r\n                      return;\r\n                  }\r\n                  logical = or();\r\n                  if (logical) {\r\n                      next = this.condition(needsParens);\r\n                      if (next) {\r\n                          result = new (tree.Condition)(logical, result, next);\r\n                      }\r\n                      else {\r\n                          return;\r\n                      }\r\n                  }\r\n                  return result;\r\n              },\r\n              conditionAnd: function (needsParens) {\r\n                  var result;\r\n                  var logical;\r\n                  var next;\r\n                  var self = this;\r\n                  function insideCondition() {\r\n                      var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                      if (!cond && !needsParens) {\r\n                          return self.atomicCondition(needsParens);\r\n                      }\r\n                      return cond;\r\n                  }\r\n                  function and() {\r\n                      return parserInput.$str('and');\r\n                  }\r\n                  result = insideCondition();\r\n                  if (!result) {\r\n                      return;\r\n                  }\r\n                  logical = and();\r\n                  if (logical) {\r\n                      next = this.conditionAnd(needsParens);\r\n                      if (next) {\r\n                          result = new (tree.Condition)(logical, result, next);\r\n                      }\r\n                      else {\r\n                          return;\r\n                      }\r\n                  }\r\n                  return result;\r\n              },\r\n              negatedCondition: function (needsParens) {\r\n                  if (parserInput.$str('not')) {\r\n                      var result = this.parenthesisCondition(needsParens);\r\n                      if (result) {\r\n                          result.negate = !result.negate;\r\n                      }\r\n                      return result;\r\n                  }\r\n              },\r\n              parenthesisCondition: function (needsParens) {\r\n                  function tryConditionFollowedByParenthesis(me) {\r\n                      var body;\r\n                      parserInput.save();\r\n                      body = me.condition(needsParens);\r\n                      if (!body) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return body;\r\n                  }\r\n                  var body;\r\n                  parserInput.save();\r\n                  if (!parserInput.$str('(')) {\r\n                      parserInput.restore();\r\n                      return;\r\n                  }\r\n                  body = tryConditionFollowedByParenthesis(this);\r\n                  if (body) {\r\n                      parserInput.forget();\r\n                      return body;\r\n                  }\r\n                  body = this.atomicCondition(needsParens);\r\n                  if (!body) {\r\n                      parserInput.restore();\r\n                      return;\r\n                  }\r\n                  if (!parserInput.$char(')')) {\r\n                      parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                      return;\r\n                  }\r\n                  parserInput.forget();\r\n                  return body;\r\n              },\r\n              atomicCondition: function (needsParens) {\r\n                  var entities = this.entities;\r\n                  var index = parserInput.i;\r\n                  var a;\r\n                  var b;\r\n                  var c;\r\n                  var op;\r\n                  function cond() {\r\n                      return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                  }\r\n                  cond = cond.bind(this);\r\n                  a = cond();\r\n                  if (a) {\r\n                      if (parserInput.$char('>')) {\r\n                          if (parserInput.$char('=')) {\r\n                              op = '>=';\r\n                          }\r\n                          else {\r\n                              op = '>';\r\n                          }\r\n                      }\r\n                      else if (parserInput.$char('<')) {\r\n                          if (parserInput.$char('=')) {\r\n                              op = '<=';\r\n                          }\r\n                          else {\r\n                              op = '<';\r\n                          }\r\n                      }\r\n                      else if (parserInput.$char('=')) {\r\n                          if (parserInput.$char('>')) {\r\n                              op = '=>';\r\n                          }\r\n                          else if (parserInput.$char('<')) {\r\n                              op = '=<';\r\n                          }\r\n                          else {\r\n                              op = '=';\r\n                          }\r\n                      }\r\n                      if (op) {\r\n                          b = cond();\r\n                          if (b) {\r\n                              c = new (tree.Condition)(op, a, b, index, false);\r\n                          }\r\n                          else {\r\n                              error('expected expression');\r\n                          }\r\n                      }\r\n                      else {\r\n                          c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                      }\r\n                      return c;\r\n                  }\r\n              },\r\n              //\r\n              // An operand is anything that can be part of an operation,\r\n              // such as a Color, or a Variable\r\n              //\r\n              operand: function () {\r\n                  var entities = this.entities;\r\n                  var negate;\r\n                  if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                      negate = parserInput.$char('-');\r\n                  }\r\n                  var o = this.sub() || entities.dimension() ||\r\n                      entities.color() || entities.variable() ||\r\n                      entities.property() || entities.call() ||\r\n                      entities.quoted(true) || entities.colorKeyword() ||\r\n                      entities.mixinLookup();\r\n                  if (negate) {\r\n                      o.parensInOp = true;\r\n                      o = new (tree.Negative)(o);\r\n                  }\r\n                  return o;\r\n              },\r\n              //\r\n              // Expressions either represent mathematical operations,\r\n              // or white-space delimited Entities.\r\n              //\r\n              //     1px solid black\r\n              //     @var * 2\r\n              //\r\n              expression: function () {\r\n                  var entities = [];\r\n                  var e;\r\n                  var delim;\r\n                  var index = parserInput.i;\r\n                  do {\r\n                      e = this.comment();\r\n                      if (e) {\r\n                          entities.push(e);\r\n                          continue;\r\n                      }\r\n                      e = this.addition() || this.entity();\r\n                      if (e instanceof tree.Comment) {\r\n                          e = null;\r\n                      }\r\n                      if (e) {\r\n                          entities.push(e);\r\n                          // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                          if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                              delim = parserInput.$char('/');\r\n                              if (delim) {\r\n                                  entities.push(new (tree.Anonymous)(delim, index));\r\n                              }\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  if (entities.length > 0) {\r\n                      return new (tree.Expression)(entities);\r\n                  }\r\n              },\r\n              property: function () {\r\n                  var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                  if (name) {\r\n                      return name[1];\r\n                  }\r\n              },\r\n              ruleProperty: function () {\r\n                  var name = [];\r\n                  var index = [];\r\n                  var s;\r\n                  var k;\r\n                  parserInput.save();\r\n                  var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                  if (simpleProperty) {\r\n                      name = [new (tree.Keyword)(simpleProperty[1])];\r\n                      parserInput.forget();\r\n                      return name;\r\n                  }\r\n                  function match(re) {\r\n                      var i = parserInput.i;\r\n                      var chunk = parserInput.$re(re);\r\n                      if (chunk) {\r\n                          index.push(i);\r\n                          return name.push(chunk[1]);\r\n                      }\r\n                  }\r\n                  match(/^(\\*?)/);\r\n                  while (true) {\r\n                      if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                          break;\r\n                      }\r\n                  }\r\n                  if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                      parserInput.forget();\r\n                      // at last, we have the complete match now. move forward,\r\n                      // convert name particles to tree objects and return:\r\n                      if (name[0] === '') {\r\n                          name.shift();\r\n                          index.shift();\r\n                      }\r\n                      for (k = 0; k < name.length; k++) {\r\n                          s = name[k];\r\n                          name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                              new (tree.Keyword)(s) :\r\n                              (s.charAt(0) === '@' ?\r\n                                  new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                  new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                      }\r\n                      return name;\r\n                  }\r\n                  parserInput.restore();\r\n              }\r\n          }\r\n      };\r\n  };\r\n  Parser.serializeVars = function (vars) {\r\n      var s = '';\r\n      for (var name_1 in vars) {\r\n          if (Object.hasOwnProperty.call(vars, name_1)) {\r\n              var value = vars[name_1];\r\n              s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n          }\r\n      }\r\n      return s;\r\n  };\n\n  function boolean(condition) {\r\n      return condition ? Keyword.True : Keyword.False;\r\n  }\r\n  /**\r\n   * Functions with evalArgs set to false are sent context\r\n   * as the first argument.\r\n   */\r\n  function If(context, condition, trueValue, falseValue) {\r\n      return condition.eval(context) ? trueValue.eval(context)\r\n          : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n  }\r\n  If.evalArgs = false;\r\n  var boolean$1 = { boolean: boolean, 'if': If };\n\n  var colorFunctions;\r\n  function clamp$1(val) {\r\n      return Math.min(1, Math.max(0, val));\r\n  }\r\n  function hsla(origColor, hsl) {\r\n      var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n      if (color) {\r\n          if (origColor.value &&\r\n              /^(rgb|hsl)/.test(origColor.value)) {\r\n              color.value = origColor.value;\r\n          }\r\n          else {\r\n              color.value = 'rgb';\r\n          }\r\n          return color;\r\n      }\r\n  }\r\n  function toHSL(color) {\r\n      if (color.toHSL) {\r\n          return color.toHSL();\r\n      }\r\n      else {\r\n          throw new Error('Argument cannot be evaluated to a color');\r\n      }\r\n  }\r\n  function toHSV(color) {\r\n      if (color.toHSV) {\r\n          return color.toHSV();\r\n      }\r\n      else {\r\n          throw new Error('Argument cannot be evaluated to a color');\r\n      }\r\n  }\r\n  function number(n) {\r\n      if (n instanceof Dimension) {\r\n          return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n      }\r\n      else if (typeof n === 'number') {\r\n          return n;\r\n      }\r\n      else {\r\n          throw {\r\n              type: 'Argument',\r\n              message: 'color functions take numbers as parameters'\r\n          };\r\n      }\r\n  }\r\n  function scaled(n, size) {\r\n      if (n instanceof Dimension && n.unit.is('%')) {\r\n          return parseFloat(n.value * size / 100);\r\n      }\r\n      else {\r\n          return number(n);\r\n      }\r\n  }\r\n  colorFunctions = {\r\n      rgb: function (r, g, b) {\r\n          var color = colorFunctions.rgba(r, g, b, 1.0);\r\n          if (color) {\r\n              color.value = 'rgb';\r\n              return color;\r\n          }\r\n      },\r\n      rgba: function (r, g, b, a) {\r\n          try {\r\n              if (r instanceof Color) {\r\n                  if (g) {\r\n                      a = number(g);\r\n                  }\r\n                  else {\r\n                      a = r.alpha;\r\n                  }\r\n                  return new Color(r.rgb, a, 'rgba');\r\n              }\r\n              var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n              a = number(a);\r\n              return new Color(rgb, a, 'rgba');\r\n          }\r\n          catch (e) { }\r\n      },\r\n      hsl: function (h, s, l) {\r\n          var color = colorFunctions.hsla(h, s, l, 1.0);\r\n          if (color) {\r\n              color.value = 'hsl';\r\n              return color;\r\n          }\r\n      },\r\n      hsla: function (h, s, l, a) {\r\n          try {\r\n              if (h instanceof Color) {\r\n                  if (s) {\r\n                      a = number(s);\r\n                  }\r\n                  else {\r\n                      a = h.alpha;\r\n                  }\r\n                  return new Color(h.rgb, a, 'hsla');\r\n              }\r\n              var m1_1;\r\n              var m2_1;\r\n              function hue(h) {\r\n                  h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                  if (h * 6 < 1) {\r\n                      return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                  }\r\n                  else if (h * 2 < 1) {\r\n                      return m2_1;\r\n                  }\r\n                  else if (h * 3 < 2) {\r\n                      return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                  }\r\n                  else {\r\n                      return m1_1;\r\n                  }\r\n              }\r\n              h = (number(h) % 360) / 360;\r\n              s = clamp$1(number(s));\r\n              l = clamp$1(number(l));\r\n              a = clamp$1(number(a));\r\n              m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n              m1_1 = l * 2 - m2_1;\r\n              var rgb = [\r\n                  hue(h + 1 / 3) * 255,\r\n                  hue(h) * 255,\r\n                  hue(h - 1 / 3) * 255\r\n              ];\r\n              a = number(a);\r\n              return new Color(rgb, a, 'hsla');\r\n          }\r\n          catch (e) { }\r\n      },\r\n      hsv: function (h, s, v) {\r\n          return colorFunctions.hsva(h, s, v, 1.0);\r\n      },\r\n      hsva: function (h, s, v, a) {\r\n          h = ((number(h) % 360) / 360) * 360;\r\n          s = number(s);\r\n          v = number(v);\r\n          a = number(a);\r\n          var i;\r\n          var f;\r\n          i = Math.floor((h / 60) % 6);\r\n          f = (h / 60) - i;\r\n          var vs = [v,\r\n              v * (1 - s),\r\n              v * (1 - f * s),\r\n              v * (1 - (1 - f) * s)];\r\n          var perm = [[0, 3, 1],\r\n              [2, 0, 1],\r\n              [1, 0, 3],\r\n              [1, 2, 0],\r\n              [3, 1, 0],\r\n              [0, 1, 2]];\r\n          return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n      },\r\n      hue: function (color) {\r\n          return new Dimension(toHSL(color).h);\r\n      },\r\n      saturation: function (color) {\r\n          return new Dimension(toHSL(color).s * 100, '%');\r\n      },\r\n      lightness: function (color) {\r\n          return new Dimension(toHSL(color).l * 100, '%');\r\n      },\r\n      hsvhue: function (color) {\r\n          return new Dimension(toHSV(color).h);\r\n      },\r\n      hsvsaturation: function (color) {\r\n          return new Dimension(toHSV(color).s * 100, '%');\r\n      },\r\n      hsvvalue: function (color) {\r\n          return new Dimension(toHSV(color).v * 100, '%');\r\n      },\r\n      red: function (color) {\r\n          return new Dimension(color.rgb[0]);\r\n      },\r\n      green: function (color) {\r\n          return new Dimension(color.rgb[1]);\r\n      },\r\n      blue: function (color) {\r\n          return new Dimension(color.rgb[2]);\r\n      },\r\n      alpha: function (color) {\r\n          return new Dimension(toHSL(color).a);\r\n      },\r\n      luma: function (color) {\r\n          return new Dimension(color.luma() * color.alpha * 100, '%');\r\n      },\r\n      luminance: function (color) {\r\n          var luminance = (0.2126 * color.rgb[0] / 255) +\r\n              (0.7152 * color.rgb[1] / 255) +\r\n              (0.0722 * color.rgb[2] / 255);\r\n          return new Dimension(luminance * color.alpha * 100, '%');\r\n      },\r\n      saturate: function (color, amount, method) {\r\n          // filter: saturate(3.2);\r\n          // should be kept as is, so check for color\r\n          if (!color.rgb) {\r\n              return null;\r\n          }\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.s += hsl.s * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.s += amount.value / 100;\r\n          }\r\n          hsl.s = clamp$1(hsl.s);\r\n          return hsla(color, hsl);\r\n      },\r\n      desaturate: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.s -= hsl.s * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.s -= amount.value / 100;\r\n          }\r\n          hsl.s = clamp$1(hsl.s);\r\n          return hsla(color, hsl);\r\n      },\r\n      lighten: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.l += hsl.l * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.l += amount.value / 100;\r\n          }\r\n          hsl.l = clamp$1(hsl.l);\r\n          return hsla(color, hsl);\r\n      },\r\n      darken: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.l -= hsl.l * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.l -= amount.value / 100;\r\n          }\r\n          hsl.l = clamp$1(hsl.l);\r\n          return hsla(color, hsl);\r\n      },\r\n      fadein: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.a += hsl.a * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.a += amount.value / 100;\r\n          }\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      fadeout: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.a -= hsl.a * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.a -= amount.value / 100;\r\n          }\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      fade: function (color, amount) {\r\n          var hsl = toHSL(color);\r\n          hsl.a = amount.value / 100;\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      spin: function (color, amount) {\r\n          var hsl = toHSL(color);\r\n          var hue = (hsl.h + amount.value) % 360;\r\n          hsl.h = hue < 0 ? 360 + hue : hue;\r\n          return hsla(color, hsl);\r\n      },\r\n      //\r\n      // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n      // http://sass-lang.com\r\n      //\r\n      mix: function (color1, color2, weight) {\r\n          if (!weight) {\r\n              weight = new Dimension(50);\r\n          }\r\n          var p = weight.value / 100.0;\r\n          var w = p * 2 - 1;\r\n          var a = toHSL(color1).a - toHSL(color2).a;\r\n          var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n          var w2 = 1 - w1;\r\n          var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n              color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n              color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n          var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n          return new Color(rgb, alpha);\r\n      },\r\n      greyscale: function (color) {\r\n          return colorFunctions.desaturate(color, new Dimension(100));\r\n      },\r\n      contrast: function (color, dark, light, threshold) {\r\n          // filter: contrast(3.2);\r\n          // should be kept as is, so check for color\r\n          if (!color.rgb) {\r\n              return null;\r\n          }\r\n          if (typeof light === 'undefined') {\r\n              light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n          }\r\n          if (typeof dark === 'undefined') {\r\n              dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n          }\r\n          // Figure out which is actually light and dark:\r\n          if (dark.luma() > light.luma()) {\r\n              var t = light;\r\n              light = dark;\r\n              dark = t;\r\n          }\r\n          if (typeof threshold === 'undefined') {\r\n              threshold = 0.43;\r\n          }\r\n          else {\r\n              threshold = number(threshold);\r\n          }\r\n          if (color.luma() < threshold) {\r\n              return light;\r\n          }\r\n          else {\r\n              return dark;\r\n          }\r\n      },\r\n      // Changes made in 2.7.0 - Reverted in 3.0.0\r\n      // contrast: function (color, color1, color2, threshold) {\r\n      //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n      //     // according to the standard WCAG contrast ratio calculation.\r\n      //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n      //     // The threshold param is no longer used, in line with SASS.\r\n      //     // filter: contrast(3.2);\r\n      //     // should be kept as is, so check for color\r\n      //     if (!color.rgb) {\r\n      //         return null;\r\n      //     }\r\n      //     if (typeof color1 === 'undefined') {\r\n      //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n      //     }\r\n      //     if (typeof color2 === 'undefined') {\r\n      //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n      //     }\r\n      //     var contrast1, contrast2;\r\n      //     var luma = color.luma();\r\n      //     var luma1 = color1.luma();\r\n      //     var luma2 = color2.luma();\r\n      //     // Calculate contrast ratios for each color\r\n      //     if (luma > luma1) {\r\n      //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n      //     } else {\r\n      //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n      //     }\r\n      //     if (luma > luma2) {\r\n      //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n      //     } else {\r\n      //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n      //     }\r\n      //     if (contrast1 > contrast2) {\r\n      //         return color1;\r\n      //     } else {\r\n      //         return color2;\r\n      //     }\r\n      // },\r\n      argb: function (color) {\r\n          return new Anonymous(color.toARGB());\r\n      },\r\n      color: function (c) {\r\n          if ((c instanceof Quoted) &&\r\n              (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n              var val = c.value.slice(1);\r\n              return new Color(val, undefined, \"#\" + val);\r\n          }\r\n          if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n              c.value = undefined;\r\n              return c;\r\n          }\r\n          throw {\r\n              type: 'Argument',\r\n              message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n          };\r\n      },\r\n      tint: function (color, amount) {\r\n          return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n      },\r\n      shade: function (color, amount) {\r\n          return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n      }\r\n  };\r\n  var color = colorFunctions;\n\n  // Color Blending\r\n  // ref: http://www.w3.org/TR/compositing-1\r\n  function colorBlend(mode, color1, color2) {\r\n      var ab = color1.alpha; // result\r\n      var // backdrop\r\n      cb;\r\n      var as = color2.alpha;\r\n      var // source\r\n      cs;\r\n      var ar;\r\n      var cr;\r\n      var r = [];\r\n      ar = as + ab * (1 - as);\r\n      for (var i = 0; i < 3; i++) {\r\n          cb = color1.rgb[i] / 255;\r\n          cs = color2.rgb[i] / 255;\r\n          cr = mode(cb, cs);\r\n          if (ar) {\r\n              cr = (as * cs + ab * (cb -\r\n                  as * (cb + cs - cr))) / ar;\r\n          }\r\n          r[i] = cr * 255;\r\n      }\r\n      return new Color(r, ar);\r\n  }\r\n  var colorBlendModeFunctions = {\r\n      multiply: function (cb, cs) {\r\n          return cb * cs;\r\n      },\r\n      screen: function (cb, cs) {\r\n          return cb + cs - cb * cs;\r\n      },\r\n      overlay: function (cb, cs) {\r\n          cb *= 2;\r\n          return (cb <= 1) ?\r\n              colorBlendModeFunctions.multiply(cb, cs) :\r\n              colorBlendModeFunctions.screen(cb - 1, cs);\r\n      },\r\n      softlight: function (cb, cs) {\r\n          var d = 1;\r\n          var e = cb;\r\n          if (cs > 0.5) {\r\n              e = 1;\r\n              d = (cb > 0.25) ? Math.sqrt(cb)\r\n                  : ((16 * cb - 12) * cb + 4) * cb;\r\n          }\r\n          return cb - (1 - 2 * cs) * e * (d - cb);\r\n      },\r\n      hardlight: function (cb, cs) {\r\n          return colorBlendModeFunctions.overlay(cs, cb);\r\n      },\r\n      difference: function (cb, cs) {\r\n          return Math.abs(cb - cs);\r\n      },\r\n      exclusion: function (cb, cs) {\r\n          return cb + cs - 2 * cb * cs;\r\n      },\r\n      // non-w3c functions:\r\n      average: function (cb, cs) {\r\n          return (cb + cs) / 2;\r\n      },\r\n      negation: function (cb, cs) {\r\n          return 1 - Math.abs(cb + cs - 1);\r\n      }\r\n  };\r\n  for (var f in colorBlendModeFunctions) {\r\n      if (colorBlendModeFunctions.hasOwnProperty(f)) {\r\n          colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\r\n      }\r\n  }\n\n  var dataUri = (function (environment) {\r\n      var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n      return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n              if (!filePathNode) {\r\n                  filePathNode = mimetypeNode;\r\n                  mimetypeNode = null;\r\n              }\r\n              var mimetype = mimetypeNode && mimetypeNode.value;\r\n              var filePath = filePathNode.value;\r\n              var currentFileInfo = this.currentFileInfo;\r\n              var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                  currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n              var fragmentStart = filePath.indexOf('#');\r\n              var fragment = '';\r\n              if (fragmentStart !== -1) {\r\n                  fragment = filePath.slice(fragmentStart);\r\n                  filePath = filePath.slice(0, fragmentStart);\r\n              }\r\n              var context = clone(this.context);\r\n              context.rawBuffer = true;\r\n              var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n              if (!fileManager) {\r\n                  return fallback(this, filePathNode);\r\n              }\r\n              var useBase64 = false;\r\n              // detect the mimetype if not given\r\n              if (!mimetypeNode) {\r\n                  mimetype = environment.mimeLookup(filePath);\r\n                  if (mimetype === 'image/svg+xml') {\r\n                      useBase64 = false;\r\n                  }\r\n                  else {\r\n                      // use base 64 unless it's an ASCII or UTF-8 format\r\n                      var charset = environment.charsetLookup(mimetype);\r\n                      useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                  }\r\n                  if (useBase64) {\r\n                      mimetype += ';base64';\r\n                  }\r\n              }\r\n              else {\r\n                  useBase64 = /;base64$/.test(mimetype);\r\n              }\r\n              var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n              if (!fileSync.contents) {\r\n                  logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                  return fallback(this, filePathNode || mimetypeNode);\r\n              }\r\n              var buf = fileSync.contents;\r\n              if (useBase64 && !environment.encodeBase64) {\r\n                  return fallback(this, filePathNode);\r\n              }\r\n              buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n              var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n              return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n          } };\r\n  });\n\n  var getItemsFromNode = function (node) {\r\n      // handle non-array values as an array of length 1\r\n      // return 'undefined' if index is invalid\r\n      var items = Array.isArray(node.value) ?\r\n          node.value : Array(node);\r\n      return items;\r\n  };\r\n  var list = {\r\n      _SELF: function (n) {\r\n          return n;\r\n      },\r\n      extract: function (values, index) {\r\n          // (1-based index)\r\n          index = index.value - 1;\r\n          return getItemsFromNode(values)[index];\r\n      },\r\n      length: function (values) {\r\n          return new Dimension(getItemsFromNode(values).length);\r\n      },\r\n      /**\r\n       * Creates a Less list of incremental values.\r\n       * Modeled after Lodash's range function, also exists natively in PHP\r\n       *\r\n       * @param {Dimension} [start=1]\r\n       * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n       * @param {Dimension} [step=1]\r\n       */\r\n      range: function (start, end, step) {\r\n          var from;\r\n          var to;\r\n          var stepValue = 1;\r\n          var list = [];\r\n          if (end) {\r\n              to = end;\r\n              from = start.value;\r\n              if (step) {\r\n                  stepValue = step.value;\r\n              }\r\n          }\r\n          else {\r\n              from = 1;\r\n              to = start;\r\n          }\r\n          for (var i = from; i <= to.value; i += stepValue) {\r\n              list.push(new Dimension(i, to.unit));\r\n          }\r\n          return new Expression(list);\r\n      },\r\n      each: function (list, rs) {\r\n          var _this = this;\r\n          var rules = [];\r\n          var newRules;\r\n          var iterator;\r\n          var tryEval = function (val) {\r\n              if (val instanceof Node) {\r\n                  return val.eval(_this.context);\r\n              }\r\n              return val;\r\n          };\r\n          if (list.value && !(list instanceof Quoted)) {\r\n              if (Array.isArray(list.value)) {\r\n                  iterator = list.value.map(tryEval);\r\n              }\r\n              else {\r\n                  iterator = [tryEval(list.value)];\r\n              }\r\n          }\r\n          else if (list.ruleset) {\r\n              iterator = tryEval(list.ruleset).rules;\r\n          }\r\n          else if (list.rules) {\r\n              iterator = list.rules.map(tryEval);\r\n          }\r\n          else if (Array.isArray(list)) {\r\n              iterator = list.map(tryEval);\r\n          }\r\n          else {\r\n              iterator = [tryEval(list)];\r\n          }\r\n          var valueName = '@value';\r\n          var keyName = '@key';\r\n          var indexName = '@index';\r\n          if (rs.params) {\r\n              valueName = rs.params[0] && rs.params[0].name;\r\n              keyName = rs.params[1] && rs.params[1].name;\r\n              indexName = rs.params[2] && rs.params[2].name;\r\n              rs = rs.rules;\r\n          }\r\n          else {\r\n              rs = rs.ruleset;\r\n          }\r\n          for (var i = 0; i < iterator.length; i++) {\r\n              var key = void 0;\r\n              var value = void 0;\r\n              var item = iterator[i];\r\n              if (item instanceof Declaration) {\r\n                  key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                  value = item.value;\r\n              }\r\n              else {\r\n                  key = new Dimension(i + 1);\r\n                  value = item;\r\n              }\r\n              if (item instanceof Comment) {\r\n                  continue;\r\n              }\r\n              newRules = rs.rules.slice(0);\r\n              if (valueName) {\r\n                  newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n              }\r\n              if (indexName) {\r\n                  newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n              }\r\n              if (keyName) {\r\n                  newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n              }\r\n              rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n          }\r\n          return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n      }\r\n  };\n\n  var MathHelper = function (fn, unit, n) {\r\n      if (!(n instanceof Dimension)) {\r\n          throw { type: 'Argument', message: 'argument must be a number' };\r\n      }\r\n      if (unit == null) {\r\n          unit = n.unit;\r\n      }\r\n      else {\r\n          n = n.unify();\r\n      }\r\n      return new Dimension(fn(parseFloat(n.value)), unit);\r\n  };\n\n  var mathFunctions = {\r\n      // name,  unit\r\n      ceil: null,\r\n      floor: null,\r\n      sqrt: null,\r\n      abs: null,\r\n      tan: '',\r\n      sin: '',\r\n      cos: '',\r\n      atan: 'rad',\r\n      asin: 'rad',\r\n      acos: 'rad'\r\n  };\r\n  for (var f$1 in mathFunctions) {\r\n      if (mathFunctions.hasOwnProperty(f$1)) {\r\n          mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\r\n      }\r\n  }\r\n  mathFunctions.round = function (n, f) {\r\n      var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n      return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n  };\n\n  var minMax = function (isMin, args) {\r\n      args = Array.prototype.slice.call(args);\r\n      switch (args.length) {\r\n          case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n      }\r\n      var i; // key is the unit.toString() for unified Dimension values,\r\n      var j;\r\n      var current;\r\n      var currentUnified;\r\n      var referenceUnified;\r\n      var unit;\r\n      var unitStatic;\r\n      var unitClone;\r\n      var // elems only contains original argument values.\r\n      order = [];\r\n      var values = {};\r\n      // value is the index into the order array.\r\n      for (i = 0; i < args.length; i++) {\r\n          current = args[i];\r\n          if (!(current instanceof Dimension)) {\r\n              if (Array.isArray(args[i].value)) {\r\n                  Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n              }\r\n              continue;\r\n          }\r\n          currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n          unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n          unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n          unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n          j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n          if (j === undefined) {\r\n              if (unitStatic !== undefined && unit !== unitStatic) {\r\n                  throw { type: 'Argument', message: 'incompatible types' };\r\n              }\r\n              values[unit] = order.length;\r\n              order.push(current);\r\n              continue;\r\n          }\r\n          referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n          if (isMin && currentUnified.value < referenceUnified.value ||\r\n              !isMin && currentUnified.value > referenceUnified.value) {\r\n              order[j] = current;\r\n          }\r\n      }\r\n      if (order.length == 1) {\r\n          return order[0];\r\n      }\r\n      args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n      return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n  };\r\n  var number$1 = {\r\n      min: function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return minMax(true, args);\r\n      },\r\n      max: function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return minMax(false, args);\r\n      },\r\n      convert: function (val, unit) {\r\n          return val.convertTo(unit.value);\r\n      },\r\n      pi: function () {\r\n          return new Dimension(Math.PI);\r\n      },\r\n      mod: function (a, b) {\r\n          return new Dimension(a.value % b.value, a.unit);\r\n      },\r\n      pow: function (x, y) {\r\n          if (typeof x === 'number' && typeof y === 'number') {\r\n              x = new Dimension(x);\r\n              y = new Dimension(y);\r\n          }\r\n          else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n              throw { type: 'Argument', message: 'arguments must be numbers' };\r\n          }\r\n          return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n      },\r\n      percentage: function (n) {\r\n          var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n          return result;\r\n      }\r\n  };\n\n  var string = {\r\n      e: function (str) {\r\n          return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n      },\r\n      escape: function (str) {\r\n          return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n              .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n      },\r\n      replace: function (string, pattern, replacement, flags) {\r\n          var result = string.value;\r\n          replacement = (replacement.type === 'Quoted') ?\r\n              replacement.value : replacement.toCSS();\r\n          result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n          return new Quoted(string.quote || '', result, string.escaped);\r\n      },\r\n      '%': function (string /* arg, arg, ... */) {\r\n          var args = Array.prototype.slice.call(arguments, 1);\r\n          var result = string.value;\r\n          var _loop_1 = function (i) {\r\n              /* jshint loopfunc:true */\r\n              result = result.replace(/%[sda]/i, function (token) {\r\n                  var value = ((args[i].type === 'Quoted') &&\r\n                      token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                  return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n              });\r\n          };\r\n          for (var i = 0; i < args.length; i++) {\r\n              _loop_1(i);\r\n          }\r\n          result = result.replace(/%%/g, '%');\r\n          return new Quoted(string.quote || '', result, string.escaped);\r\n      }\r\n  };\n\n  var svg = (function (environment) {\r\n      return { 'svg-gradient': function (direction) {\r\n              var stops;\r\n              var gradientDirectionSvg;\r\n              var gradientType = 'linear';\r\n              var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n              var renderEnv = { compress: false };\r\n              var returner;\r\n              var directionValue = direction.toCSS(renderEnv);\r\n              var i;\r\n              var color;\r\n              var position;\r\n              var positionValue;\r\n              var alpha;\r\n              function throwArgumentDescriptor() {\r\n                  throw { type: 'Argument',\r\n                      message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                          ' end_color [end_position] or direction, color list' };\r\n              }\r\n              if (arguments.length == 2) {\r\n                  if (arguments[1].value.length < 2) {\r\n                      throwArgumentDescriptor();\r\n                  }\r\n                  stops = arguments[1].value;\r\n              }\r\n              else if (arguments.length < 3) {\r\n                  throwArgumentDescriptor();\r\n              }\r\n              else {\r\n                  stops = Array.prototype.slice.call(arguments, 1);\r\n              }\r\n              switch (directionValue) {\r\n                  case 'to bottom':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                      break;\r\n                  case 'to right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                      break;\r\n                  case 'to bottom right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                      break;\r\n                  case 'to top right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                      break;\r\n                  case 'ellipse':\r\n                  case 'ellipse at center':\r\n                      gradientType = 'radial';\r\n                      gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                      rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                      break;\r\n                  default:\r\n                      throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                              ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n              }\r\n              returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n              for (i = 0; i < stops.length; i += 1) {\r\n                  if (stops[i] instanceof Expression) {\r\n                      color = stops[i].value[0];\r\n                      position = stops[i].value[1];\r\n                  }\r\n                  else {\r\n                      color = stops[i];\r\n                      position = undefined;\r\n                  }\r\n                  if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                      throwArgumentDescriptor();\r\n                  }\r\n                  positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                  alpha = color.alpha;\r\n                  returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n              }\r\n              returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n              returner = encodeURIComponent(returner);\r\n              returner = \"data:image/svg+xml,\" + returner;\r\n              return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n          } };\r\n  });\n\n  var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n  var isunit = function (n, unit) {\r\n      if (unit === undefined) {\r\n          throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n      }\r\n      unit = typeof unit.value === 'string' ? unit.value : unit;\r\n      if (typeof unit !== 'string') {\r\n          throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n      }\r\n      return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n  };\r\n  var types = {\r\n      isruleset: function (n) {\r\n          return isa(n, DetachedRuleset);\r\n      },\r\n      iscolor: function (n) {\r\n          return isa(n, Color);\r\n      },\r\n      isnumber: function (n) {\r\n          return isa(n, Dimension);\r\n      },\r\n      isstring: function (n) {\r\n          return isa(n, Quoted);\r\n      },\r\n      iskeyword: function (n) {\r\n          return isa(n, Keyword);\r\n      },\r\n      isurl: function (n) {\r\n          return isa(n, URL);\r\n      },\r\n      ispixel: function (n) {\r\n          return isunit(n, 'px');\r\n      },\r\n      ispercentage: function (n) {\r\n          return isunit(n, '%');\r\n      },\r\n      isem: function (n) {\r\n          return isunit(n, 'em');\r\n      },\r\n      isunit: isunit,\r\n      unit: function (val, unit) {\r\n          if (!(val instanceof Dimension)) {\r\n              throw { type: 'Argument', message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n          }\r\n          if (unit) {\r\n              if (unit instanceof Keyword) {\r\n                  unit = unit.value;\r\n              }\r\n              else {\r\n                  unit = unit.toCSS();\r\n              }\r\n          }\r\n          else {\r\n              unit = '';\r\n          }\r\n          return new Dimension(val.value, unit);\r\n      },\r\n      'get-unit': function (n) {\r\n          return new Anonymous(n.unit);\r\n      }\r\n  };\n\n  var Functions = (function (environment) {\r\n      var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n      // register functions\r\n      functionRegistry.addMultiple(boolean$1);\r\n      functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n      functionRegistry.addMultiple(color);\r\n      functionRegistry.addMultiple(colorBlend);\r\n      functionRegistry.addMultiple(dataUri(environment));\r\n      functionRegistry.addMultiple(list);\r\n      functionRegistry.addMultiple(mathFunctions);\r\n      functionRegistry.addMultiple(number$1);\r\n      functionRegistry.addMultiple(string);\r\n      functionRegistry.addMultiple(svg());\r\n      functionRegistry.addMultiple(types);\r\n      return functions;\r\n  });\n\n  var sourceMapOutput = (function (environment) {\r\n      var SourceMapOutput = /** @class */ (function () {\r\n          function SourceMapOutput(options) {\r\n              this._css = [];\r\n              this._rootNode = options.rootNode;\r\n              this._contentsMap = options.contentsMap;\r\n              this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n              if (options.sourceMapFilename) {\r\n                  this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n              }\r\n              this._outputFilename = options.outputFilename;\r\n              this.sourceMapURL = options.sourceMapURL;\r\n              if (options.sourceMapBasepath) {\r\n                  this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n              }\r\n              if (options.sourceMapRootpath) {\r\n                  this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                  if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                      this._sourceMapRootpath += '/';\r\n                  }\r\n              }\r\n              else {\r\n                  this._sourceMapRootpath = '';\r\n              }\r\n              this._outputSourceFiles = options.outputSourceFiles;\r\n              this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n              this._lineNumber = 0;\r\n              this._column = 0;\r\n          }\r\n          SourceMapOutput.prototype.removeBasepath = function (path) {\r\n              if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                  path = path.substring(this._sourceMapBasepath.length);\r\n                  if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                      path = path.substring(1);\r\n                  }\r\n              }\r\n              return path;\r\n          };\r\n          SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n              filename = filename.replace(/\\\\/g, '/');\r\n              filename = this.removeBasepath(filename);\r\n              return (this._sourceMapRootpath || '') + filename;\r\n          };\r\n          SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n              // ignore adding empty strings\r\n              if (!chunk) {\r\n                  return;\r\n              }\r\n              var lines;\r\n              var sourceLines;\r\n              var columns;\r\n              var sourceColumns;\r\n              var i;\r\n              if (fileInfo && fileInfo.filename) {\r\n                  var inputSource = this._contentsMap[fileInfo.filename];\r\n                  // remove vars/banner added to the top of the file\r\n                  if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                      // adjust the index\r\n                      index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                      if (index < 0) {\r\n                          index = 0;\r\n                      }\r\n                      // adjust the source\r\n                      inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                  }\r\n                  /**\r\n                   * ignore empty content, or failsafe\r\n                   * if contents map is incorrect\r\n                   */\r\n                  if (inputSource === undefined) {\r\n                      this._css.push(chunk);\r\n                      return;\r\n                  }\r\n                  inputSource = inputSource.substring(0, index);\r\n                  sourceLines = inputSource.split('\\n');\r\n                  sourceColumns = sourceLines[sourceLines.length - 1];\r\n              }\r\n              lines = chunk.split('\\n');\r\n              columns = lines[lines.length - 1];\r\n              if (fileInfo && fileInfo.filename) {\r\n                  if (!mapLines) {\r\n                      this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                          original: { line: sourceLines.length, column: sourceColumns.length },\r\n                          source: this.normalizeFilename(fileInfo.filename) });\r\n                  }\r\n                  else {\r\n                      for (i = 0; i < lines.length; i++) {\r\n                          this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                              original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                              source: this.normalizeFilename(fileInfo.filename) });\r\n                      }\r\n                  }\r\n              }\r\n              if (lines.length === 1) {\r\n                  this._column += columns.length;\r\n              }\r\n              else {\r\n                  this._lineNumber += lines.length - 1;\r\n                  this._column = columns.length;\r\n              }\r\n              this._css.push(chunk);\r\n          };\r\n          SourceMapOutput.prototype.isEmpty = function () {\r\n              return this._css.length === 0;\r\n          };\r\n          SourceMapOutput.prototype.toCSS = function (context) {\r\n              this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n              if (this._outputSourceFiles) {\r\n                  for (var filename in this._contentsMap) {\r\n                      if (this._contentsMap.hasOwnProperty(filename)) {\r\n                          var source = this._contentsMap[filename];\r\n                          if (this._contentsIgnoredCharsMap[filename]) {\r\n                              source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                          }\r\n                          this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                      }\r\n                  }\r\n              }\r\n              this._rootNode.genCSS(context, this);\r\n              if (this._css.length > 0) {\r\n                  var sourceMapURL = void 0;\r\n                  var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                  if (this.sourceMapURL) {\r\n                      sourceMapURL = this.sourceMapURL;\r\n                  }\r\n                  else if (this._sourceMapFilename) {\r\n                      sourceMapURL = this._sourceMapFilename;\r\n                  }\r\n                  this.sourceMapURL = sourceMapURL;\r\n                  this.sourceMap = sourceMapContent;\r\n              }\r\n              return this._css.join('');\r\n          };\r\n          return SourceMapOutput;\r\n      }());\r\n      return SourceMapOutput;\r\n  });\n\n  var sourceMapBuilder = (function (SourceMapOutput, environment) {\r\n      var SourceMapBuilder = /** @class */ (function () {\r\n          function SourceMapBuilder(options) {\r\n              this.options = options;\r\n          }\r\n          SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n              var sourceMapOutput = new SourceMapOutput({\r\n                  contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                  rootNode: rootNode,\r\n                  contentsMap: imports.contents,\r\n                  sourceMapFilename: this.options.sourceMapFilename,\r\n                  sourceMapURL: this.options.sourceMapURL,\r\n                  outputFilename: this.options.sourceMapOutputFilename,\r\n                  sourceMapBasepath: this.options.sourceMapBasepath,\r\n                  sourceMapRootpath: this.options.sourceMapRootpath,\r\n                  outputSourceFiles: this.options.outputSourceFiles,\r\n                  sourceMapGenerator: this.options.sourceMapGenerator,\r\n                  sourceMapFileInline: this.options.sourceMapFileInline,\r\n                  disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n              });\r\n              var css = sourceMapOutput.toCSS(options);\r\n              this.sourceMap = sourceMapOutput.sourceMap;\r\n              this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n              if (this.options.sourceMapInputFilename) {\r\n                  this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n              }\r\n              if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                  this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n              }\r\n              return css + this.getCSSAppendage();\r\n          };\r\n          SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n              var sourceMapURL = this.sourceMapURL;\r\n              if (this.options.sourceMapFileInline) {\r\n                  if (this.sourceMap === undefined) {\r\n                      return '';\r\n                  }\r\n                  sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n              }\r\n              if (this.options.disableSourcemapAnnotation) {\r\n                  return '';\r\n              }\r\n              if (sourceMapURL) {\r\n                  return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n              }\r\n              return '';\r\n          };\r\n          SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n              return this.sourceMap;\r\n          };\r\n          SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n              this.sourceMap = sourceMap;\r\n          };\r\n          SourceMapBuilder.prototype.isInline = function () {\r\n              return this.options.sourceMapFileInline;\r\n          };\r\n          SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n              return this.sourceMapURL;\r\n          };\r\n          SourceMapBuilder.prototype.getOutputFilename = function () {\r\n              return this.options.sourceMapOutputFilename;\r\n          };\r\n          SourceMapBuilder.prototype.getInputFilename = function () {\r\n              return this.sourceMapInputFilename;\r\n          };\r\n          return SourceMapBuilder;\r\n      }());\r\n      return SourceMapBuilder;\r\n  });\n\n  var transformTree = (function (root, options) {\r\n      if (options === void 0) { options = {}; }\r\n      var evaldRoot;\r\n      var variables = options.variables;\r\n      var evalEnv = new contexts.Eval(options);\r\n      //\r\n      // Allows setting variables with a hash, so:\r\n      //\r\n      //   `{ color: new tree.Color('#f01') }` will become:\r\n      //\r\n      //   new tree.Declaration('@color',\r\n      //     new tree.Value([\r\n      //       new tree.Expression([\r\n      //         new tree.Color('#f01')\r\n      //       ])\r\n      //     ])\r\n      //   )\r\n      //\r\n      if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n          variables = Object.keys(variables).map(function (k) {\r\n              var value = variables[k];\r\n              if (!(value instanceof tree.Value)) {\r\n                  if (!(value instanceof tree.Expression)) {\r\n                      value = new tree.Expression([value]);\r\n                  }\r\n                  value = new tree.Value([value]);\r\n              }\r\n              return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n          });\r\n          evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n      }\r\n      var visitors$1 = [\r\n          new visitors.JoinSelectorVisitor(),\r\n          new visitors.MarkVisibleSelectorsVisitor(true),\r\n          new visitors.ExtendVisitor(),\r\n          new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n      ];\r\n      var preEvalVisitors = [];\r\n      var v;\r\n      var visitorIterator;\r\n      /**\r\n       * first() / get() allows visitors to be added while visiting\r\n       *\r\n       * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n       */\r\n      if (options.pluginManager) {\r\n          visitorIterator = options.pluginManager.visitor();\r\n          for (var i = 0; i < 2; i++) {\r\n              visitorIterator.first();\r\n              while ((v = visitorIterator.get())) {\r\n                  if (v.isPreEvalVisitor) {\r\n                      if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                          preEvalVisitors.push(v);\r\n                          v.run(root);\r\n                      }\r\n                  }\r\n                  else {\r\n                      if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                          if (v.isPreVisitor) {\r\n                              visitors$1.unshift(v);\r\n                          }\r\n                          else {\r\n                              visitors$1.push(v);\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      evaldRoot = root.eval(evalEnv);\r\n      for (var i = 0; i < visitors$1.length; i++) {\r\n          visitors$1[i].run(evaldRoot);\r\n      }\r\n      // Run any remaining visitors added after eval pass\r\n      if (options.pluginManager) {\r\n          visitorIterator.first();\r\n          while ((v = visitorIterator.get())) {\r\n              if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                  v.run(evaldRoot);\r\n              }\r\n          }\r\n      }\r\n      return evaldRoot;\r\n  });\n\n  var parseTree = (function (SourceMapBuilder) {\r\n      var ParseTree = /** @class */ (function () {\r\n          function ParseTree(root, imports) {\r\n              this.root = root;\r\n              this.imports = imports;\r\n          }\r\n          ParseTree.prototype.toCSS = function (options) {\r\n              var evaldRoot;\r\n              var result = {};\r\n              var sourceMapBuilder;\r\n              try {\r\n                  evaldRoot = transformTree(this.root, options);\r\n              }\r\n              catch (e) {\r\n                  throw new LessError(e, this.imports);\r\n              }\r\n              try {\r\n                  var compress = Boolean(options.compress);\r\n                  if (compress) {\r\n                      logger.warn('The compress option has been deprecated. ' +\r\n                          'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                  }\r\n                  var toCSSOptions = {\r\n                      compress: compress,\r\n                      dumpLineNumbers: options.dumpLineNumbers,\r\n                      strictUnits: Boolean(options.strictUnits),\r\n                      numPrecision: 8\r\n                  };\r\n                  if (options.sourceMap) {\r\n                      sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                      result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                  }\r\n                  else {\r\n                      result.css = evaldRoot.toCSS(toCSSOptions);\r\n                  }\r\n              }\r\n              catch (e) {\r\n                  throw new LessError(e, this.imports);\r\n              }\r\n              if (options.pluginManager) {\r\n                  var postProcessors = options.pluginManager.getPostProcessors();\r\n                  for (var i = 0; i < postProcessors.length; i++) {\r\n                      result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                  }\r\n              }\r\n              if (options.sourceMap) {\r\n                  result.map = sourceMapBuilder.getExternalSourceMap();\r\n              }\r\n              result.imports = [];\r\n              for (var file in this.imports.files) {\r\n                  if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                      result.imports.push(file);\r\n                  }\r\n              }\r\n              return result;\r\n          };\r\n          return ParseTree;\r\n      }());\r\n      return ParseTree;\r\n  });\n\n  function importManager (environment) {\r\n      // FileInfo = {\r\n      //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n      //  'filename' - full resolved filename of current file\r\n      //  'rootpath' - path to append to normal URLs for this node\r\n      //  'currentDirectory' - path to the current file, absolute\r\n      //  'rootFilename' - filename of the base file\r\n      //  'entryPath' - absolute path to the entry file\r\n      //  'reference' - whether the file should not be output and only output parts that are referenced\r\n      var ImportManager = /** @class */ (function () {\r\n          function ImportManager(less, context, rootFileInfo) {\r\n              this.less = less;\r\n              this.rootFilename = rootFileInfo.filename;\r\n              this.paths = context.paths || []; // Search paths, when importing\r\n              this.contents = {}; // map - filename to contents of all the files\r\n              this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n              this.mime = context.mime;\r\n              this.error = null;\r\n              this.context = context;\r\n              // Deprecated? Unused outside of here, could be useful.\r\n              this.queue = []; // Files which haven't been imported yet\r\n              this.files = {}; // Holds the imported parse trees.\r\n          }\r\n          /**\r\n           * Add an import to be imported\r\n           * @param path - the raw path\r\n           * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n           * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n           * @param importOptions - import options\r\n           * @param callback - callback for when it is imported\r\n           */\r\n          ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n              var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n              this.queue.push(path);\r\n              var fileParsedFunc = function (e, root, fullPath) {\r\n                  importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                  var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                  if (importOptions.optional && e) {\r\n                      callback(null, { rules: [] }, false, null);\r\n                      logger.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                  }\r\n                  else {\r\n                      // Inline imports aren't cached here.\r\n                      // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                      // same name as they used to do before this comment and the condition below have been added.\r\n                      if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                          importManager.files[fullPath] = { root: root, options: importOptions };\r\n                      }\r\n                      if (e && !importManager.error) {\r\n                          importManager.error = e;\r\n                      }\r\n                      callback(e, root, importedEqualsRoot, fullPath);\r\n                  }\r\n              };\r\n              var newFileInfo = {\r\n                  rewriteUrls: this.context.rewriteUrls,\r\n                  entryPath: currentFileInfo.entryPath,\r\n                  rootpath: currentFileInfo.rootpath,\r\n                  rootFilename: currentFileInfo.rootFilename\r\n              };\r\n              var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n              if (!fileManager) {\r\n                  fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                  return;\r\n              }\r\n              var loadFileCallback = function (loadedFile) {\r\n                  var plugin;\r\n                  var resolvedFilename = loadedFile.filename;\r\n                  var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                  // Pass on an updated rootpath if path of imported file is relative and file\r\n                  // is in a (sub|sup) directory\r\n                  //\r\n                  // Examples:\r\n                  // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                  //   then rootpath should become 'less/module/nav/'\r\n                  // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                  //   then rootpath should become 'less/../'\r\n                  newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                  if (newFileInfo.rewriteUrls) {\r\n                      newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                      if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                          newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                      }\r\n                  }\r\n                  newFileInfo.filename = resolvedFilename;\r\n                  var newEnv = new contexts.Parse(importManager.context);\r\n                  newEnv.processImports = false;\r\n                  importManager.contents[resolvedFilename] = contents;\r\n                  if (currentFileInfo.reference || importOptions.reference) {\r\n                      newFileInfo.reference = true;\r\n                  }\r\n                  if (importOptions.isPlugin) {\r\n                      plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                      if (plugin instanceof LessError) {\r\n                          fileParsedFunc(plugin, null, resolvedFilename);\r\n                      }\r\n                      else {\r\n                          fileParsedFunc(null, plugin, resolvedFilename);\r\n                      }\r\n                  }\r\n                  else if (importOptions.inline) {\r\n                      fileParsedFunc(null, contents, resolvedFilename);\r\n                  }\r\n                  else {\r\n                      // import (multiple) parse trees apparently get altered and can't be cached.\r\n                      // TODO: investigate why this is\r\n                      if (importManager.files[resolvedFilename]\r\n                          && !importManager.files[resolvedFilename].options.multiple\r\n                          && !importOptions.multiple) {\r\n                          fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                      }\r\n                      else {\r\n                          new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                              fileParsedFunc(e, root, resolvedFilename);\r\n                          });\r\n                      }\r\n                  }\r\n              };\r\n              var loadedFile;\r\n              var promise;\r\n              var context = clone(this.context);\r\n              if (tryAppendExtension) {\r\n                  context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n              }\r\n              if (importOptions.isPlugin) {\r\n                  context.mime = 'application/javascript';\r\n                  if (context.syncImport) {\r\n                      loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                  }\r\n                  else {\r\n                      promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                  }\r\n              }\r\n              else {\r\n                  if (context.syncImport) {\r\n                      loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                  }\r\n                  else {\r\n                      promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                          if (err) {\r\n                              fileParsedFunc(err);\r\n                          }\r\n                          else {\r\n                              loadFileCallback(loadedFile);\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n              if (loadedFile) {\r\n                  if (!loadedFile.filename) {\r\n                      fileParsedFunc(loadedFile);\r\n                  }\r\n                  else {\r\n                      loadFileCallback(loadedFile);\r\n                  }\r\n              }\r\n              else if (promise) {\r\n                  promise.then(loadFileCallback, fileParsedFunc);\r\n              }\r\n          };\r\n          return ImportManager;\r\n      }());\r\n      return ImportManager;\r\n  }\n\n  var Render = (function (environment, ParseTree, ImportManager) {\r\n      var render = function (input, options, callback) {\r\n          if (typeof options === 'function') {\r\n              callback = options;\r\n              options = copyOptions(this.options, {});\r\n          }\r\n          else {\r\n              options = copyOptions(this.options, options || {});\r\n          }\r\n          if (!callback) {\r\n              var self_1 = this;\r\n              return new Promise(function (resolve, reject) {\r\n                  render.call(self_1, input, options, function (err, output) {\r\n                      if (err) {\r\n                          reject(err);\r\n                      }\r\n                      else {\r\n                          resolve(output);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n          else {\r\n              this.parse(input, options, function (err, root, imports, options) {\r\n                  if (err) {\r\n                      return callback(err);\r\n                  }\r\n                  var result;\r\n                  try {\r\n                      var parseTree = new ParseTree(root, imports);\r\n                      result = parseTree.toCSS(options);\r\n                  }\r\n                  catch (err) {\r\n                      return callback(err);\r\n                  }\r\n                  callback(null, result);\r\n              });\r\n          }\r\n      };\r\n      return render;\r\n  });\n\n  /**\r\n   * Plugin Manager\r\n   */\r\n  var PluginManager = /** @class */ (function () {\r\n      function PluginManager(less) {\r\n          this.less = less;\r\n          this.visitors = [];\r\n          this.preProcessors = [];\r\n          this.postProcessors = [];\r\n          this.installedPlugins = [];\r\n          this.fileManagers = [];\r\n          this.iterator = -1;\r\n          this.pluginCache = {};\r\n          this.Loader = new less.PluginLoader(less);\r\n      }\r\n      /**\r\n       * Adds all the plugins in the array\r\n       * @param {Array} plugins\r\n       */\r\n      PluginManager.prototype.addPlugins = function (plugins) {\r\n          if (plugins) {\r\n              for (var i = 0; i < plugins.length; i++) {\r\n                  this.addPlugin(plugins[i]);\r\n              }\r\n          }\r\n      };\r\n      /**\r\n       *\r\n       * @param plugin\r\n       * @param {String} filename\r\n       */\r\n      PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n          this.installedPlugins.push(plugin);\r\n          if (filename) {\r\n              this.pluginCache[filename] = plugin;\r\n          }\r\n          if (plugin.install) {\r\n              plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n          }\r\n      };\r\n      /**\r\n       *\r\n       * @param filename\r\n       */\r\n      PluginManager.prototype.get = function (filename) {\r\n          return this.pluginCache[filename];\r\n      };\r\n      /**\r\n       * Adds a visitor. The visitor object has options on itself to determine\r\n       * when it should run.\r\n       * @param visitor\r\n       */\r\n      PluginManager.prototype.addVisitor = function (visitor) {\r\n          this.visitors.push(visitor);\r\n      };\r\n      /**\r\n       * Adds a pre processor object\r\n       * @param {object} preProcessor\r\n       * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n       */\r\n      PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n          var indexToInsertAt;\r\n          for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n              if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                  break;\r\n              }\r\n          }\r\n          this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n      };\r\n      /**\r\n       * Adds a post processor object\r\n       * @param {object} postProcessor\r\n       * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n       */\r\n      PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n          var indexToInsertAt;\r\n          for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n              if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                  break;\r\n              }\r\n          }\r\n          this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n      };\r\n      /**\r\n       *\r\n       * @param manager\r\n       */\r\n      PluginManager.prototype.addFileManager = function (manager) {\r\n          this.fileManagers.push(manager);\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getPreProcessors = function () {\r\n          var preProcessors = [];\r\n          for (var i = 0; i < this.preProcessors.length; i++) {\r\n              preProcessors.push(this.preProcessors[i].preProcessor);\r\n          }\r\n          return preProcessors;\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getPostProcessors = function () {\r\n          var postProcessors = [];\r\n          for (var i = 0; i < this.postProcessors.length; i++) {\r\n              postProcessors.push(this.postProcessors[i].postProcessor);\r\n          }\r\n          return postProcessors;\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getVisitors = function () {\r\n          return this.visitors;\r\n      };\r\n      PluginManager.prototype.visitor = function () {\r\n          var self = this;\r\n          return {\r\n              first: function () {\r\n                  self.iterator = -1;\r\n                  return self.visitors[self.iterator];\r\n              },\r\n              get: function () {\r\n                  self.iterator += 1;\r\n                  return self.visitors[self.iterator];\r\n              }\r\n          };\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getFileManagers = function () {\r\n          return this.fileManagers;\r\n      };\r\n      return PluginManager;\r\n  }());\r\n  var pm;\r\n  function PluginManagerFactory(less, newFactory) {\r\n      if (newFactory || !pm) {\r\n          pm = new PluginManager(less);\r\n      }\r\n      return pm;\r\n  }\n\n  var Parse = (function (environment, ParseTree, ImportManager) {\r\n      var parse = function (input, options, callback) {\r\n          if (typeof options === 'function') {\r\n              callback = options;\r\n              options = copyOptions(this.options, {});\r\n          }\r\n          else {\r\n              options = copyOptions(this.options, options || {});\r\n          }\r\n          if (!callback) {\r\n              var self_1 = this;\r\n              return new Promise(function (resolve, reject) {\r\n                  parse.call(self_1, input, options, function (err, output) {\r\n                      if (err) {\r\n                          reject(err);\r\n                      }\r\n                      else {\r\n                          resolve(output);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n          else {\r\n              var context_1;\r\n              var rootFileInfo = void 0;\r\n              var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n              options.pluginManager = pluginManager_1;\r\n              context_1 = new contexts.Parse(options);\r\n              if (options.rootFileInfo) {\r\n                  rootFileInfo = options.rootFileInfo;\r\n              }\r\n              else {\r\n                  var filename = options.filename || 'input';\r\n                  var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                  rootFileInfo = {\r\n                      filename: filename,\r\n                      rewriteUrls: context_1.rewriteUrls,\r\n                      rootpath: context_1.rootpath || '',\r\n                      currentDirectory: entryPath,\r\n                      entryPath: entryPath,\r\n                      rootFilename: filename\r\n                  };\r\n                  // add in a missing trailing slash\r\n                  if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                      rootFileInfo.rootpath += '/';\r\n                  }\r\n              }\r\n              var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n              this.importManager = imports_1;\r\n              // TODO: allow the plugins to be just a list of paths or names\r\n              // Do an async plugin queue like lessc\r\n              if (options.plugins) {\r\n                  options.plugins.forEach(function (plugin) {\r\n                      var evalResult;\r\n                      var contents;\r\n                      if (plugin.fileContent) {\r\n                          contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                          evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                          if (evalResult instanceof LessError) {\r\n                              return callback(evalResult);\r\n                          }\r\n                      }\r\n                      else {\r\n                          pluginManager_1.addPlugin(plugin);\r\n                      }\r\n                  });\r\n              }\r\n              new Parser(context_1, imports_1, rootFileInfo)\r\n                  .parse(input, function (e, root) {\r\n                  if (e) {\r\n                      return callback(e);\r\n                  }\r\n                  callback(null, root, imports_1, options);\r\n              }, options);\r\n          }\r\n      };\r\n      return parse;\r\n  });\n\n  var lessRoot = (function (environment$1, fileManagers) {\r\n      /**\r\n       * @todo\r\n       * This original code could be improved quite a bit.\r\n       * Many classes / modules currently add side-effects / mutations to passed in objects,\r\n       * which makes it hard to refactor and reason about.\r\n       */\r\n      environment$1 = new environment(environment$1, fileManagers);\r\n      var SourceMapOutput = sourceMapOutput(environment$1);\r\n      var SourceMapBuilder = sourceMapBuilder(SourceMapOutput, environment$1);\r\n      var ParseTree = parseTree(SourceMapBuilder);\r\n      var ImportManager = importManager(environment$1);\r\n      var render = Render(environment$1, ParseTree);\r\n      var parse = Parse(environment$1, ParseTree, ImportManager);\r\n      var functions = Functions(environment$1);\r\n      /**\r\n       * @todo\r\n       * This root properties / methods need to be organized.\r\n       * It's not clear what should / must be public and why.\r\n       */\r\n      var initial = {\r\n          version: [3, 13, 1],\r\n          data: data,\r\n          tree: tree,\r\n          Environment: environment,\r\n          AbstractFileManager: AbstractFileManager,\r\n          AbstractPluginLoader: AbstractPluginLoader,\r\n          environment: environment$1,\r\n          visitors: visitors,\r\n          Parser: Parser,\r\n          functions: functions,\r\n          contexts: contexts,\r\n          SourceMapOutput: SourceMapOutput,\r\n          SourceMapBuilder: SourceMapBuilder,\r\n          ParseTree: ParseTree,\r\n          ImportManager: ImportManager,\r\n          render: render,\r\n          parse: parse,\r\n          LessError: LessError,\r\n          transformTree: transformTree,\r\n          utils: utils,\r\n          PluginManager: PluginManagerFactory,\r\n          logger: logger\r\n      };\r\n      // Create a public API\r\n      var ctor = function (t) { return function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return new (t.bind.apply(t, __spreadArrays([void 0], args)))();\r\n      }; };\r\n      var t;\r\n      var api = Object.create(initial);\r\n      for (var n in initial.tree) {\r\n          /* eslint guard-for-in: 0 */\r\n          t = initial.tree[n];\r\n          if (typeof t === 'function') {\r\n              api[n.toLowerCase()] = ctor(t);\r\n          }\r\n          else {\r\n              api[n] = Object.create(null);\r\n              for (var o in t) {\r\n                  /* eslint guard-for-in: 0 */\r\n                  api[n][o.toLowerCase()] = ctor(t[o]);\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Some of the functions assume a `this` context of the API object,\r\n       * which causes it to fail when wrapped for ES6 imports.\r\n       *\r\n       * An assumed `this` should be removed in the future.\r\n       */\r\n      initial.parse = initial.parse.bind(api);\r\n      initial.render = initial.render.bind(api);\r\n      return api;\r\n  });\n\n  /* global window, XMLHttpRequest */\r\n  var options;\r\n  var logger$1;\r\n  var fileCache = {};\r\n  // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n  var FileManager = /** @class */ (function (_super) {\r\n      __extends(FileManager, _super);\r\n      function FileManager() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      FileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n          return true;\r\n      };\r\n      FileManager.prototype.join = function (basePath, laterPath) {\r\n          if (!basePath) {\r\n              return laterPath;\r\n          }\r\n          return this.extractUrlParts(laterPath, basePath).path;\r\n      };\r\n      FileManager.prototype.doXHR = function (url, type, callback, errback) {\r\n          var xhr = new XMLHttpRequest();\r\n          var async = options.isFileProtocol ? options.fileAsync : true;\r\n          if (typeof xhr.overrideMimeType === 'function') {\r\n              xhr.overrideMimeType('text/css');\r\n          }\r\n          logger$1.debug(\"XHR: Getting '\" + url + \"'\");\r\n          xhr.open('GET', url, async);\r\n          xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n          xhr.send(null);\r\n          function handleResponse(xhr, callback, errback) {\r\n              if (xhr.status >= 200 && xhr.status < 300) {\r\n                  callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n              }\r\n              else if (typeof errback === 'function') {\r\n                  errback(xhr.status, url);\r\n              }\r\n          }\r\n          if (options.isFileProtocol && !options.fileAsync) {\r\n              if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                  callback(xhr.responseText);\r\n              }\r\n              else {\r\n                  errback(xhr.status, url);\r\n              }\r\n          }\r\n          else if (async) {\r\n              xhr.onreadystatechange = function () {\r\n                  if (xhr.readyState == 4) {\r\n                      handleResponse(xhr, callback, errback);\r\n                  }\r\n              };\r\n          }\r\n          else {\r\n              handleResponse(xhr, callback, errback);\r\n          }\r\n      };\r\n      FileManager.prototype.supports = function () {\r\n          return true;\r\n      };\r\n      FileManager.prototype.clearFileCache = function () {\r\n          fileCache = {};\r\n      };\r\n      FileManager.prototype.loadFile = function (filename, currentDirectory, options, environment) {\r\n          // TODO: Add prefix support like less-node?\r\n          // What about multiple paths?\r\n          if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n              filename = currentDirectory + filename;\r\n          }\r\n          filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n          options = options || {};\r\n          // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n          // some context variables for imports\r\n          var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n          var href = hrefParts.url;\r\n          var self = this;\r\n          return new Promise(function (resolve, reject) {\r\n              if (options.useFileCache && fileCache[href]) {\r\n                  try {\r\n                      var lessText = fileCache[href];\r\n                      return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                  }\r\n                  catch (e) {\r\n                      return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                  }\r\n              }\r\n              self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                  // per file cache\r\n                  fileCache[href] = data;\r\n                  // Use remote copy (re-parse)\r\n                  resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n              }, function doXHRError(status, url) {\r\n                  reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n              });\r\n          });\r\n      };\r\n      return FileManager;\r\n  }(AbstractFileManager));\r\n  var FM = (function (opts, log) {\r\n      options = opts;\r\n      logger$1 = log;\r\n      return FileManager;\r\n  });\n\n  // TODO: Add tests for browser @plugin\r\n  /**\r\n   * Browser Plugin Loader\r\n   */\r\n  var PluginLoader = /** @class */ (function (_super) {\r\n      __extends(PluginLoader, _super);\r\n      function PluginLoader(less) {\r\n          var _this = _super.call(this) || this;\r\n          _this.less = less;\r\n          return _this;\r\n          // Should we shim this.require for browser? Probably not?\r\n      }\r\n      PluginLoader.prototype.loadPlugin = function (filename, basePath, context, environment, fileManager) {\r\n          return new Promise(function (fulfill, reject) {\r\n              fileManager.loadFile(filename, basePath, context, environment)\r\n                  .then(fulfill).catch(reject);\r\n          });\r\n      };\r\n      return PluginLoader;\r\n  }(AbstractPluginLoader));\n\n  var LogListener = (function (less, options) {\r\n      var logLevel_debug = 4;\r\n      var logLevel_info = 3;\r\n      var logLevel_warn = 2;\r\n      var logLevel_error = 1;\r\n      // The amount of logging in the javascript console.\r\n      // 3 - Debug, information and errors\r\n      // 2 - Information and errors\r\n      // 1 - Errors\r\n      // 0 - None\r\n      // Defaults to 2\r\n      options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n      if (!options.loggers) {\r\n          options.loggers = [{\r\n                  debug: function (msg) {\r\n                      if (options.logLevel >= logLevel_debug) {\r\n                          console.log(msg);\r\n                      }\r\n                  },\r\n                  info: function (msg) {\r\n                      if (options.logLevel >= logLevel_info) {\r\n                          console.log(msg);\r\n                      }\r\n                  },\r\n                  warn: function (msg) {\r\n                      if (options.logLevel >= logLevel_warn) {\r\n                          console.warn(msg);\r\n                      }\r\n                  },\r\n                  error: function (msg) {\r\n                      if (options.logLevel >= logLevel_error) {\r\n                          console.error(msg);\r\n                      }\r\n                  }\r\n              }];\r\n      }\r\n      for (var i = 0; i < options.loggers.length; i++) {\r\n          less.logger.addListener(options.loggers[i]);\r\n      }\r\n  });\n\n  var ErrorReporting = (function (window, less, options) {\r\n      function errorHTML(e, rootHref) {\r\n          var id = \"less-error-message:\" + extractId(rootHref || '');\r\n          var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n          var elem = window.document.createElement('div');\r\n          var timer;\r\n          var content;\r\n          var errors = [];\r\n          var filename = e.filename || rootHref;\r\n          var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n          elem.id = id;\r\n          elem.className = 'less-error-message';\r\n          content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n              (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n          var errorline = function (e, i, classname) {\r\n              if (e.extract[i] !== undefined) {\r\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                      .replace(/\\{class\\}/, classname)\r\n                      .replace(/\\{content\\}/, e.extract[i]));\r\n              }\r\n          };\r\n          if (e.line) {\r\n              errorline(e, 0, '');\r\n              errorline(e, 1, 'line');\r\n              errorline(e, 2, '');\r\n              content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n          }\r\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n              content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n          }\r\n          elem.innerHTML = content;\r\n          // CSS for error messages\r\n          browser.createCSS(window.document, [\r\n              '.less-error-message ul, .less-error-message li {',\r\n              'list-style-type: none;',\r\n              'margin-right: 15px;',\r\n              'padding: 4px 0;',\r\n              'margin: 0;',\r\n              '}',\r\n              '.less-error-message label {',\r\n              'font-size: 12px;',\r\n              'margin-right: 15px;',\r\n              'padding: 4px 0;',\r\n              'color: #cc7777;',\r\n              '}',\r\n              '.less-error-message pre {',\r\n              'color: #dd6666;',\r\n              'padding: 4px 0;',\r\n              'margin: 0;',\r\n              'display: inline-block;',\r\n              '}',\r\n              '.less-error-message pre.line {',\r\n              'color: #ff0000;',\r\n              '}',\r\n              '.less-error-message h3 {',\r\n              'font-size: 20px;',\r\n              'font-weight: bold;',\r\n              'padding: 15px 0 5px 0;',\r\n              'margin: 0;',\r\n              '}',\r\n              '.less-error-message a {',\r\n              'color: #10a',\r\n              '}',\r\n              '.less-error-message .error {',\r\n              'color: red;',\r\n              'font-weight: bold;',\r\n              'padding-bottom: 2px;',\r\n              'border-bottom: 1px dashed red;',\r\n              '}'\r\n          ].join('\\n'), { title: 'error-message' });\r\n          elem.style.cssText = [\r\n              'font-family: Arial, sans-serif',\r\n              'border: 1px solid #e00',\r\n              'background-color: #eee',\r\n              'border-radius: 5px',\r\n              '-webkit-border-radius: 5px',\r\n              '-moz-border-radius: 5px',\r\n              'color: #e00',\r\n              'padding: 15px',\r\n              'margin-bottom: 15px'\r\n          ].join(';');\r\n          if (options.env === 'development') {\r\n              timer = setInterval(function () {\r\n                  var document = window.document;\r\n                  var body = document.body;\r\n                  if (body) {\r\n                      if (document.getElementById(id)) {\r\n                          body.replaceChild(elem, document.getElementById(id));\r\n                      }\r\n                      else {\r\n                          body.insertBefore(elem, body.firstChild);\r\n                      }\r\n                      clearInterval(timer);\r\n                  }\r\n              }, 10);\r\n          }\r\n      }\r\n      function removeErrorHTML(path) {\r\n          var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n          if (node) {\r\n              node.parentNode.removeChild(node);\r\n          }\r\n      }\r\n      function removeError(path) {\r\n          if (!options.errorReporting || options.errorReporting === 'html') {\r\n              removeErrorHTML(path);\r\n          }\r\n          else if (options.errorReporting === 'console') ;\r\n          else if (typeof options.errorReporting === 'function') {\r\n              options.errorReporting('remove', path);\r\n          }\r\n      }\r\n      function errorConsole(e, rootHref) {\r\n          var template = '{line} {content}';\r\n          var filename = e.filename || rootHref;\r\n          var errors = [];\r\n          var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n          var errorline = function (e, i, classname) {\r\n              if (e.extract[i] !== undefined) {\r\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                      .replace(/\\{class\\}/, classname)\r\n                      .replace(/\\{content\\}/, e.extract[i]));\r\n              }\r\n          };\r\n          if (e.line) {\r\n              errorline(e, 0, '');\r\n              errorline(e, 1, 'line');\r\n              errorline(e, 2, '');\r\n              content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n          }\r\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n              content += \"\\nStack Trace\\n\" + e.stack;\r\n          }\r\n          less.logger.error(content);\r\n      }\r\n      function error(e, rootHref) {\r\n          if (!options.errorReporting || options.errorReporting === 'html') {\r\n              errorHTML(e, rootHref);\r\n          }\r\n          else if (options.errorReporting === 'console') {\r\n              errorConsole(e, rootHref);\r\n          }\r\n          else if (typeof options.errorReporting === 'function') {\r\n              options.errorReporting('add', e, rootHref);\r\n          }\r\n      }\r\n      return {\r\n          add: error,\r\n          remove: removeError\r\n      };\r\n  });\n\n  // Cache system is a bit outdated and could do with work\r\n  var Cache = (function (window, options, logger) {\r\n      var cache = null;\r\n      if (options.env !== 'development') {\r\n          try {\r\n              cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n          }\r\n          catch (_) { }\r\n      }\r\n      return {\r\n          setCSS: function (path, lastModified, modifyVars, styles) {\r\n              if (cache) {\r\n                  logger.info(\"saving \" + path + \" to cache.\");\r\n                  try {\r\n                      cache.setItem(path, styles);\r\n                      cache.setItem(path + \":timestamp\", lastModified);\r\n                      if (modifyVars) {\r\n                          cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                      }\r\n                  }\r\n                  catch (e) {\r\n                      // TODO - could do with adding more robust error handling\r\n                      logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                  }\r\n              }\r\n          },\r\n          getCSS: function (path, webInfo, modifyVars) {\r\n              var css = cache && cache.getItem(path);\r\n              var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n              var vars = cache && cache.getItem(path + \":vars\");\r\n              modifyVars = modifyVars || {};\r\n              vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n              if (timestamp && webInfo.lastModified &&\r\n                  (new Date(webInfo.lastModified).valueOf() ===\r\n                      new Date(timestamp).valueOf()) &&\r\n                  JSON.stringify(modifyVars) === vars) {\r\n                  // Use local copy\r\n                  return css;\r\n              }\r\n          }\r\n      };\r\n  });\n\n  var ImageSize = (function () {\r\n      function imageSize() {\r\n          throw {\r\n              type: 'Runtime',\r\n              message: 'Image size functions are not supported in browser version of less'\r\n          };\r\n      }\r\n      var imageFunctions = {\r\n          'image-size': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          },\r\n          'image-width': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          },\r\n          'image-height': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          }\r\n      };\r\n      functionRegistry.addMultiple(imageFunctions);\r\n  });\n\n  //\r\n  var root = (function (window, options) {\r\n      var document = window.document;\r\n      var less = lessRoot();\r\n      less.options = options;\r\n      var environment = less.environment;\r\n      var FileManager = FM(options, less.logger);\r\n      var fileManager = new FileManager();\r\n      environment.addFileManager(fileManager);\r\n      less.FileManager = FileManager;\r\n      less.PluginLoader = PluginLoader;\r\n      LogListener(less, options);\r\n      var errors = ErrorReporting(window, less, options);\r\n      var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n      ImageSize(less.environment);\r\n      // Setup user functions - Deprecate?\r\n      if (options.functions) {\r\n          less.functions.functionRegistry.addMultiple(options.functions);\r\n      }\r\n      var typePattern = /^text\\/(x-)?less$/;\r\n      function clone(obj) {\r\n          var cloned = {};\r\n          for (var prop in obj) {\r\n              if (obj.hasOwnProperty(prop)) {\r\n                  cloned[prop] = obj[prop];\r\n              }\r\n          }\r\n          return cloned;\r\n      }\r\n      // only really needed for phantom\r\n      function bind(func, thisArg) {\r\n          var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n          return function () {\r\n              var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n              return func.apply(thisArg, args);\r\n          };\r\n      }\r\n      function loadStyles(modifyVars) {\r\n          var styles = document.getElementsByTagName('style');\r\n          var style;\r\n          for (var i = 0; i < styles.length; i++) {\r\n              style = styles[i];\r\n              if (style.type.match(typePattern)) {\r\n                  var instanceOptions = clone(options);\r\n                  instanceOptions.modifyVars = modifyVars;\r\n                  var lessText = style.innerHTML || '';\r\n                  instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                  /* jshint loopfunc:true */\r\n                  // use closure to store current style\r\n                  less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                      if (e) {\r\n                          errors.add(e, 'inline');\r\n                      }\r\n                      else {\r\n                          style.type = 'text/css';\r\n                          if (style.styleSheet) {\r\n                              style.styleSheet.cssText = result.css;\r\n                          }\r\n                          else {\r\n                              style.innerHTML = result.css;\r\n                          }\r\n                      }\r\n                  }, null, style));\r\n              }\r\n          }\r\n      }\r\n      function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n          var instanceOptions = clone(options);\r\n          addDataAttr(instanceOptions, sheet);\r\n          instanceOptions.mime = sheet.type;\r\n          if (modifyVars) {\r\n              instanceOptions.modifyVars = modifyVars;\r\n          }\r\n          function loadInitialFileCallback(loadedFile) {\r\n              var data = loadedFile.contents;\r\n              var path = loadedFile.filename;\r\n              var webInfo = loadedFile.webInfo;\r\n              var newFileInfo = {\r\n                  currentDirectory: fileManager.getPath(path),\r\n                  filename: path,\r\n                  rootFilename: path,\r\n                  rewriteUrls: instanceOptions.rewriteUrls\r\n              };\r\n              newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n              newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n              if (webInfo) {\r\n                  webInfo.remaining = remaining;\r\n                  var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                  if (!reload && css) {\r\n                      webInfo.local = true;\r\n                      callback(null, css, data, sheet, webInfo, path);\r\n                      return;\r\n                  }\r\n              }\r\n              // TODO add tests around how this behaves when reloading\r\n              errors.remove(path);\r\n              instanceOptions.rootFileInfo = newFileInfo;\r\n              less.render(data, instanceOptions, function (e, result) {\r\n                  if (e) {\r\n                      e.href = path;\r\n                      callback(e);\r\n                  }\r\n                  else {\r\n                      cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                      callback(null, result.css, data, sheet, webInfo, path);\r\n                  }\r\n              });\r\n          }\r\n          fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n              .then(function (loadedFile) {\r\n              loadInitialFileCallback(loadedFile);\r\n          }).catch(function (err) {\r\n              console.log(err);\r\n              callback(err);\r\n          });\r\n      }\r\n      function loadStyleSheets(callback, reload, modifyVars) {\r\n          for (var i = 0; i < less.sheets.length; i++) {\r\n              loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n          }\r\n      }\r\n      function initRunningMode() {\r\n          if (less.env === 'development') {\r\n              less.watchTimer = setInterval(function () {\r\n                  if (less.watchMode) {\r\n                      fileManager.clearFileCache();\r\n                      loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                          if (e) {\r\n                              errors.add(e, e.href || sheet.href);\r\n                          }\r\n                          else if (css) {\r\n                              browser.createCSS(window.document, css, sheet);\r\n                          }\r\n                      });\r\n                  }\r\n              }, options.poll);\r\n          }\r\n      }\r\n      //\r\n      // Watch mode\r\n      //\r\n      less.watch = function () {\r\n          if (!less.watchMode) {\r\n              less.env = 'development';\r\n              initRunningMode();\r\n          }\r\n          this.watchMode = true;\r\n          return true;\r\n      };\r\n      less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n      //\r\n      // Synchronously get all <link> tags with the 'rel' attribute set to\r\n      // \"stylesheet/less\".\r\n      //\r\n      less.registerStylesheetsImmediately = function () {\r\n          var links = document.getElementsByTagName('link');\r\n          less.sheets = [];\r\n          for (var i = 0; i < links.length; i++) {\r\n              if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                  (links[i].type.match(typePattern)))) {\r\n                  less.sheets.push(links[i]);\r\n              }\r\n          }\r\n      };\r\n      //\r\n      // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n      // \"stylesheet/less\", returning a Promise.\r\n      //\r\n      less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n          less.registerStylesheetsImmediately();\r\n          resolve();\r\n      }); };\r\n      //\r\n      // With this function, it's possible to alter variables and re-render\r\n      // CSS without reloading less-files\r\n      //\r\n      less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n      less.refresh = function (reload, modifyVars, clearFileCache) {\r\n          if ((reload || clearFileCache) && clearFileCache !== false) {\r\n              fileManager.clearFileCache();\r\n          }\r\n          return new Promise(function (resolve, reject) {\r\n              var startTime;\r\n              var endTime;\r\n              var totalMilliseconds;\r\n              var remainingSheets;\r\n              startTime = endTime = new Date();\r\n              // Set counter for remaining unprocessed sheets\r\n              remainingSheets = less.sheets.length;\r\n              if (remainingSheets === 0) {\r\n                  endTime = new Date();\r\n                  totalMilliseconds = endTime - startTime;\r\n                  less.logger.info('Less has finished and no sheets were loaded.');\r\n                  resolve({\r\n                      startTime: startTime,\r\n                      endTime: endTime,\r\n                      totalMilliseconds: totalMilliseconds,\r\n                      sheets: less.sheets.length\r\n                  });\r\n              }\r\n              else {\r\n                  // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                  loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                      if (e) {\r\n                          errors.add(e, e.href || sheet.href);\r\n                          reject(e);\r\n                          return;\r\n                      }\r\n                      if (webInfo.local) {\r\n                          less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                      }\r\n                      else {\r\n                          less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                      }\r\n                      browser.createCSS(window.document, css, sheet);\r\n                      less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                      // Count completed sheet\r\n                      remainingSheets--;\r\n                      // Check if the last remaining sheet was processed and then call the promise\r\n                      if (remainingSheets === 0) {\r\n                          totalMilliseconds = new Date() - startTime;\r\n                          less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                          resolve({\r\n                              startTime: startTime,\r\n                              endTime: endTime,\r\n                              totalMilliseconds: totalMilliseconds,\r\n                              sheets: less.sheets.length\r\n                          });\r\n                      }\r\n                      endTime = new Date();\r\n                  }, reload, modifyVars);\r\n              }\r\n              loadStyles(modifyVars);\r\n          });\r\n      };\r\n      less.refreshStyles = loadStyles;\r\n      return less;\r\n  });\n\n  /**\r\n   * Kicks off less and compiles any stylesheets\r\n   * used in the browser distributed version of less\r\n   * to kick-start less using the browser api\r\n   */\r\n  var options$1 = defaultOptions();\r\n  if (window.less) {\r\n      for (var key in window.less) {\r\n          if (window.less.hasOwnProperty(key)) {\r\n              options$1[key] = window.less[key];\r\n          }\r\n      }\r\n  }\r\n  addDefaultOptions(window, options$1);\r\n  options$1.plugins = options$1.plugins || [];\r\n  if (window.LESS_PLUGINS) {\r\n      options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\r\n  }\r\n  var less = root(window, options$1);\r\n  window.less = less;\r\n  var css;\r\n  var head;\r\n  var style;\r\n  // Always restore page visibility\r\n  function resolveOrReject(data) {\r\n      if (data.filename) {\r\n          console.warn(data);\r\n      }\r\n      if (!options$1.async) {\r\n          head.removeChild(style);\r\n      }\r\n  }\r\n  if (options$1.onReady) {\r\n      if (/!watch/.test(window.location.hash)) {\r\n          less.watch();\r\n      }\r\n      // Simulate synchronous stylesheet loading by hiding page rendering\r\n      if (!options$1.async) {\r\n          css = 'body { display: none !important }';\r\n          head = document.head || document.getElementsByTagName('head')[0];\r\n          style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          if (style.styleSheet) {\r\n              style.styleSheet.cssText = css;\r\n          }\r\n          else {\r\n              style.appendChild(document.createTextNode(css));\r\n          }\r\n          head.appendChild(style);\r\n      }\r\n      less.registerStylesheetsImmediately();\r\n      less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n  }\n\n  return less;\n\n})));\n"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","BreadcrumbItem","_a","link","breadcrumbItem","customizePrefixCls","prefixCls","_a$separator","separator","children","overlay","dropdownProps","restProps","getPrefixCls","React","ConfigContext","_extends","className","concat","DropDown","placement","DownOutlined","__ANT_BREADCRUMB_ITEM","BreadcrumbSeparator","_ref","__ANT_BREADCRUMB_SEPARATOR","defaultItemRender","route","params","routes","paths","isLastItem","name","breadcrumbName","paramsKeys","keys","join","replace","RegExp","replacement","key","getBreadcrumbName","href","getPath","path","forEach","Breadcrumb","crumbs","style","_a$itemRender","itemRender","_a$params","_React$useContext","direction","map","push","Menu","child","Item","childPath","arguments","undefined","originalPaths","_toConsumableArray","addChildPath","toArray","element","index","devWarning","type","cloneElement","breadcrumbClassName","classNames","_defineProperty","Separator","marginDirection","split","wrap","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","marginBottom","paddingBottom","spaceSize","small","middle","large","props","_classNames","space","directionConfig","_props$size","size","align","_props$direction","_props$wrap","otherProps","useFlexGapSupport","_React$useMemo","Array","isArray","item","getNumberSize","_React$useMemo2","_slicedToArray","childNodes","keepEmpty","mergedAlign","cn","itemClassName","nodes","spaceContext","gapStyle","flexWrap","columnGap","rowGap","Provider","value","module","exports","defaultOptions","javascriptEnabled","depends","compress","lint","color","strictImports","insecure","rootpath","rewriteUrls","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","addDataAttr","options","tag","opt","dataset","JSON","parse","_","browser","createCSS","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","Error","currentScript","window","scripts","addDefaultOptions","isFileProtocol","test","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","exec","hash","useFileCache","onReady","relativeUrls","extendStatics","d","b","setPrototypeOf","__proto__","__extends","__","this","constructor","create","__spreadArrays","il","r","k","a","j","jl","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","self","defineProperty","get","fileInfo","getIndex","setParent","set","node","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","isEmpty","output","accept","visitor","visit","eval","_operate","op","fround","precision","numPrecision","Number","toFixed","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","info","compare","numericCompare","Color","rgb","originalForm","match","c","parseInt","alpha","clamp","v","max","min","toHex","round","toString","luma","g","pow","doNotCompress","colorFunction","args","toHSL","h","l","toRGB","splitcolor","operate","other","toHSV","toARGB","x","fromKeyword","keyword","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","STRICT_LEGACY","RewriteUrls","OFF","LOCAL","ALL","getType","payload","isPlainObject","getPrototypeOf","__spreadArrays$1","assignProp","carry","newVal","originalObject","includeNonenumerable","propType","enumerable","writable","configurable","copy","target","getOwnPropertyNames","reduce","includes","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","assign","copyOptions","opts","strictMath","merge","flattenArray","result","length_1","utils","freeze","anonymousFunc","LessError","fileContentMap","currentFilename","filename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","F","error","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","important","inline","variable","evalName","lastRule","prevMath","evaldValue","mathBypass","importantScope","importantResult","pop","makeImportant","debugInfo","ctx","lineSeparator","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","isPathRelative","isPathLocalRelative","makeRegistry","base","_data","addMultiple","functions","_this","getLocalFunctions","inherit","Eval","frames","inCalc","mathOn","enterCalc","calcStack","exitCalc","inParenthesis","parensStack","outOfParenthesis","isMathOn","pathRequiresRewrite","rewritePath","newPath","normalizePath","segment","segments","reverse","functionRegistry","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","_lookups","_variables","_properties","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","splice","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","isRuleset","prependRule","find","foundMixins","debugInfo$1","charsetRuleNodes","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","deriveSelector","deriveFrom","newPaths","concatenated","bind","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","_i","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","isLength","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","MATH$2","Expression","noSpacing","returnValue","parens","parensInOp","doubleParen","throwAwayComments","functionCaller","isValid","evalArgs","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","pluginManager","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","escapePath","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","variadic","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","tree","logger","msg","_fireEvent","warn","debug","addListener","listener","_listeners","removeListener","logFunction","environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","propName","environmentFunc","getFileManager","currentDirectory","isSync","getFileManagers","fileManager","addFileManager","clearFileManagers","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","registerPlugin","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","chunker","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","chunks","emitFrom","emitChunk","force","charCodeAt","fromCharCode","getParserInput","furthest","furthestPossibleErrorMessage","current","currentPos","saveStack","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","If","trueValue","falseValue","colorFunctions","boolean$1","clamp$1","hsla","origColor","hsl","number","scaled","rgba","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","argb","tint","shade","colorBlend","mode","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","dataUri","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","encodeURIComponent","getItemsFromNode","list","_SELF","values","range","step","from","to","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","f$1","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","svg","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","Functions","sourceMapOutput","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","sourceMapBuilder","SourceMapBuilder","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","parseTree","ParseTree","toCSSOptions","postProcessors","getPostProcessors","files","rootFilename","importManager","ImportManager","rootFileInfo","mime","queue","pluginLoader","Loader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","pm","Render","render","self_1","Promise","resolve","reject","PluginManager","installedPlugins","pluginCache","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getVisitors","PluginManagerFactory","newFactory","logger$1","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","lessRoot","environment$1","initial","Environment","ctor","api","fileCache","_super","doXHR","errback","xhr","XMLHttpRequest","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","LogListener","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","ErrorReporting","errorHTML","rootHref","timer","template","errors","filenameNoPath","errorline","classname","innerHTML","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","Cache","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","ImageSize","imageSize","imageFunctions","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","options$1","LESS_PLUGINS","resolveOrReject","pageLoadFinished","factory"],"sourceRoot":""}