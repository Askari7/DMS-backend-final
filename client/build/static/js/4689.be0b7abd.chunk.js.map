{"version":3,"file":"static/js/4689.be0b7abd.chunk.js","mappings":"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","sources":["../node_modules/less/dist/less.js"],"sourcesContent":["/**\n * Less - Leaner CSS v3.13.1\n * http://lesscss.org\n * \n * Copyright (c) 2009-2020, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n  // Export a new default each time\r\n  var defaultOptions = (function () { return ({\r\n      /* Inline Javascript - @plugin still allowed */\r\n      javascriptEnabled: false,\r\n      /* Outputs a makefile import dependency list to stdout. */\r\n      depends: false,\r\n      /* (DEPRECATED) Compress using less built-in compression.\r\n    * This does an okay job but does not utilise all the tricks of\r\n    * dedicated css compression. */\r\n      compress: false,\r\n      /* Runs the less parser and just reports errors without any output. */\r\n      lint: false,\r\n      /* Sets available include paths.\r\n    * If the file in an @import rule does not exist at that exact location,\r\n    * less will look for it at the location(s) passed to this option.\r\n    * You might use this for instance to specify a path to a library which\r\n    * you want to be referenced simply and relatively in the less files. */\r\n      paths: [],\r\n      /* color output in the terminal */\r\n      color: true,\r\n      /* The strictImports controls whether the compiler will allow an @import inside of either\r\n    * @media blocks or (a later addition) other selector blocks.\r\n    * See: https://github.com/less/less.js/issues/656 */\r\n      strictImports: false,\r\n      /* Allow Imports from Insecure HTTPS Hosts */\r\n      insecure: false,\r\n      /* Allows you to add a path to every generated import and url in your css.\r\n    * This does not affect less import statements that are processed, just ones\r\n    * that are left in the output css. */\r\n      rootpath: '',\r\n      /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n    * that references an image, exactly the same URL will be output in the css.\r\n    * This option allows you to re-write URL's in imported files so that the\r\n    * URL is always relative to the base imported file */\r\n      rewriteUrls: false,\r\n      /* How to process math\r\n    *   0 always           - eagerly try to solve all operations\r\n    *   1 parens-division  - require parens for division \"/\"\r\n    *   2 parens | strict  - require parens for all operations\r\n    *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n    */\r\n      math: 0,\r\n      /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n      strictUnits: false,\r\n      /* Effectively the declaration is put at the top of your base Less file,\r\n    * meaning it can be used but it also can be overridden if this variable\r\n    * is defined in the file. */\r\n      globalVars: null,\r\n      /* As opposed to the global variable option, this puts the declaration at the\r\n    * end of your base file, meaning it will override anything defined in your Less file. */\r\n      modifyVars: null,\r\n      /* This option allows you to specify a argument to go on to every URL.  */\r\n      urlArgs: ''\r\n  }); });\n\n  function extractId(href) {\r\n      return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n          .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n          .replace(/^\\//, '') // Remove root /\r\n          .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n          .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n          .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n  }\r\n  function addDataAttr(options, tag) {\r\n      for (var opt in tag.dataset) {\r\n          if (tag.dataset.hasOwnProperty(opt)) {\r\n              if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                  options[opt] = tag.dataset[opt];\r\n              }\r\n              else {\r\n                  try {\r\n                      options[opt] = JSON.parse(tag.dataset[opt]);\r\n                  }\r\n                  catch (_) { }\r\n              }\r\n          }\r\n      }\r\n  }\n\n  var browser = {\r\n      createCSS: function (document, styles, sheet) {\r\n          // Strip the query-string\r\n          var href = sheet.href || '';\r\n          // If there is no title set, use the filename, minus the extension\r\n          var id = \"less:\" + (sheet.title || extractId(href));\r\n          // If this has already been inserted into the DOM, we may need to replace it\r\n          var oldStyleNode = document.getElementById(id);\r\n          var keepOldStyleNode = false;\r\n          // Create a new stylesheet node for insertion or (if necessary) replacement\r\n          var styleNode = document.createElement('style');\r\n          styleNode.setAttribute('type', 'text/css');\r\n          if (sheet.media) {\r\n              styleNode.setAttribute('media', sheet.media);\r\n          }\r\n          styleNode.id = id;\r\n          if (!styleNode.styleSheet) {\r\n              styleNode.appendChild(document.createTextNode(styles));\r\n              // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n              keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                  oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n          }\r\n          var head = document.getElementsByTagName('head')[0];\r\n          // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n          // to replace oldStyleNode with an updated stylesheet\r\n          if (oldStyleNode === null || keepOldStyleNode === false) {\r\n              var nextEl = sheet && sheet.nextSibling || null;\r\n              if (nextEl) {\r\n                  nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n              }\r\n              else {\r\n                  head.appendChild(styleNode);\r\n              }\r\n          }\r\n          if (oldStyleNode && keepOldStyleNode === false) {\r\n              oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n          }\r\n          // For IE.\r\n          // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n          // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n          if (styleNode.styleSheet) {\r\n              try {\r\n                  styleNode.styleSheet.cssText = styles;\r\n              }\r\n              catch (e) {\r\n                  throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n              }\r\n          }\r\n      },\r\n      currentScript: function (window) {\r\n          var document = window.document;\r\n          return document.currentScript || (function () {\r\n              var scripts = document.getElementsByTagName('script');\r\n              return scripts[scripts.length - 1];\r\n          })();\r\n      }\r\n  };\n\n  var addDefaultOptions = (function (window, options) {\r\n      // use options from the current script tag data attribues\r\n      addDataAttr(options, browser.currentScript(window));\r\n      if (options.isFileProtocol === undefined) {\r\n          options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n      }\r\n      // Load styles asynchronously (default: false)\r\n      //\r\n      // This is set to `false` by default, so that the body\r\n      // doesn't start loading before the stylesheets are parsed.\r\n      // Setting this to `true` can result in flickering.\r\n      //\r\n      options.async = options.async || false;\r\n      options.fileAsync = options.fileAsync || false;\r\n      // Interval between watch polls\r\n      options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n      options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n          window.location.hostname == '0.0.0.0' ||\r\n          window.location.hostname == 'localhost' ||\r\n          (window.location.port &&\r\n              window.location.port.length > 0) ||\r\n          options.isFileProtocol ? 'development'\r\n          : 'production');\r\n      var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n      if (dumpLineNumbers) {\r\n          options.dumpLineNumbers = dumpLineNumbers[1];\r\n      }\r\n      if (options.useFileCache === undefined) {\r\n          options.useFileCache = true;\r\n      }\r\n      if (options.onReady === undefined) {\r\n          options.onReady = true;\r\n      }\r\n      if (options.relativeUrls) {\r\n          options.rewriteUrls = 'all';\r\n      }\r\n  });\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n\n  Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\r\n  /* global Reflect, Promise */\r\n  var extendStatics = function (d, b) {\r\n      extendStatics = Object.setPrototypeOf ||\r\n          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n          function (d, b) { for (var p in b)\r\n              if (b.hasOwnProperty(p))\r\n                  d[p] = b[p]; };\r\n      return extendStatics(d, b);\r\n  };\r\n  function __extends(d, b) {\r\n      extendStatics(d, b);\r\n      function __() { this.constructor = d; }\r\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n  }\r\n  function __spreadArrays() {\r\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++)\r\n          s += arguments[i].length;\r\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n              r[k] = a[j];\r\n      return r;\r\n  }\n\n  var colors = {\r\n      'aliceblue': '#f0f8ff',\r\n      'antiquewhite': '#faebd7',\r\n      'aqua': '#00ffff',\r\n      'aquamarine': '#7fffd4',\r\n      'azure': '#f0ffff',\r\n      'beige': '#f5f5dc',\r\n      'bisque': '#ffe4c4',\r\n      'black': '#000000',\r\n      'blanchedalmond': '#ffebcd',\r\n      'blue': '#0000ff',\r\n      'blueviolet': '#8a2be2',\r\n      'brown': '#a52a2a',\r\n      'burlywood': '#deb887',\r\n      'cadetblue': '#5f9ea0',\r\n      'chartreuse': '#7fff00',\r\n      'chocolate': '#d2691e',\r\n      'coral': '#ff7f50',\r\n      'cornflowerblue': '#6495ed',\r\n      'cornsilk': '#fff8dc',\r\n      'crimson': '#dc143c',\r\n      'cyan': '#00ffff',\r\n      'darkblue': '#00008b',\r\n      'darkcyan': '#008b8b',\r\n      'darkgoldenrod': '#b8860b',\r\n      'darkgray': '#a9a9a9',\r\n      'darkgrey': '#a9a9a9',\r\n      'darkgreen': '#006400',\r\n      'darkkhaki': '#bdb76b',\r\n      'darkmagenta': '#8b008b',\r\n      'darkolivegreen': '#556b2f',\r\n      'darkorange': '#ff8c00',\r\n      'darkorchid': '#9932cc',\r\n      'darkred': '#8b0000',\r\n      'darksalmon': '#e9967a',\r\n      'darkseagreen': '#8fbc8f',\r\n      'darkslateblue': '#483d8b',\r\n      'darkslategray': '#2f4f4f',\r\n      'darkslategrey': '#2f4f4f',\r\n      'darkturquoise': '#00ced1',\r\n      'darkviolet': '#9400d3',\r\n      'deeppink': '#ff1493',\r\n      'deepskyblue': '#00bfff',\r\n      'dimgray': '#696969',\r\n      'dimgrey': '#696969',\r\n      'dodgerblue': '#1e90ff',\r\n      'firebrick': '#b22222',\r\n      'floralwhite': '#fffaf0',\r\n      'forestgreen': '#228b22',\r\n      'fuchsia': '#ff00ff',\r\n      'gainsboro': '#dcdcdc',\r\n      'ghostwhite': '#f8f8ff',\r\n      'gold': '#ffd700',\r\n      'goldenrod': '#daa520',\r\n      'gray': '#808080',\r\n      'grey': '#808080',\r\n      'green': '#008000',\r\n      'greenyellow': '#adff2f',\r\n      'honeydew': '#f0fff0',\r\n      'hotpink': '#ff69b4',\r\n      'indianred': '#cd5c5c',\r\n      'indigo': '#4b0082',\r\n      'ivory': '#fffff0',\r\n      'khaki': '#f0e68c',\r\n      'lavender': '#e6e6fa',\r\n      'lavenderblush': '#fff0f5',\r\n      'lawngreen': '#7cfc00',\r\n      'lemonchiffon': '#fffacd',\r\n      'lightblue': '#add8e6',\r\n      'lightcoral': '#f08080',\r\n      'lightcyan': '#e0ffff',\r\n      'lightgoldenrodyellow': '#fafad2',\r\n      'lightgray': '#d3d3d3',\r\n      'lightgrey': '#d3d3d3',\r\n      'lightgreen': '#90ee90',\r\n      'lightpink': '#ffb6c1',\r\n      'lightsalmon': '#ffa07a',\r\n      'lightseagreen': '#20b2aa',\r\n      'lightskyblue': '#87cefa',\r\n      'lightslategray': '#778899',\r\n      'lightslategrey': '#778899',\r\n      'lightsteelblue': '#b0c4de',\r\n      'lightyellow': '#ffffe0',\r\n      'lime': '#00ff00',\r\n      'limegreen': '#32cd32',\r\n      'linen': '#faf0e6',\r\n      'magenta': '#ff00ff',\r\n      'maroon': '#800000',\r\n      'mediumaquamarine': '#66cdaa',\r\n      'mediumblue': '#0000cd',\r\n      'mediumorchid': '#ba55d3',\r\n      'mediumpurple': '#9370d8',\r\n      'mediumseagreen': '#3cb371',\r\n      'mediumslateblue': '#7b68ee',\r\n      'mediumspringgreen': '#00fa9a',\r\n      'mediumturquoise': '#48d1cc',\r\n      'mediumvioletred': '#c71585',\r\n      'midnightblue': '#191970',\r\n      'mintcream': '#f5fffa',\r\n      'mistyrose': '#ffe4e1',\r\n      'moccasin': '#ffe4b5',\r\n      'navajowhite': '#ffdead',\r\n      'navy': '#000080',\r\n      'oldlace': '#fdf5e6',\r\n      'olive': '#808000',\r\n      'olivedrab': '#6b8e23',\r\n      'orange': '#ffa500',\r\n      'orangered': '#ff4500',\r\n      'orchid': '#da70d6',\r\n      'palegoldenrod': '#eee8aa',\r\n      'palegreen': '#98fb98',\r\n      'paleturquoise': '#afeeee',\r\n      'palevioletred': '#d87093',\r\n      'papayawhip': '#ffefd5',\r\n      'peachpuff': '#ffdab9',\r\n      'peru': '#cd853f',\r\n      'pink': '#ffc0cb',\r\n      'plum': '#dda0dd',\r\n      'powderblue': '#b0e0e6',\r\n      'purple': '#800080',\r\n      'rebeccapurple': '#663399',\r\n      'red': '#ff0000',\r\n      'rosybrown': '#bc8f8f',\r\n      'royalblue': '#4169e1',\r\n      'saddlebrown': '#8b4513',\r\n      'salmon': '#fa8072',\r\n      'sandybrown': '#f4a460',\r\n      'seagreen': '#2e8b57',\r\n      'seashell': '#fff5ee',\r\n      'sienna': '#a0522d',\r\n      'silver': '#c0c0c0',\r\n      'skyblue': '#87ceeb',\r\n      'slateblue': '#6a5acd',\r\n      'slategray': '#708090',\r\n      'slategrey': '#708090',\r\n      'snow': '#fffafa',\r\n      'springgreen': '#00ff7f',\r\n      'steelblue': '#4682b4',\r\n      'tan': '#d2b48c',\r\n      'teal': '#008080',\r\n      'thistle': '#d8bfd8',\r\n      'tomato': '#ff6347',\r\n      'turquoise': '#40e0d0',\r\n      'violet': '#ee82ee',\r\n      'wheat': '#f5deb3',\r\n      'white': '#ffffff',\r\n      'whitesmoke': '#f5f5f5',\r\n      'yellow': '#ffff00',\r\n      'yellowgreen': '#9acd32'\r\n  };\n\n  var unitConversions = {\r\n      length: {\r\n          'm': 1,\r\n          'cm': 0.01,\r\n          'mm': 0.001,\r\n          'in': 0.0254,\r\n          'px': 0.0254 / 96,\r\n          'pt': 0.0254 / 72,\r\n          'pc': 0.0254 / 72 * 12\r\n      },\r\n      duration: {\r\n          's': 1,\r\n          'ms': 0.001\r\n      },\r\n      angle: {\r\n          'rad': 1 / (2 * Math.PI),\r\n          'deg': 1 / 360,\r\n          'grad': 1 / 400,\r\n          'turn': 1\r\n      }\r\n  };\n\n  var data = { colors: colors, unitConversions: unitConversions };\n\n  /**\r\n   * The reason why Node is a class and other nodes simply do not extend\r\n   * from Node (since we're transpiling) is due to this issue:\r\n   *\r\n   * https://github.com/less/less.js/issues/3434\r\n   */\r\n  var Node = /** @class */ (function () {\r\n      function Node() {\r\n          this.parent = null;\r\n          this.visibilityBlocks = undefined;\r\n          this.nodeVisible = undefined;\r\n          this.rootNode = null;\r\n          this.parsed = null;\r\n          var self = this;\r\n          Object.defineProperty(this, 'currentFileInfo', {\r\n              get: function () { return self.fileInfo(); }\r\n          });\r\n          Object.defineProperty(this, 'index', {\r\n              get: function () { return self.getIndex(); }\r\n          });\r\n      }\r\n      Node.prototype.setParent = function (nodes, parent) {\r\n          function set(node) {\r\n              if (node && node instanceof Node) {\r\n                  node.parent = parent;\r\n              }\r\n          }\r\n          if (Array.isArray(nodes)) {\r\n              nodes.forEach(set);\r\n          }\r\n          else {\r\n              set(nodes);\r\n          }\r\n      };\r\n      Node.prototype.getIndex = function () {\r\n          return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n      };\r\n      Node.prototype.fileInfo = function () {\r\n          return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n      };\r\n      Node.prototype.isRulesetLike = function () {\r\n          return false;\r\n      };\r\n      Node.prototype.toCSS = function (context) {\r\n          var strs = [];\r\n          this.genCSS(context, {\r\n              add: function (chunk, fileInfo, index) {\r\n                  strs.push(chunk);\r\n              },\r\n              isEmpty: function () {\r\n                  return strs.length === 0;\r\n              }\r\n          });\r\n          return strs.join('');\r\n      };\r\n      Node.prototype.genCSS = function (context, output) {\r\n          output.add(this.value);\r\n      };\r\n      Node.prototype.accept = function (visitor) {\r\n          this.value = visitor.visit(this.value);\r\n      };\r\n      Node.prototype.eval = function () { return this; };\r\n      Node.prototype._operate = function (context, op, a, b) {\r\n          switch (op) {\r\n              case '+': return a + b;\r\n              case '-': return a - b;\r\n              case '*': return a * b;\r\n              case '/': return a / b;\r\n          }\r\n      };\r\n      Node.prototype.fround = function (context, value) {\r\n          var precision = context && context.numPrecision;\r\n          // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n          return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n      };\r\n      // Returns true if this node represents root of ast imported by reference\r\n      Node.prototype.blocksVisibility = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          return this.visibilityBlocks !== 0;\r\n      };\r\n      Node.prototype.addVisibilityBlock = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          this.visibilityBlocks = this.visibilityBlocks + 1;\r\n      };\r\n      Node.prototype.removeVisibilityBlock = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          this.visibilityBlocks = this.visibilityBlocks - 1;\r\n      };\r\n      // Turns on node visibility - if called node will be shown in output regardless\r\n      // of whether it comes from import by reference or not\r\n      Node.prototype.ensureVisibility = function () {\r\n          this.nodeVisible = true;\r\n      };\r\n      // Turns off node visibility - if called node will NOT be shown in output regardless\r\n      // of whether it comes from import by reference or not\r\n      Node.prototype.ensureInvisibility = function () {\r\n          this.nodeVisible = false;\r\n      };\r\n      // return values:\r\n      // false - the node must not be visible\r\n      // true - the node must be visible\r\n      // undefined or null - the node has the same visibility as its parent\r\n      Node.prototype.isVisible = function () {\r\n          return this.nodeVisible;\r\n      };\r\n      Node.prototype.visibilityInfo = function () {\r\n          return {\r\n              visibilityBlocks: this.visibilityBlocks,\r\n              nodeVisible: this.nodeVisible\r\n          };\r\n      };\r\n      Node.prototype.copyVisibilityInfo = function (info) {\r\n          if (!info) {\r\n              return;\r\n          }\r\n          this.visibilityBlocks = info.visibilityBlocks;\r\n          this.nodeVisible = info.nodeVisible;\r\n      };\r\n      return Node;\r\n  }());\r\n  Node.compare = function (a, b) {\r\n      /* returns:\r\n       -1: a < b\r\n       0: a = b\r\n       1: a > b\r\n       and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n      if ((a.compare) &&\r\n          // for \"symmetric results\" force toCSS-based comparison\r\n          // of Quoted or Anonymous if either value is one of those\r\n          !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n          return a.compare(b);\r\n      }\r\n      else if (b.compare) {\r\n          return -b.compare(a);\r\n      }\r\n      else if (a.type !== b.type) {\r\n          return undefined;\r\n      }\r\n      a = a.value;\r\n      b = b.value;\r\n      if (!Array.isArray(a)) {\r\n          return a === b ? 0 : undefined;\r\n      }\r\n      if (a.length !== b.length) {\r\n          return undefined;\r\n      }\r\n      for (var i = 0; i < a.length; i++) {\r\n          if (Node.compare(a[i], b[i]) !== 0) {\r\n              return undefined;\r\n          }\r\n      }\r\n      return 0;\r\n  };\r\n  Node.numericCompare = function (a, b) { return a < b ? -1\r\n      : a === b ? 0\r\n          : a > b ? 1 : undefined; };\n\n  //\r\n  // RGB Colors - #ff0014, #eee\r\n  //\r\n  var Color = function (rgb, a, originalForm) {\r\n      var self = this;\r\n      //\r\n      // The end goal here, is to parse the arguments\r\n      // into an integer triplet, such as `128, 255, 0`\r\n      //\r\n      // This facilitates operations and conversions.\r\n      //\r\n      if (Array.isArray(rgb)) {\r\n          this.rgb = rgb;\r\n      }\r\n      else if (rgb.length >= 6) {\r\n          this.rgb = [];\r\n          rgb.match(/.{2}/g).map(function (c, i) {\r\n              if (i < 3) {\r\n                  self.rgb.push(parseInt(c, 16));\r\n              }\r\n              else {\r\n                  self.alpha = (parseInt(c, 16)) / 255;\r\n              }\r\n          });\r\n      }\r\n      else {\r\n          this.rgb = [];\r\n          rgb.split('').map(function (c, i) {\r\n              if (i < 3) {\r\n                  self.rgb.push(parseInt(c + c, 16));\r\n              }\r\n              else {\r\n                  self.alpha = (parseInt(c + c, 16)) / 255;\r\n              }\r\n          });\r\n      }\r\n      this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n      if (typeof originalForm !== 'undefined') {\r\n          this.value = originalForm;\r\n      }\r\n  };\r\n  Color.prototype = new Node();\r\n  Color.prototype.luma = function () {\r\n      var r = this.rgb[0] / 255;\r\n      var g = this.rgb[1] / 255;\r\n      var b = this.rgb[2] / 255;\r\n      r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n      g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n      b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n      return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n  };\r\n  Color.prototype.genCSS = function (context, output) {\r\n      output.add(this.toCSS(context));\r\n  };\r\n  Color.prototype.toCSS = function (context, doNotCompress) {\r\n      var compress = context && context.compress && !doNotCompress;\r\n      var color;\r\n      var alpha;\r\n      var colorFunction;\r\n      var args = [];\r\n      // `value` is set if this color was originally\r\n      // converted from a named color string so we need\r\n      // to respect this and try to output named color too.\r\n      alpha = this.fround(context, this.alpha);\r\n      if (this.value) {\r\n          if (this.value.indexOf('rgb') === 0) {\r\n              if (alpha < 1) {\r\n                  colorFunction = 'rgba';\r\n              }\r\n          }\r\n          else if (this.value.indexOf('hsl') === 0) {\r\n              if (alpha < 1) {\r\n                  colorFunction = 'hsla';\r\n              }\r\n              else {\r\n                  colorFunction = 'hsl';\r\n              }\r\n          }\r\n          else {\r\n              return this.value;\r\n          }\r\n      }\r\n      else {\r\n          if (alpha < 1) {\r\n              colorFunction = 'rgba';\r\n          }\r\n      }\r\n      switch (colorFunction) {\r\n          case 'rgba':\r\n              args = this.rgb.map(function (c) { return clamp(Math.round(c), 255); }).concat(clamp(alpha, 1));\r\n              break;\r\n          case 'hsla':\r\n              args.push(clamp(alpha, 1));\r\n          case 'hsl':\r\n              color = this.toHSL();\r\n              args = [\r\n                  this.fround(context, color.h),\r\n                  this.fround(context, color.s * 100) + \"%\",\r\n                  this.fround(context, color.l * 100) + \"%\"\r\n              ].concat(args);\r\n      }\r\n      if (colorFunction) {\r\n          // Values are capped between `0` and `255`, rounded and zero-padded.\r\n          return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n      }\r\n      color = this.toRGB();\r\n      if (compress) {\r\n          var splitcolor = color.split('');\r\n          // Convert color to short format\r\n          if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n              color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n          }\r\n      }\r\n      return color;\r\n  };\r\n  //\r\n  // Operations have to be done per-channel, if not,\r\n  // channels will spill onto each other. Once we have\r\n  // our result, in the form of an integer triplet,\r\n  // we create a new Color node to hold the result.\r\n  //\r\n  Color.prototype.operate = function (context, op, other) {\r\n      var rgb = new Array(3);\r\n      var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n      for (var c = 0; c < 3; c++) {\r\n          rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n      }\r\n      return new Color(rgb, alpha);\r\n  };\r\n  Color.prototype.toRGB = function () {\r\n      return toHex(this.rgb);\r\n  };\r\n  Color.prototype.toHSL = function () {\r\n      var r = this.rgb[0] / 255;\r\n      var g = this.rgb[1] / 255;\r\n      var b = this.rgb[2] / 255;\r\n      var a = this.alpha;\r\n      var max = Math.max(r, g, b);\r\n      var min = Math.min(r, g, b);\r\n      var h;\r\n      var s;\r\n      var l = (max + min) / 2;\r\n      var d = max - min;\r\n      if (max === min) {\r\n          h = s = 0;\r\n      }\r\n      else {\r\n          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n          switch (max) {\r\n              case r:\r\n                  h = (g - b) / d + (g < b ? 6 : 0);\r\n                  break;\r\n              case g:\r\n                  h = (b - r) / d + 2;\r\n                  break;\r\n              case b:\r\n                  h = (r - g) / d + 4;\r\n                  break;\r\n          }\r\n          h /= 6;\r\n      }\r\n      return { h: h * 360, s: s, l: l, a: a };\r\n  };\r\n  // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n  Color.prototype.toHSV = function () {\r\n      var r = this.rgb[0] / 255;\r\n      var g = this.rgb[1] / 255;\r\n      var b = this.rgb[2] / 255;\r\n      var a = this.alpha;\r\n      var max = Math.max(r, g, b);\r\n      var min = Math.min(r, g, b);\r\n      var h;\r\n      var s;\r\n      var v = max;\r\n      var d = max - min;\r\n      if (max === 0) {\r\n          s = 0;\r\n      }\r\n      else {\r\n          s = d / max;\r\n      }\r\n      if (max === min) {\r\n          h = 0;\r\n      }\r\n      else {\r\n          switch (max) {\r\n              case r:\r\n                  h = (g - b) / d + (g < b ? 6 : 0);\r\n                  break;\r\n              case g:\r\n                  h = (b - r) / d + 2;\r\n                  break;\r\n              case b:\r\n                  h = (r - g) / d + 4;\r\n                  break;\r\n          }\r\n          h /= 6;\r\n      }\r\n      return { h: h * 360, s: s, v: v, a: a };\r\n  };\r\n  Color.prototype.toARGB = function () {\r\n      return toHex([this.alpha * 255].concat(this.rgb));\r\n  };\r\n  Color.prototype.compare = function (x) {\r\n      return (x.rgb &&\r\n          x.rgb[0] === this.rgb[0] &&\r\n          x.rgb[1] === this.rgb[1] &&\r\n          x.rgb[2] === this.rgb[2] &&\r\n          x.alpha === this.alpha) ? 0 : undefined;\r\n  };\r\n  Color.prototype.type = 'Color';\r\n  function clamp(v, max) {\r\n      return Math.min(Math.max(v, 0), max);\r\n  }\r\n  function toHex(v) {\r\n      return \"#\" + v.map(function (c) {\r\n          c = clamp(Math.round(c), 255);\r\n          return (c < 16 ? '0' : '') + c.toString(16);\r\n      }).join('');\r\n  }\r\n  Color.fromKeyword = function (keyword) {\r\n      var c;\r\n      var key = keyword.toLowerCase();\r\n      if (colors.hasOwnProperty(key)) {\r\n          c = new Color(colors[key].slice(1));\r\n      }\r\n      else if (key === 'transparent') {\r\n          c = new Color([0, 0, 0], 0);\r\n      }\r\n      if (c) {\r\n          c.value = keyword;\r\n          return c;\r\n      }\r\n  };\n\n  var Paren = function (node) {\r\n      this.value = node;\r\n  };\r\n  Paren.prototype = new Node();\r\n  Paren.prototype.genCSS = function (context, output) {\r\n      output.add('(');\r\n      this.value.genCSS(context, output);\r\n      output.add(')');\r\n  };\r\n  Paren.prototype.eval = function (context) {\r\n      return new Paren(this.value.eval(context));\r\n  };\r\n  Paren.prototype.type = 'Paren';\n\n  var _noSpaceCombinators = {\r\n      '': true,\r\n      ' ': true,\r\n      '|': true\r\n  };\r\n  var Combinator = function (value) {\r\n      if (value === ' ') {\r\n          this.value = ' ';\r\n          this.emptyOrWhitespace = true;\r\n      }\r\n      else {\r\n          this.value = value ? value.trim() : '';\r\n          this.emptyOrWhitespace = this.value === '';\r\n      }\r\n  };\r\n  Combinator.prototype = new Node();\r\n  Combinator.prototype.genCSS = function (context, output) {\r\n      var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n      output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n  };\r\n  Combinator.prototype.type = 'Combinator';\n\n  var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n      this.combinator = combinator instanceof Combinator ?\r\n          combinator : new Combinator(combinator);\r\n      if (typeof value === 'string') {\r\n          this.value = value.trim();\r\n      }\r\n      else if (value) {\r\n          this.value = value;\r\n      }\r\n      else {\r\n          this.value = '';\r\n      }\r\n      this.isVariable = isVariable;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.setParent(this.combinator, this);\r\n  };\r\n  Element.prototype = new Node();\r\n  Element.prototype.accept = function (visitor) {\r\n      var value = this.value;\r\n      this.combinator = visitor.visit(this.combinator);\r\n      if (typeof value === 'object') {\r\n          this.value = visitor.visit(value);\r\n      }\r\n  };\r\n  Element.prototype.eval = function (context) {\r\n      return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  Element.prototype.clone = function () {\r\n      return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  Element.prototype.genCSS = function (context, output) {\r\n      output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n  };\r\n  Element.prototype.toCSS = function (context) {\r\n      if (context === void 0) { context = {}; }\r\n      var value = this.value;\r\n      var firstSelector = context.firstSelector;\r\n      if (value instanceof Paren) {\r\n          // selector in parens should not be affected by outer selector\r\n          // flags (breaks only interpolated selectors - see #1973)\r\n          context.firstSelector = true;\r\n      }\r\n      value = value.toCSS ? value.toCSS(context) : value;\r\n      context.firstSelector = firstSelector;\r\n      if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n          return '';\r\n      }\r\n      else {\r\n          return this.combinator.toCSS(context) + value;\r\n      }\r\n  };\r\n  Element.prototype.type = 'Element';\n\n  var Math$1 = {\r\n      ALWAYS: 0,\r\n      PARENS_DIVISION: 1,\r\n      PARENS: 2,\r\n      STRICT_LEGACY: 3\r\n  };\r\n  var RewriteUrls = {\r\n      OFF: 0,\r\n      LOCAL: 1,\r\n      ALL: 2\r\n  };\n\n  /**\r\n   * Returns the object type of the given payload\r\n   *\r\n   * @param {*} payload\r\n   * @returns {string}\r\n   */\r\n  function getType(payload) {\r\n      return Object.prototype.toString.call(payload).slice(8, -1);\r\n  }\r\n  /**\r\n   * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n   *\r\n   * @param {*} payload\r\n   * @returns {payload is Record<string, any>}\r\n   */\r\n  function isPlainObject(payload) {\r\n      if (getType(payload) !== 'Object')\r\n          return false;\r\n      return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n  }\r\n  /**\r\n   * Returns whether the payload is an array\r\n   *\r\n   * @param {any} payload\r\n   * @returns {payload is any[]}\r\n   */\r\n  function isArray(payload) {\r\n      return getType(payload) === 'Array';\r\n  }\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\r\n  function __spreadArrays$1() {\r\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++)\r\n          s += arguments[i].length;\r\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n              r[k] = a[j];\r\n      return r;\r\n  }\r\n  function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n      var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n          ? 'enumerable'\r\n          : 'nonenumerable';\r\n      if (propType === 'enumerable')\r\n          carry[key] = newVal;\r\n      if (includeNonenumerable && propType === 'nonenumerable') {\r\n          Object.defineProperty(carry, key, {\r\n              value: newVal,\r\n              enumerable: false,\r\n              writable: true,\r\n              configurable: true,\r\n          });\r\n      }\r\n  }\r\n  /**\r\n   * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n   *\r\n   * @export\r\n   * @template T\r\n   * @param {T} target Target can be anything\r\n   * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n   * @returns {T} the target with replaced values\r\n   * @export\r\n   */\r\n  function copy(target, options) {\r\n      if (options === void 0) {\r\n          options = {};\r\n      }\r\n      if (isArray(target))\r\n          return target.map(function (i) { return copy(i, options); });\r\n      if (!isPlainObject(target))\r\n          return target;\r\n      var props = Object.getOwnPropertyNames(target);\r\n      var symbols = Object.getOwnPropertySymbols(target);\r\n      return __spreadArrays$1(props, symbols).reduce(function (carry, key) {\r\n          if (isArray(options.props) && !options.props.includes(key)) {\r\n              return carry;\r\n          }\r\n          var val = target[key];\r\n          var newVal = copy(val, options);\r\n          assignProp(carry, key, newVal, target, options.nonenumerable);\r\n          return carry;\r\n      }, {});\r\n  }\n\n  /* jshint proto: true */\r\n  function getLocation(index, inputStream) {\r\n      var n = index + 1;\r\n      var line = null;\r\n      var column = -1;\r\n      while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n          column++;\r\n      }\r\n      if (typeof index === 'number') {\r\n          line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n      }\r\n      return {\r\n          line: line,\r\n          column: column\r\n      };\r\n  }\r\n  function copyArray(arr) {\r\n      var i;\r\n      var length = arr.length;\r\n      var copy = new Array(length);\r\n      for (i = 0; i < length; i++) {\r\n          copy[i] = arr[i];\r\n      }\r\n      return copy;\r\n  }\r\n  function clone(obj) {\r\n      var cloned = {};\r\n      for (var prop in obj) {\r\n          if (obj.hasOwnProperty(prop)) {\r\n              cloned[prop] = obj[prop];\r\n          }\r\n      }\r\n      return cloned;\r\n  }\r\n  function defaults(obj1, obj2) {\r\n      var newObj = obj2 || {};\r\n      if (!obj2._defaults) {\r\n          newObj = {};\r\n          var defaults_1 = copy(obj1);\r\n          newObj._defaults = defaults_1;\r\n          var cloned = obj2 ? copy(obj2) : {};\r\n          Object.assign(newObj, defaults_1, cloned);\r\n      }\r\n      return newObj;\r\n  }\r\n  function copyOptions(obj1, obj2) {\r\n      if (obj2 && obj2._defaults) {\r\n          return obj2;\r\n      }\r\n      var opts = defaults(obj1, obj2);\r\n      if (opts.strictMath) {\r\n          opts.math = Math$1.STRICT_LEGACY;\r\n      }\r\n      // Back compat with changed relativeUrls option\r\n      if (opts.relativeUrls) {\r\n          opts.rewriteUrls = RewriteUrls.ALL;\r\n      }\r\n      if (typeof opts.math === 'string') {\r\n          switch (opts.math.toLowerCase()) {\r\n              case 'always':\r\n                  opts.math = Math$1.ALWAYS;\r\n                  break;\r\n              case 'parens-division':\r\n                  opts.math = Math$1.PARENS_DIVISION;\r\n                  break;\r\n              case 'strict':\r\n              case 'parens':\r\n                  opts.math = Math$1.PARENS;\r\n                  break;\r\n              case 'strict-legacy':\r\n                  opts.math = Math$1.STRICT_LEGACY;\r\n          }\r\n      }\r\n      if (typeof opts.rewriteUrls === 'string') {\r\n          switch (opts.rewriteUrls.toLowerCase()) {\r\n              case 'off':\r\n                  opts.rewriteUrls = RewriteUrls.OFF;\r\n                  break;\r\n              case 'local':\r\n                  opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                  break;\r\n              case 'all':\r\n                  opts.rewriteUrls = RewriteUrls.ALL;\r\n                  break;\r\n          }\r\n      }\r\n      return opts;\r\n  }\r\n  function merge(obj1, obj2) {\r\n      for (var prop in obj2) {\r\n          if (obj2.hasOwnProperty(prop)) {\r\n              obj1[prop] = obj2[prop];\r\n          }\r\n      }\r\n      return obj1;\r\n  }\r\n  function flattenArray(arr, result) {\r\n      if (result === void 0) { result = []; }\r\n      for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n          var value = arr[i];\r\n          if (Array.isArray(value)) {\r\n              flattenArray(value, result);\r\n          }\r\n          else {\r\n              if (value !== undefined) {\r\n                  result.push(value);\r\n              }\r\n          }\r\n      }\r\n      return result;\r\n  }\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getLocation: getLocation,\n    copyArray: copyArray,\n    clone: clone,\n    defaults: defaults,\n    copyOptions: copyOptions,\n    merge: merge,\n    flattenArray: flattenArray\n  });\n\n  var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n  /**\r\n   * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n   * Besides standard .message it keeps some additional data like a path to the file where the error\r\n   * occurred along with line and column numbers.\r\n   *\r\n   * @class\r\n   * @extends Error\r\n   * @type {module.LessError}\r\n   *\r\n   * @prop {string} type\r\n   * @prop {string} filename\r\n   * @prop {number} index\r\n   * @prop {number} line\r\n   * @prop {number} column\r\n   * @prop {number} callLine\r\n   * @prop {number} callExtract\r\n   * @prop {string[]} extract\r\n   *\r\n   * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n   * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n   * @param {string} [currentFilename]\r\n   */\r\n  var LessError = function LessError(e, fileContentMap, currentFilename) {\r\n      Error.call(this);\r\n      var filename = e.filename || currentFilename;\r\n      this.message = e.message;\r\n      this.stack = e.stack;\r\n      if (fileContentMap && filename) {\r\n          var input = fileContentMap.contents[filename];\r\n          var loc = getLocation(e.index, input);\r\n          var line = loc.line;\r\n          var col = loc.column;\r\n          var callLine = e.call && getLocation(e.call, input).line;\r\n          var lines = input ? input.split('\\n') : '';\r\n          this.type = e.type || 'Syntax';\r\n          this.filename = filename;\r\n          this.index = e.index;\r\n          this.line = typeof line === 'number' ? line + 1 : null;\r\n          this.column = col;\r\n          if (!this.line && this.stack) {\r\n              var found = this.stack.match(anonymousFunc);\r\n              /**\r\n               * We have to figure out how this environment stringifies anonymous functions\r\n               * so we can correctly map plugin errors.\r\n               *\r\n               * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n               * being present or not, so we inject dummy params.\r\n               */\r\n              var func = new Function('a', 'throw new Error()');\r\n              var lineAdjust = 0;\r\n              try {\r\n                  func();\r\n              }\r\n              catch (e) {\r\n                  var match = e.stack.match(anonymousFunc);\r\n                  var line_1 = parseInt(match[2]);\r\n                  lineAdjust = 1 - line_1;\r\n              }\r\n              if (found) {\r\n                  if (found[2]) {\r\n                      this.line = parseInt(found[2]) + lineAdjust;\r\n                  }\r\n                  if (found[3]) {\r\n                      this.column = parseInt(found[3]);\r\n                  }\r\n              }\r\n          }\r\n          this.callLine = callLine + 1;\r\n          this.callExtract = lines[callLine];\r\n          this.extract = [\r\n              lines[this.line - 2],\r\n              lines[this.line - 1],\r\n              lines[this.line]\r\n          ];\r\n      }\r\n  };\r\n  if (typeof Object.create === 'undefined') {\r\n      var F = function () { };\r\n      F.prototype = Error.prototype;\r\n      LessError.prototype = new F();\r\n  }\r\n  else {\r\n      LessError.prototype = Object.create(Error.prototype);\r\n  }\r\n  LessError.prototype.constructor = LessError;\r\n  /**\r\n   * An overridden version of the default Object.prototype.toString\r\n   * which uses additional information to create a helpful message.\r\n   *\r\n   * @param {Object} options\r\n   * @returns {string}\r\n   */\r\n  LessError.prototype.toString = function (options) {\r\n      if (options === void 0) { options = {}; }\r\n      var message = '';\r\n      var extract = this.extract || [];\r\n      var error = [];\r\n      var stylize = function (str) { return str; };\r\n      if (options.stylize) {\r\n          var type = typeof options.stylize;\r\n          if (type !== 'function') {\r\n              throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n          }\r\n          stylize = options.stylize;\r\n      }\r\n      if (this.line !== null) {\r\n          if (typeof extract[0] === 'string') {\r\n              error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n          }\r\n          if (typeof extract[1] === 'string') {\r\n              var errorTxt = this.line + \" \";\r\n              if (extract[1]) {\r\n                  errorTxt += extract[1].slice(0, this.column) +\r\n                      stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                          extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n              }\r\n              error.push(errorTxt);\r\n          }\r\n          if (typeof extract[2] === 'string') {\r\n              error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n          }\r\n          error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n      }\r\n      message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n      if (this.filename) {\r\n          message += stylize(' in ', 'red') + this.filename;\r\n      }\r\n      if (this.line) {\r\n          message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n      }\r\n      message += \"\\n\" + error;\r\n      if (this.callLine) {\r\n          message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n          message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n      }\r\n      return message;\r\n  };\n\n  var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n      this.extendList = extendList;\r\n      this.condition = condition;\r\n      this.evaldCondition = !condition;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.elements = this.getElements(elements);\r\n      this.mixinElements_ = undefined;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.setParent(this.elements, this);\r\n  };\r\n  Selector.prototype = new Node();\r\n  Selector.prototype.accept = function (visitor) {\r\n      if (this.elements) {\r\n          this.elements = visitor.visitArray(this.elements);\r\n      }\r\n      if (this.extendList) {\r\n          this.extendList = visitor.visitArray(this.extendList);\r\n      }\r\n      if (this.condition) {\r\n          this.condition = visitor.visit(this.condition);\r\n      }\r\n  };\r\n  Selector.prototype.createDerived = function (elements, extendList, evaldCondition) {\r\n      elements = this.getElements(elements);\r\n      var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n      newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n      newSelector.mediaEmpty = this.mediaEmpty;\r\n      return newSelector;\r\n  };\r\n  Selector.prototype.getElements = function (els) {\r\n      if (!els) {\r\n          return [new Element('', '&', false, this._index, this._fileInfo)];\r\n      }\r\n      if (typeof els === 'string') {\r\n          this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n              if (err) {\r\n                  throw new LessError({\r\n                      index: err.index,\r\n                      message: err.message\r\n                  }, this.parse.imports, this._fileInfo.filename);\r\n              }\r\n              els = result[0].elements;\r\n          });\r\n      }\r\n      return els;\r\n  };\r\n  Selector.prototype.createEmptySelectors = function () {\r\n      var el = new Element('', '&', false, this._index, this._fileInfo);\r\n      var sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n      sels[0].mediaEmpty = true;\r\n      return sels;\r\n  };\r\n  Selector.prototype.match = function (other) {\r\n      var elements = this.elements;\r\n      var len = elements.length;\r\n      var olen;\r\n      var i;\r\n      other = other.mixinElements();\r\n      olen = other.length;\r\n      if (olen === 0 || len < olen) {\r\n          return 0;\r\n      }\r\n      else {\r\n          for (i = 0; i < olen; i++) {\r\n              if (elements[i].value !== other[i]) {\r\n                  return 0;\r\n              }\r\n          }\r\n      }\r\n      return olen; // return number of matched elements\r\n  };\r\n  Selector.prototype.mixinElements = function () {\r\n      if (this.mixinElements_) {\r\n          return this.mixinElements_;\r\n      }\r\n      var elements = this.elements.map(function (v) { return v.combinator.value + (v.value.value || v.value); }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n      if (elements) {\r\n          if (elements[0] === '&') {\r\n              elements.shift();\r\n          }\r\n      }\r\n      else {\r\n          elements = [];\r\n      }\r\n      return (this.mixinElements_ = elements);\r\n  };\r\n  Selector.prototype.isJustParentSelector = function () {\r\n      return !this.mediaEmpty &&\r\n          this.elements.length === 1 &&\r\n          this.elements[0].value === '&' &&\r\n          (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n  };\r\n  Selector.prototype.eval = function (context) {\r\n      var evaldCondition = this.condition && this.condition.eval(context);\r\n      var elements = this.elements;\r\n      var extendList = this.extendList;\r\n      elements = elements && elements.map(function (e) { return e.eval(context); });\r\n      extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n      return this.createDerived(elements, extendList, evaldCondition);\r\n  };\r\n  Selector.prototype.genCSS = function (context, output) {\r\n      var i;\r\n      var element;\r\n      if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n          output.add(' ', this.fileInfo(), this.getIndex());\r\n      }\r\n      for (i = 0; i < this.elements.length; i++) {\r\n          element = this.elements[i];\r\n          element.genCSS(context, output);\r\n      }\r\n  };\r\n  Selector.prototype.getIsOutput = function () {\r\n      return this.evaldCondition;\r\n  };\r\n  Selector.prototype.type = 'Selector';\n\n  var Value = function (value) {\r\n      if (!value) {\r\n          throw new Error('Value requires an array argument');\r\n      }\r\n      if (!Array.isArray(value)) {\r\n          this.value = [value];\r\n      }\r\n      else {\r\n          this.value = value;\r\n      }\r\n  };\r\n  Value.prototype = new Node();\r\n  Value.prototype.accept = function (visitor) {\r\n      if (this.value) {\r\n          this.value = visitor.visitArray(this.value);\r\n      }\r\n  };\r\n  Value.prototype.eval = function (context) {\r\n      if (this.value.length === 1) {\r\n          return this.value[0].eval(context);\r\n      }\r\n      else {\r\n          return new Value(this.value.map(function (v) { return v.eval(context); }));\r\n      }\r\n  };\r\n  Value.prototype.genCSS = function (context, output) {\r\n      var i;\r\n      for (i = 0; i < this.value.length; i++) {\r\n          this.value[i].genCSS(context, output);\r\n          if (i + 1 < this.value.length) {\r\n              output.add((context && context.compress) ? ',' : ', ');\r\n          }\r\n      }\r\n  };\r\n  Value.prototype.type = 'Value';\n\n  var Keyword = function (value) {\r\n      this.value = value;\r\n  };\r\n  Keyword.prototype = new Node();\r\n  Keyword.prototype.genCSS = function (context, output) {\r\n      if (this.value === '%') {\r\n          throw { type: 'Syntax', message: 'Invalid % without number' };\r\n      }\r\n      output.add(this.value);\r\n  };\r\n  Keyword.prototype.type = 'Keyword';\r\n  Keyword.True = new Keyword('true');\r\n  Keyword.False = new Keyword('false');\n\n  var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n      this.value = value;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.mapLines = mapLines;\r\n      this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n      this.allowRoot = true;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n  };\r\n  Anonymous.prototype = new Node();\r\n  Anonymous.prototype.eval = function () {\r\n      return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n  };\r\n  Anonymous.prototype.compare = function (other) {\r\n      return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n  };\r\n  Anonymous.prototype.isRulesetLike = function () {\r\n      return this.rulesetLike;\r\n  };\r\n  Anonymous.prototype.genCSS = function (context, output) {\r\n      this.nodeVisible = Boolean(this.value);\r\n      if (this.nodeVisible) {\r\n          output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n      }\r\n  };\r\n  Anonymous.prototype.type = 'Anonymous';\n\n  var MATH = Math$1;\r\n  var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n      this.name = name;\r\n      this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n      this.important = important ? \" \" + important.trim() : '';\r\n      this.merge = merge;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.inline = inline || false;\r\n      this.variable = (variable !== undefined) ? variable\r\n          : (name.charAt && (name.charAt(0) === '@'));\r\n      this.allowRoot = true;\r\n      this.setParent(this.value, this);\r\n  };\r\n  Declaration.prototype = new Node();\r\n  Declaration.prototype.genCSS = function (context, output) {\r\n      output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n      try {\r\n          this.value.genCSS(context, output);\r\n      }\r\n      catch (e) {\r\n          e.index = this._index;\r\n          e.filename = this._fileInfo.filename;\r\n          throw e;\r\n      }\r\n      output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n  };\r\n  Declaration.prototype.eval = function (context) {\r\n      var mathBypass = false;\r\n      var prevMath;\r\n      var name = this.name;\r\n      var evaldValue;\r\n      var variable = this.variable;\r\n      if (typeof name !== 'string') {\r\n          // expand 'primitive' name directly to get\r\n          // things faster (~10% for benchmark.less):\r\n          name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n              name[0].value : evalName(context, name);\r\n          variable = false; // never treat expanded interpolation as new variable name\r\n      }\r\n      // @todo remove when parens-division is default\r\n      if (name === 'font' && context.math === MATH.ALWAYS) {\r\n          mathBypass = true;\r\n          prevMath = context.math;\r\n          context.math = MATH.PARENS_DIVISION;\r\n      }\r\n      try {\r\n          context.importantScope.push({});\r\n          evaldValue = this.value.eval(context);\r\n          if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n              throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                  index: this.getIndex(), filename: this.fileInfo().filename };\r\n          }\r\n          var important = this.important;\r\n          var importantResult = context.importantScope.pop();\r\n          if (!important && importantResult.important) {\r\n              important = importantResult.important;\r\n          }\r\n          return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n      }\r\n      catch (e) {\r\n          if (typeof e.index !== 'number') {\r\n              e.index = this.getIndex();\r\n              e.filename = this.fileInfo().filename;\r\n          }\r\n          throw e;\r\n      }\r\n      finally {\r\n          if (mathBypass) {\r\n              context.math = prevMath;\r\n          }\r\n      }\r\n  };\r\n  Declaration.prototype.makeImportant = function () {\r\n      return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n  };\r\n  function evalName(context, name) {\r\n      var value = '';\r\n      var i;\r\n      var n = name.length;\r\n      var output = { add: function (s) { value += s; } };\r\n      for (i = 0; i < n; i++) {\r\n          name[i].eval(context).genCSS(context, output);\r\n      }\r\n      return value;\r\n  }\r\n  Declaration.prototype.type = 'Declaration';\n\n  var debugInfo = function (context, ctx, lineSeparator) {\r\n      var result = '';\r\n      if (context.dumpLineNumbers && !context.compress) {\r\n          switch (context.dumpLineNumbers) {\r\n              case 'comments':\r\n                  result = debugInfo.asComment(ctx);\r\n                  break;\r\n              case 'mediaquery':\r\n                  result = debugInfo.asMediaQuery(ctx);\r\n                  break;\r\n              case 'all':\r\n                  result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\r\n                  break;\r\n          }\r\n      }\r\n      return result;\r\n  };\r\n  debugInfo.asComment = function (ctx) { return ctx.debugInfo ? \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\" : ''; };\r\n  debugInfo.asMediaQuery = function (ctx) {\r\n      if (!ctx.debugInfo) {\r\n          return '';\r\n      }\r\n      var filenameWithProtocol = ctx.debugInfo.fileName;\r\n      if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n          filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n      }\r\n      return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n          if (a == '\\\\') {\r\n              a = '\\/';\r\n          }\r\n          return \"\\\\\" + a;\r\n      }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n  };\n\n  var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n      this.value = value;\r\n      this.isLineComment = isLineComment;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.allowRoot = true;\r\n  };\r\n  Comment.prototype = new Node();\r\n  Comment.prototype.genCSS = function (context, output) {\r\n      if (this.debugInfo) {\r\n          output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n      }\r\n      output.add(this.value);\r\n  };\r\n  Comment.prototype.isSilent = function (context) {\r\n      var isCompressed = context.compress && this.value[2] !== '!';\r\n      return this.isLineComment || isCompressed;\r\n  };\r\n  Comment.prototype.type = 'Comment';\n\n  var contexts = {};\r\n  var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n      if (!original) {\r\n          return;\r\n      }\r\n      for (var i = 0; i < propertiesToCopy.length; i++) {\r\n          if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n              destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n          }\r\n      }\r\n  };\r\n  /*\r\n   parse is used whilst parsing\r\n   */\r\n  var parseCopyProperties = [\r\n      // options\r\n      'paths',\r\n      'rewriteUrls',\r\n      'rootpath',\r\n      'strictImports',\r\n      'insecure',\r\n      'dumpLineNumbers',\r\n      'compress',\r\n      'syncImport',\r\n      'chunkInput',\r\n      'mime',\r\n      'useFileCache',\r\n      // context\r\n      'processImports',\r\n      // Used by the import manager to stop multiple import visitors being created.\r\n      'pluginManager' // Used as the plugin manager for the session\r\n  ];\r\n  contexts.Parse = function (options) {\r\n      copyFromOriginal(options, this, parseCopyProperties);\r\n      if (typeof this.paths === 'string') {\r\n          this.paths = [this.paths];\r\n      }\r\n  };\r\n  var evalCopyProperties = [\r\n      'paths',\r\n      'compress',\r\n      'math',\r\n      'strictUnits',\r\n      'sourceMap',\r\n      'importMultiple',\r\n      'urlArgs',\r\n      'javascriptEnabled',\r\n      'pluginManager',\r\n      'importantScope',\r\n      'rewriteUrls' // option - whether to adjust URL's to be relative\r\n  ];\r\n  function isPathRelative(path) {\r\n      return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n  }\r\n  function isPathLocalRelative(path) {\r\n      return path.charAt(0) === '.';\r\n  }\r\n  contexts.Eval = /** @class */ (function () {\r\n      function Eval(options, frames) {\r\n          copyFromOriginal(options, this, evalCopyProperties);\r\n          if (typeof this.paths === 'string') {\r\n              this.paths = [this.paths];\r\n          }\r\n          this.frames = frames || [];\r\n          this.importantScope = this.importantScope || [];\r\n          this.inCalc = false;\r\n          this.mathOn = true;\r\n      }\r\n      Eval.prototype.enterCalc = function () {\r\n          if (!this.calcStack) {\r\n              this.calcStack = [];\r\n          }\r\n          this.calcStack.push(true);\r\n          this.inCalc = true;\r\n      };\r\n      Eval.prototype.exitCalc = function () {\r\n          this.calcStack.pop();\r\n          if (!this.calcStack.length) {\r\n              this.inCalc = false;\r\n          }\r\n      };\r\n      Eval.prototype.inParenthesis = function () {\r\n          if (!this.parensStack) {\r\n              this.parensStack = [];\r\n          }\r\n          this.parensStack.push(true);\r\n      };\r\n      Eval.prototype.outOfParenthesis = function () {\r\n          this.parensStack.pop();\r\n      };\r\n      Eval.prototype.isMathOn = function (op) {\r\n          if (!this.mathOn) {\r\n              return false;\r\n          }\r\n          if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n              return false;\r\n          }\r\n          if (this.math > Math$1.PARENS_DIVISION) {\r\n              return this.parensStack && this.parensStack.length;\r\n          }\r\n          return true;\r\n      };\r\n      Eval.prototype.pathRequiresRewrite = function (path) {\r\n          var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n          return isRelative(path);\r\n      };\r\n      Eval.prototype.rewritePath = function (path, rootpath) {\r\n          var newPath;\r\n          rootpath = rootpath || '';\r\n          newPath = this.normalizePath(rootpath + path);\r\n          // If a path was explicit relative and the rootpath was not an absolute path\r\n          // we must ensure that the new path is also explicit relative.\r\n          if (isPathLocalRelative(path) &&\r\n              isPathRelative(rootpath) &&\r\n              isPathLocalRelative(newPath) === false) {\r\n              newPath = \"./\" + newPath;\r\n          }\r\n          return newPath;\r\n      };\r\n      Eval.prototype.normalizePath = function (path) {\r\n          var segments = path.split('/').reverse();\r\n          var segment;\r\n          path = [];\r\n          while (segments.length !== 0) {\r\n              segment = segments.pop();\r\n              switch (segment) {\r\n                  case '.':\r\n                      break;\r\n                  case '..':\r\n                      if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                          path.push(segment);\r\n                      }\r\n                      else {\r\n                          path.pop();\r\n                      }\r\n                      break;\r\n                  default:\r\n                      path.push(segment);\r\n                      break;\r\n              }\r\n          }\r\n          return path.join('/');\r\n      };\r\n      return Eval;\r\n  }());\n\n  function makeRegistry(base) {\r\n      return {\r\n          _data: {},\r\n          add: function (name, func) {\r\n              // precautionary case conversion, as later querying of\r\n              // the registry by function-caller uses lower case as well.\r\n              name = name.toLowerCase();\r\n              if (this._data.hasOwnProperty(name)) ;\r\n              this._data[name] = func;\r\n          },\r\n          addMultiple: function (functions) {\r\n              var _this = this;\r\n              Object.keys(functions).forEach(function (name) {\r\n                  _this.add(name, functions[name]);\r\n              });\r\n          },\r\n          get: function (name) {\r\n              return this._data[name] || (base && base.get(name));\r\n          },\r\n          getLocalFunctions: function () {\r\n              return this._data;\r\n          },\r\n          inherit: function () {\r\n              return makeRegistry(this);\r\n          },\r\n          create: function (base) {\r\n              return makeRegistry(base);\r\n          }\r\n      };\r\n  }\r\n  var functionRegistry = makeRegistry(null);\n\n  var defaultFunc = {\r\n      eval: function () {\r\n          var v = this.value_;\r\n          var e = this.error_;\r\n          if (e) {\r\n              throw e;\r\n          }\r\n          if (v != null) {\r\n              return v ? Keyword.True : Keyword.False;\r\n          }\r\n      },\r\n      value: function (v) {\r\n          this.value_ = v;\r\n      },\r\n      error: function (e) {\r\n          this.error_ = e;\r\n      },\r\n      reset: function () {\r\n          this.value_ = this.error_ = null;\r\n      }\r\n  };\n\n  var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n      this.selectors = selectors;\r\n      this.rules = rules;\r\n      this._lookups = {};\r\n      this._variables = null;\r\n      this._properties = null;\r\n      this.strictImports = strictImports;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n      this.setParent(this.selectors, this);\r\n      this.setParent(this.rules, this);\r\n  };\r\n  Ruleset.prototype = new Node();\r\n  Ruleset.prototype.isRulesetLike = function () {\r\n      return true;\r\n  };\r\n  Ruleset.prototype.accept = function (visitor) {\r\n      if (this.paths) {\r\n          this.paths = visitor.visitArray(this.paths, true);\r\n      }\r\n      else if (this.selectors) {\r\n          this.selectors = visitor.visitArray(this.selectors);\r\n      }\r\n      if (this.rules && this.rules.length) {\r\n          this.rules = visitor.visitArray(this.rules);\r\n      }\r\n  };\r\n  Ruleset.prototype.eval = function (context) {\r\n      var selectors;\r\n      var selCnt;\r\n      var selector;\r\n      var i;\r\n      var hasVariable;\r\n      var hasOnePassingSelector = false;\r\n      if (this.selectors && (selCnt = this.selectors.length)) {\r\n          selectors = new Array(selCnt);\r\n          defaultFunc.error({\r\n              type: 'Syntax',\r\n              message: 'it is currently only allowed in parametric mixin guards,'\r\n          });\r\n          for (i = 0; i < selCnt; i++) {\r\n              selector = this.selectors[i].eval(context);\r\n              for (var j = 0; j < selector.elements.length; j++) {\r\n                  if (selector.elements[j].isVariable) {\r\n                      hasVariable = true;\r\n                      break;\r\n                  }\r\n              }\r\n              selectors[i] = selector;\r\n              if (selector.evaldCondition) {\r\n                  hasOnePassingSelector = true;\r\n              }\r\n          }\r\n          if (hasVariable) {\r\n              var toParseSelectors = new Array(selCnt);\r\n              for (i = 0; i < selCnt; i++) {\r\n                  selector = selectors[i];\r\n                  toParseSelectors[i] = selector.toCSS(context);\r\n              }\r\n              this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                  if (result) {\r\n                      selectors = flattenArray(result);\r\n                  }\r\n              });\r\n          }\r\n          defaultFunc.reset();\r\n      }\r\n      else {\r\n          hasOnePassingSelector = true;\r\n      }\r\n      var rules = this.rules ? copyArray(this.rules) : null;\r\n      var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n      var rule;\r\n      var subRule;\r\n      ruleset.originalRuleset = this;\r\n      ruleset.root = this.root;\r\n      ruleset.firstRoot = this.firstRoot;\r\n      ruleset.allowImports = this.allowImports;\r\n      if (this.debugInfo) {\r\n          ruleset.debugInfo = this.debugInfo;\r\n      }\r\n      if (!hasOnePassingSelector) {\r\n          rules.length = 0;\r\n      }\r\n      // inherit a function registry from the frames stack when possible;\r\n      // otherwise from the global registry\r\n      ruleset.functionRegistry = (function (frames) {\r\n          var i = 0;\r\n          var n = frames.length;\r\n          var found;\r\n          for (; i !== n; ++i) {\r\n              found = frames[i].functionRegistry;\r\n              if (found) {\r\n                  return found;\r\n              }\r\n          }\r\n          return functionRegistry;\r\n      })(context.frames).inherit();\r\n      // push the current ruleset to the frames stack\r\n      var ctxFrames = context.frames;\r\n      ctxFrames.unshift(ruleset);\r\n      // currrent selectors\r\n      var ctxSelectors = context.selectors;\r\n      if (!ctxSelectors) {\r\n          context.selectors = ctxSelectors = [];\r\n      }\r\n      ctxSelectors.unshift(this.selectors);\r\n      // Evaluate imports\r\n      if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n          ruleset.evalImports(context);\r\n      }\r\n      // Store the frames around mixin definitions,\r\n      // so they can be evaluated like closures when the time comes.\r\n      var rsRules = ruleset.rules;\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          if (rule.evalFirst) {\r\n              rsRules[i] = rule.eval(context);\r\n          }\r\n      }\r\n      var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n      // Evaluate mixin calls.\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          if (rule.type === 'MixinCall') {\r\n              /* jshint loopfunc:true */\r\n              rules = rule.eval(context).filter(function (r) {\r\n                  if ((r instanceof Declaration) && r.variable) {\r\n                      // do not pollute the scope if the variable is\r\n                      // already there. consider returning false here\r\n                      // but we need a way to \"return\" variable from mixins\r\n                      return !(ruleset.variable(r.name));\r\n                  }\r\n                  return true;\r\n              });\r\n              rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n              i += rules.length - 1;\r\n              ruleset.resetCache();\r\n          }\r\n          else if (rule.type === 'VariableCall') {\r\n              /* jshint loopfunc:true */\r\n              rules = rule.eval(context).rules.filter(function (r) {\r\n                  if ((r instanceof Declaration) && r.variable) {\r\n                      // do not pollute the scope at all\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              });\r\n              rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n              i += rules.length - 1;\r\n              ruleset.resetCache();\r\n          }\r\n      }\r\n      // Evaluate everything else\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          if (!rule.evalFirst) {\r\n              rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n          }\r\n      }\r\n      // Evaluate everything else\r\n      for (i = 0; (rule = rsRules[i]); i++) {\r\n          // for rulesets, check if it is a css guard and can be removed\r\n          if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n              // check if it can be folded in (e.g. & where)\r\n              if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                  rsRules.splice(i--, 1);\r\n                  for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                      if (subRule instanceof Node) {\r\n                          subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                          if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                              rsRules.splice(++i, 0, subRule);\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      // Pop the stack\r\n      ctxFrames.shift();\r\n      ctxSelectors.shift();\r\n      if (context.mediaBlocks) {\r\n          for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n              context.mediaBlocks[i].bubbleSelectors(selectors);\r\n          }\r\n      }\r\n      return ruleset;\r\n  };\r\n  Ruleset.prototype.evalImports = function (context) {\r\n      var rules = this.rules;\r\n      var i;\r\n      var importRules;\r\n      if (!rules) {\r\n          return;\r\n      }\r\n      for (i = 0; i < rules.length; i++) {\r\n          if (rules[i].type === 'Import') {\r\n              importRules = rules[i].eval(context);\r\n              if (importRules && (importRules.length || importRules.length === 0)) {\r\n                  rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                  i += importRules.length - 1;\r\n              }\r\n              else {\r\n                  rules.splice(i, 1, importRules);\r\n              }\r\n              this.resetCache();\r\n          }\r\n      }\r\n  };\r\n  Ruleset.prototype.makeImportant = function () {\r\n      var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n          if (r.makeImportant) {\r\n              return r.makeImportant();\r\n          }\r\n          else {\r\n              return r;\r\n          }\r\n      }), this.strictImports, this.visibilityInfo());\r\n      return result;\r\n  };\r\n  Ruleset.prototype.matchArgs = function (args) {\r\n      return !args || args.length === 0;\r\n  };\r\n  // lets you call a css selector with a guard\r\n  Ruleset.prototype.matchCondition = function (args, context) {\r\n      var lastSelector = this.selectors[this.selectors.length - 1];\r\n      if (!lastSelector.evaldCondition) {\r\n          return false;\r\n      }\r\n      if (lastSelector.condition &&\r\n          !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n  Ruleset.prototype.resetCache = function () {\r\n      this._rulesets = null;\r\n      this._variables = null;\r\n      this._properties = null;\r\n      this._lookups = {};\r\n  };\r\n  Ruleset.prototype.variables = function () {\r\n      if (!this._variables) {\r\n          this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n              if (r instanceof Declaration && r.variable === true) {\r\n                  hash[r.name] = r;\r\n              }\r\n              // when evaluating variables in an import statement, imports have not been eval'd\r\n              // so we need to go inside import statements.\r\n              // guard against root being a string (in the case of inlined less)\r\n              if (r.type === 'Import' && r.root && r.root.variables) {\r\n                  var vars = r.root.variables();\r\n                  for (var name_1 in vars) {\r\n                      if (vars.hasOwnProperty(name_1)) {\r\n                          hash[name_1] = r.root.variable(name_1);\r\n                      }\r\n                  }\r\n              }\r\n              return hash;\r\n          }, {});\r\n      }\r\n      return this._variables;\r\n  };\r\n  Ruleset.prototype.properties = function () {\r\n      if (!this._properties) {\r\n          this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n              if (r instanceof Declaration && r.variable !== true) {\r\n                  var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                      r.name[0].value : r.name;\r\n                  // Properties don't overwrite as they can merge\r\n                  if (!hash[\"$\" + name_2]) {\r\n                      hash[\"$\" + name_2] = [r];\r\n                  }\r\n                  else {\r\n                      hash[\"$\" + name_2].push(r);\r\n                  }\r\n              }\r\n              return hash;\r\n          }, {});\r\n      }\r\n      return this._properties;\r\n  };\r\n  Ruleset.prototype.variable = function (name) {\r\n      var decl = this.variables()[name];\r\n      if (decl) {\r\n          return this.parseValue(decl);\r\n      }\r\n  };\r\n  Ruleset.prototype.property = function (name) {\r\n      var decl = this.properties()[name];\r\n      if (decl) {\r\n          return this.parseValue(decl);\r\n      }\r\n  };\r\n  Ruleset.prototype.lastDeclaration = function () {\r\n      for (var i = this.rules.length; i > 0; i--) {\r\n          var decl = this.rules[i - 1];\r\n          if (decl instanceof Declaration) {\r\n              return this.parseValue(decl);\r\n          }\r\n      }\r\n  };\r\n  Ruleset.prototype.parseValue = function (toParse) {\r\n      var self = this;\r\n      function transformDeclaration(decl) {\r\n          if (decl.value instanceof Anonymous && !decl.parsed) {\r\n              if (typeof decl.value.value === 'string') {\r\n                  this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                      if (err) {\r\n                          decl.parsed = true;\r\n                      }\r\n                      if (result) {\r\n                          decl.value = result[0];\r\n                          decl.important = result[1] || '';\r\n                          decl.parsed = true;\r\n                      }\r\n                  });\r\n              }\r\n              else {\r\n                  decl.parsed = true;\r\n              }\r\n              return decl;\r\n          }\r\n          else {\r\n              return decl;\r\n          }\r\n      }\r\n      if (!Array.isArray(toParse)) {\r\n          return transformDeclaration.call(self, toParse);\r\n      }\r\n      else {\r\n          var nodes_1 = [];\r\n          toParse.forEach(function (n) {\r\n              nodes_1.push(transformDeclaration.call(self, n));\r\n          });\r\n          return nodes_1;\r\n      }\r\n  };\r\n  Ruleset.prototype.rulesets = function () {\r\n      if (!this.rules) {\r\n          return [];\r\n      }\r\n      var filtRules = [];\r\n      var rules = this.rules;\r\n      var i;\r\n      var rule;\r\n      for (i = 0; (rule = rules[i]); i++) {\r\n          if (rule.isRuleset) {\r\n              filtRules.push(rule);\r\n          }\r\n      }\r\n      return filtRules;\r\n  };\r\n  Ruleset.prototype.prependRule = function (rule) {\r\n      var rules = this.rules;\r\n      if (rules) {\r\n          rules.unshift(rule);\r\n      }\r\n      else {\r\n          this.rules = [rule];\r\n      }\r\n      this.setParent(rule, this);\r\n  };\r\n  Ruleset.prototype.find = function (selector, self, filter) {\r\n      if (self === void 0) { self = this; }\r\n      var rules = [];\r\n      var match;\r\n      var foundMixins;\r\n      var key = selector.toCSS();\r\n      if (key in this._lookups) {\r\n          return this._lookups[key];\r\n      }\r\n      this.rulesets().forEach(function (rule) {\r\n          if (rule !== self) {\r\n              for (var j = 0; j < rule.selectors.length; j++) {\r\n                  match = selector.match(rule.selectors[j]);\r\n                  if (match) {\r\n                      if (selector.elements.length > match) {\r\n                          if (!filter || filter(rule)) {\r\n                              foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                              for (var i = 0; i < foundMixins.length; ++i) {\r\n                                  foundMixins[i].path.push(rule);\r\n                              }\r\n                              Array.prototype.push.apply(rules, foundMixins);\r\n                          }\r\n                      }\r\n                      else {\r\n                          rules.push({ rule: rule, path: [] });\r\n                      }\r\n                      break;\r\n                  }\r\n              }\r\n          }\r\n      });\r\n      this._lookups[key] = rules;\r\n      return rules;\r\n  };\r\n  Ruleset.prototype.genCSS = function (context, output) {\r\n      var i;\r\n      var j;\r\n      var charsetRuleNodes = [];\r\n      var ruleNodes = [];\r\n      var // Line number debugging\r\n      debugInfo$1;\r\n      var rule;\r\n      var path;\r\n      context.tabLevel = (context.tabLevel || 0);\r\n      if (!this.root) {\r\n          context.tabLevel++;\r\n      }\r\n      var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n      var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n      var sep;\r\n      var charsetNodeIndex = 0;\r\n      var importNodeIndex = 0;\r\n      for (i = 0; (rule = this.rules[i]); i++) {\r\n          if (rule instanceof Comment) {\r\n              if (importNodeIndex === i) {\r\n                  importNodeIndex++;\r\n              }\r\n              ruleNodes.push(rule);\r\n          }\r\n          else if (rule.isCharset && rule.isCharset()) {\r\n              ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n              charsetNodeIndex++;\r\n              importNodeIndex++;\r\n          }\r\n          else if (rule.type === 'Import') {\r\n              ruleNodes.splice(importNodeIndex, 0, rule);\r\n              importNodeIndex++;\r\n          }\r\n          else {\r\n              ruleNodes.push(rule);\r\n          }\r\n      }\r\n      ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n      // If this is the root node, we don't render\r\n      // a selector, or {}.\r\n      if (!this.root) {\r\n          debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n          if (debugInfo$1) {\r\n              output.add(debugInfo$1);\r\n              output.add(tabSetStr);\r\n          }\r\n          var paths = this.paths;\r\n          var pathCnt = paths.length;\r\n          var pathSubCnt = void 0;\r\n          sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n          for (i = 0; i < pathCnt; i++) {\r\n              path = paths[i];\r\n              if (!(pathSubCnt = path.length)) {\r\n                  continue;\r\n              }\r\n              if (i > 0) {\r\n                  output.add(sep);\r\n              }\r\n              context.firstSelector = true;\r\n              path[0].genCSS(context, output);\r\n              context.firstSelector = false;\r\n              for (j = 1; j < pathSubCnt; j++) {\r\n                  path[j].genCSS(context, output);\r\n              }\r\n          }\r\n          output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n      }\r\n      // Compile rules and rulesets\r\n      for (i = 0; (rule = ruleNodes[i]); i++) {\r\n          if (i + 1 === ruleNodes.length) {\r\n              context.lastRule = true;\r\n          }\r\n          var currentLastRule = context.lastRule;\r\n          if (rule.isRulesetLike(rule)) {\r\n              context.lastRule = false;\r\n          }\r\n          if (rule.genCSS) {\r\n              rule.genCSS(context, output);\r\n          }\r\n          else if (rule.value) {\r\n              output.add(rule.value.toString());\r\n          }\r\n          context.lastRule = currentLastRule;\r\n          if (!context.lastRule && rule.isVisible()) {\r\n              output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n          }\r\n          else {\r\n              context.lastRule = false;\r\n          }\r\n      }\r\n      if (!this.root) {\r\n          output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n          context.tabLevel--;\r\n      }\r\n      if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n          output.add('\\n');\r\n      }\r\n  };\r\n  Ruleset.prototype.joinSelectors = function (paths, context, selectors) {\r\n      for (var s = 0; s < selectors.length; s++) {\r\n          this.joinSelector(paths, context, selectors[s]);\r\n      }\r\n  };\r\n  Ruleset.prototype.joinSelector = function (paths, context, selector) {\r\n      function createParenthesis(elementsToPak, originalElement) {\r\n          var replacementParen;\r\n          var j;\r\n          if (elementsToPak.length === 0) {\r\n              replacementParen = new Paren(elementsToPak[0]);\r\n          }\r\n          else {\r\n              var insideParent = new Array(elementsToPak.length);\r\n              for (j = 0; j < elementsToPak.length; j++) {\r\n                  insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n              }\r\n              replacementParen = new Paren(new Selector(insideParent));\r\n          }\r\n          return replacementParen;\r\n      }\r\n      function createSelector(containedElement, originalElement) {\r\n          var element;\r\n          var selector;\r\n          element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n          selector = new Selector([element]);\r\n          return selector;\r\n      }\r\n      // joins selector path from `beginningPath` with selector path in `addPath`\r\n      // `replacedElement` contains element that is being replaced by `addPath`\r\n      // returns concatenated path\r\n      function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n          var newSelectorPath;\r\n          var lastSelector;\r\n          var newJoinedSelector;\r\n          // our new selector path\r\n          newSelectorPath = [];\r\n          // construct the joined selector - if & is the first thing this will be empty,\r\n          // if not newJoinedSelector will be the last set of elements in the selector\r\n          if (beginningPath.length > 0) {\r\n              newSelectorPath = copyArray(beginningPath);\r\n              lastSelector = newSelectorPath.pop();\r\n              newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n          }\r\n          else {\r\n              newJoinedSelector = originalSelector.createDerived([]);\r\n          }\r\n          if (addPath.length > 0) {\r\n              // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n              // that is valid without anything in front of it\r\n              // so if the & does not have a combinator that is \"\" or \" \" then\r\n              // and there is a combinator on the parent, then grab that.\r\n              // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n              var combinator = replacedElement.combinator;\r\n              var parentEl = addPath[0].elements[0];\r\n              if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                  combinator = parentEl.combinator;\r\n              }\r\n              // join the elements so far with the first part of the parent\r\n              newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n              newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n          }\r\n          // now add the joined selector - but only if it is not empty\r\n          if (newJoinedSelector.elements.length !== 0) {\r\n              newSelectorPath.push(newJoinedSelector);\r\n          }\r\n          // put together the parent selectors after the join (e.g. the rest of the parent)\r\n          if (addPath.length > 1) {\r\n              var restOfPath = addPath.slice(1);\r\n              restOfPath = restOfPath.map(function (selector) { return selector.createDerived(selector.elements, []); });\r\n              newSelectorPath = newSelectorPath.concat(restOfPath);\r\n          }\r\n          return newSelectorPath;\r\n      }\r\n      // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n      // `replacedElement` contains element that is being replaced by `addPath`\r\n      // returns array with all concatenated paths\r\n      function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n          var j;\r\n          for (j = 0; j < beginningPath.length; j++) {\r\n              var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n              result.push(newSelectorPath);\r\n          }\r\n          return result;\r\n      }\r\n      function mergeElementsOnToSelectors(elements, selectors) {\r\n          var i;\r\n          var sel;\r\n          if (elements.length === 0) {\r\n              return;\r\n          }\r\n          if (selectors.length === 0) {\r\n              selectors.push([new Selector(elements)]);\r\n              return;\r\n          }\r\n          for (i = 0; (sel = selectors[i]); i++) {\r\n              // if the previous thing in sel is a parent this needs to join on to it\r\n              if (sel.length > 0) {\r\n                  sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n              }\r\n              else {\r\n                  sel.push(new Selector(elements));\r\n              }\r\n          }\r\n      }\r\n      // replace all parent selectors inside `inSelector` by content of `context` array\r\n      // resulting selectors are returned inside `paths` array\r\n      // returns true if `inSelector` contained at least one parent selector\r\n      function replaceParentSelector(paths, context, inSelector) {\r\n          // The paths are [[Selector]]\r\n          // The first list is a list of comma separated selectors\r\n          // The inner list is a list of inheritance separated selectors\r\n          // e.g.\r\n          // .a, .b {\r\n          //   .c {\r\n          //   }\r\n          // }\r\n          // == [[.a] [.c]] [[.b] [.c]]\r\n          //\r\n          var i;\r\n          var j;\r\n          var k;\r\n          var currentElements;\r\n          var newSelectors;\r\n          var selectorsMultiplied;\r\n          var sel;\r\n          var el;\r\n          var hadParentSelector = false;\r\n          var length;\r\n          var lastSelector;\r\n          function findNestedSelector(element) {\r\n              var maybeSelector;\r\n              if (!(element.value instanceof Paren)) {\r\n                  return null;\r\n              }\r\n              maybeSelector = element.value.value;\r\n              if (!(maybeSelector instanceof Selector)) {\r\n                  return null;\r\n              }\r\n              return maybeSelector;\r\n          }\r\n          // the elements from the current selector so far\r\n          currentElements = [];\r\n          // the current list of new selectors to add to the path.\r\n          // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n          // by the parents\r\n          newSelectors = [\r\n              []\r\n          ];\r\n          for (i = 0; (el = inSelector.elements[i]); i++) {\r\n              // non parent reference elements just get added\r\n              if (el.value !== '&') {\r\n                  var nestedSelector = findNestedSelector(el);\r\n                  if (nestedSelector != null) {\r\n                      // merge the current list of non parent selector elements\r\n                      // on to the current list of selectors to add\r\n                      mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                      var nestedPaths = [];\r\n                      var replaced = void 0;\r\n                      var replacedNewSelectors = [];\r\n                      replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                      hadParentSelector = hadParentSelector || replaced;\r\n                      // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                      for (k = 0; k < nestedPaths.length; k++) {\r\n                          var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                          addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                      }\r\n                      newSelectors = replacedNewSelectors;\r\n                      currentElements = [];\r\n                  }\r\n                  else {\r\n                      currentElements.push(el);\r\n                  }\r\n              }\r\n              else {\r\n                  hadParentSelector = true;\r\n                  // the new list of selectors to add\r\n                  selectorsMultiplied = [];\r\n                  // merge the current list of non parent selector elements\r\n                  // on to the current list of selectors to add\r\n                  mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                  // loop through our current selectors\r\n                  for (j = 0; j < newSelectors.length; j++) {\r\n                      sel = newSelectors[j];\r\n                      // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                      // whether there are parents or not\r\n                      if (context.length === 0) {\r\n                          // the combinator used on el should now be applied to the next element instead so that\r\n                          // it is not lost\r\n                          if (sel.length > 0) {\r\n                              sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                          }\r\n                          selectorsMultiplied.push(sel);\r\n                      }\r\n                      else {\r\n                          // and the parent selectors\r\n                          for (k = 0; k < context.length; k++) {\r\n                              // We need to put the current selectors\r\n                              // then join the last selector's elements on to the parents selectors\r\n                              var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                              // add that to our new set of selectors\r\n                              selectorsMultiplied.push(newSelectorPath);\r\n                          }\r\n                      }\r\n                  }\r\n                  // our new selectors has been multiplied, so reset the state\r\n                  newSelectors = selectorsMultiplied;\r\n                  currentElements = [];\r\n              }\r\n          }\r\n          // if we have any elements left over (e.g. .a& .b == .b)\r\n          // add them on to all the current selectors\r\n          mergeElementsOnToSelectors(currentElements, newSelectors);\r\n          for (i = 0; i < newSelectors.length; i++) {\r\n              length = newSelectors[i].length;\r\n              if (length > 0) {\r\n                  paths.push(newSelectors[i]);\r\n                  lastSelector = newSelectors[i][length - 1];\r\n                  newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n              }\r\n          }\r\n          return hadParentSelector;\r\n      }\r\n      function deriveSelector(visibilityInfo, deriveFrom) {\r\n          var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n          newSelector.copyVisibilityInfo(visibilityInfo);\r\n          return newSelector;\r\n      }\r\n      // joinSelector code follows\r\n      var i;\r\n      var newPaths;\r\n      var hadParentSelector;\r\n      newPaths = [];\r\n      hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n      if (!hadParentSelector) {\r\n          if (context.length > 0) {\r\n              newPaths = [];\r\n              for (i = 0; i < context.length; i++) {\r\n                  var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                  concatenated.push(selector);\r\n                  newPaths.push(concatenated);\r\n              }\r\n          }\r\n          else {\r\n              newPaths = [[selector]];\r\n          }\r\n      }\r\n      for (i = 0; i < newPaths.length; i++) {\r\n          paths.push(newPaths[i]);\r\n      }\r\n  };\r\n  Ruleset.prototype.type = 'Ruleset';\r\n  Ruleset.prototype.isRuleset = true;\n\n  var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n      var i;\r\n      this.name = name;\r\n      this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n      if (rules) {\r\n          if (Array.isArray(rules)) {\r\n              this.rules = rules;\r\n          }\r\n          else {\r\n              this.rules = [rules];\r\n              this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n          }\r\n          for (i = 0; i < this.rules.length; i++) {\r\n              this.rules[i].allowImports = true;\r\n          }\r\n          this.setParent(this.rules, this);\r\n      }\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.debugInfo = debugInfo;\r\n      this.isRooted = isRooted || false;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n  };\r\n  AtRule.prototype = new Node();\r\n  AtRule.prototype.accept = function (visitor) {\r\n      var value = this.value;\r\n      var rules = this.rules;\r\n      if (rules) {\r\n          this.rules = visitor.visitArray(rules);\r\n      }\r\n      if (value) {\r\n          this.value = visitor.visit(value);\r\n      }\r\n  };\r\n  AtRule.prototype.isRulesetLike = function () {\r\n      return this.rules || !this.isCharset();\r\n  };\r\n  AtRule.prototype.isCharset = function () {\r\n      return '@charset' === this.name;\r\n  };\r\n  AtRule.prototype.genCSS = function (context, output) {\r\n      var value = this.value;\r\n      var rules = this.rules;\r\n      output.add(this.name, this.fileInfo(), this.getIndex());\r\n      if (value) {\r\n          output.add(' ');\r\n          value.genCSS(context, output);\r\n      }\r\n      if (rules) {\r\n          this.outputRuleset(context, output, rules);\r\n      }\r\n      else {\r\n          output.add(';');\r\n      }\r\n  };\r\n  AtRule.prototype.eval = function (context) {\r\n      var mediaPathBackup;\r\n      var mediaBlocksBackup;\r\n      var value = this.value;\r\n      var rules = this.rules;\r\n      // media stored inside other atrule should not bubble over it\r\n      // backpup media bubbling information\r\n      mediaPathBackup = context.mediaPath;\r\n      mediaBlocksBackup = context.mediaBlocks;\r\n      // deleted media bubbling information\r\n      context.mediaPath = [];\r\n      context.mediaBlocks = [];\r\n      if (value) {\r\n          value = value.eval(context);\r\n      }\r\n      if (rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          rules = [rules[0].eval(context)];\r\n          rules[0].root = true;\r\n      }\r\n      // restore media bubbling information\r\n      context.mediaPath = mediaPathBackup;\r\n      context.mediaBlocks = mediaBlocksBackup;\r\n      return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n  };\r\n  AtRule.prototype.variable = function (name) {\r\n      if (this.rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          return Ruleset.prototype.variable.call(this.rules[0], name);\r\n      }\r\n  };\r\n  AtRule.prototype.find = function () {\r\n      var args = [];\r\n      for (var _i = 0; _i < arguments.length; _i++) {\r\n          args[_i] = arguments[_i];\r\n      }\r\n      if (this.rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          return Ruleset.prototype.find.apply(this.rules[0], args);\r\n      }\r\n  };\r\n  AtRule.prototype.rulesets = function () {\r\n      if (this.rules) {\r\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n          return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n      }\r\n  };\r\n  AtRule.prototype.outputRuleset = function (context, output, rules) {\r\n      var ruleCnt = rules.length;\r\n      var i;\r\n      context.tabLevel = (context.tabLevel | 0) + 1;\r\n      // Compressed\r\n      if (context.compress) {\r\n          output.add('{');\r\n          for (i = 0; i < ruleCnt; i++) {\r\n              rules[i].genCSS(context, output);\r\n          }\r\n          output.add('}');\r\n          context.tabLevel--;\r\n          return;\r\n      }\r\n      // Non-compressed\r\n      var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  ');\r\n      var tabRuleStr = tabSetStr + \"  \";\r\n      if (!ruleCnt) {\r\n          output.add(\" {\" + tabSetStr + \"}\");\r\n      }\r\n      else {\r\n          output.add(\" {\" + tabRuleStr);\r\n          rules[0].genCSS(context, output);\r\n          for (i = 1; i < ruleCnt; i++) {\r\n              output.add(tabRuleStr);\r\n              rules[i].genCSS(context, output);\r\n          }\r\n          output.add(tabSetStr + \"}\");\r\n      }\r\n      context.tabLevel--;\r\n  };\r\n  AtRule.prototype.type = 'AtRule';\n\n  var DetachedRuleset = function (ruleset, frames) {\r\n      this.ruleset = ruleset;\r\n      this.frames = frames;\r\n      this.setParent(this.ruleset, this);\r\n  };\r\n  DetachedRuleset.prototype = new Node();\r\n  DetachedRuleset.prototype.accept = function (visitor) {\r\n      this.ruleset = visitor.visit(this.ruleset);\r\n  };\r\n  DetachedRuleset.prototype.eval = function (context) {\r\n      var frames = this.frames || copyArray(context.frames);\r\n      return new DetachedRuleset(this.ruleset, frames);\r\n  };\r\n  DetachedRuleset.prototype.callEval = function (context) {\r\n      return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n  };\r\n  DetachedRuleset.prototype.type = 'DetachedRuleset';\r\n  DetachedRuleset.prototype.evalFirst = true;\n\n  var Unit = function (numerator, denominator, backupUnit) {\r\n      this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n      this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n      if (backupUnit) {\r\n          this.backupUnit = backupUnit;\r\n      }\r\n      else if (numerator && numerator.length) {\r\n          this.backupUnit = numerator[0];\r\n      }\r\n  };\r\n  Unit.prototype = new Node();\r\n  Unit.prototype.clone = function () {\r\n      return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n  };\r\n  Unit.prototype.genCSS = function (context, output) {\r\n      // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n      var strictUnits = context && context.strictUnits;\r\n      if (this.numerator.length === 1) {\r\n          output.add(this.numerator[0]); // the ideal situation\r\n      }\r\n      else if (!strictUnits && this.backupUnit) {\r\n          output.add(this.backupUnit);\r\n      }\r\n      else if (!strictUnits && this.denominator.length) {\r\n          output.add(this.denominator[0]);\r\n      }\r\n  };\r\n  Unit.prototype.toString = function () {\r\n      var i;\r\n      var returnStr = this.numerator.join('*');\r\n      for (i = 0; i < this.denominator.length; i++) {\r\n          returnStr += \"/\" + this.denominator[i];\r\n      }\r\n      return returnStr;\r\n  };\r\n  Unit.prototype.compare = function (other) {\r\n      return this.is(other.toString()) ? 0 : undefined;\r\n  };\r\n  Unit.prototype.is = function (unitString) {\r\n      return this.toString().toUpperCase() === unitString.toUpperCase();\r\n  };\r\n  Unit.prototype.isLength = function () {\r\n      return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n  };\r\n  Unit.prototype.isEmpty = function () {\r\n      return this.numerator.length === 0 && this.denominator.length === 0;\r\n  };\r\n  Unit.prototype.isSingular = function () {\r\n      return this.numerator.length <= 1 && this.denominator.length === 0;\r\n  };\r\n  Unit.prototype.map = function (callback) {\r\n      var i;\r\n      for (i = 0; i < this.numerator.length; i++) {\r\n          this.numerator[i] = callback(this.numerator[i], false);\r\n      }\r\n      for (i = 0; i < this.denominator.length; i++) {\r\n          this.denominator[i] = callback(this.denominator[i], true);\r\n      }\r\n  };\r\n  Unit.prototype.usedUnits = function () {\r\n      var group;\r\n      var result = {};\r\n      var mapUnit;\r\n      var groupName;\r\n      mapUnit = function (atomicUnit) {\r\n          /* jshint loopfunc:true */\r\n          if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n              result[groupName] = atomicUnit;\r\n          }\r\n          return atomicUnit;\r\n      };\r\n      for (groupName in unitConversions) {\r\n          if (unitConversions.hasOwnProperty(groupName)) {\r\n              group = unitConversions[groupName];\r\n              this.map(mapUnit);\r\n          }\r\n      }\r\n      return result;\r\n  };\r\n  Unit.prototype.cancel = function () {\r\n      var counter = {};\r\n      var atomicUnit;\r\n      var i;\r\n      for (i = 0; i < this.numerator.length; i++) {\r\n          atomicUnit = this.numerator[i];\r\n          counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n      }\r\n      for (i = 0; i < this.denominator.length; i++) {\r\n          atomicUnit = this.denominator[i];\r\n          counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n      }\r\n      this.numerator = [];\r\n      this.denominator = [];\r\n      for (atomicUnit in counter) {\r\n          if (counter.hasOwnProperty(atomicUnit)) {\r\n              var count = counter[atomicUnit];\r\n              if (count > 0) {\r\n                  for (i = 0; i < count; i++) {\r\n                      this.numerator.push(atomicUnit);\r\n                  }\r\n              }\r\n              else if (count < 0) {\r\n                  for (i = 0; i < -count; i++) {\r\n                      this.denominator.push(atomicUnit);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      this.numerator.sort();\r\n      this.denominator.sort();\r\n  };\r\n  Unit.prototype.type = 'Unit';\n\n  //\r\n  // A number with a unit\r\n  //\r\n  var Dimension = function (value, unit) {\r\n      this.value = parseFloat(value);\r\n      if (isNaN(this.value)) {\r\n          throw new Error('Dimension is not a number.');\r\n      }\r\n      this.unit = (unit && unit instanceof Unit) ? unit :\r\n          new Unit(unit ? [unit] : undefined);\r\n      this.setParent(this.unit, this);\r\n  };\r\n  Dimension.prototype = new Node();\r\n  Dimension.prototype.accept = function (visitor) {\r\n      this.unit = visitor.visit(this.unit);\r\n  };\r\n  Dimension.prototype.eval = function (context) {\r\n      return this;\r\n  };\r\n  Dimension.prototype.toColor = function () {\r\n      return new Color([this.value, this.value, this.value]);\r\n  };\r\n  Dimension.prototype.genCSS = function (context, output) {\r\n      if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n          throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n      }\r\n      var value = this.fround(context, this.value);\r\n      var strValue = String(value);\r\n      if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n          // would be output 1e-6 etc.\r\n          strValue = value.toFixed(20).replace(/0+$/, '');\r\n      }\r\n      if (context && context.compress) {\r\n          // Zero values doesn't need a unit\r\n          if (value === 0 && this.unit.isLength()) {\r\n              output.add(strValue);\r\n              return;\r\n          }\r\n          // Float values doesn't need a leading zero\r\n          if (value > 0 && value < 1) {\r\n              strValue = (strValue).substr(1);\r\n          }\r\n      }\r\n      output.add(strValue);\r\n      this.unit.genCSS(context, output);\r\n  };\r\n  // In an operation between two Dimensions,\r\n  // we default to the first Dimension's unit,\r\n  // so `1px + 2` will yield `3px`.\r\n  Dimension.prototype.operate = function (context, op, other) {\r\n      /* jshint noempty:false */\r\n      var value = this._operate(context, op, this.value, other.value);\r\n      var unit = this.unit.clone();\r\n      if (op === '+' || op === '-') {\r\n          if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n              unit = other.unit.clone();\r\n              if (this.unit.backupUnit) {\r\n                  unit.backupUnit = this.unit.backupUnit;\r\n              }\r\n          }\r\n          else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n          else {\r\n              other = other.convertTo(this.unit.usedUnits());\r\n              if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                  throw new Error(\"Incompatible units. Change the units or use the unit function. \" +\r\n                      (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n              }\r\n              value = this._operate(context, op, this.value, other.value);\r\n          }\r\n      }\r\n      else if (op === '*') {\r\n          unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n          unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n          unit.cancel();\r\n      }\r\n      else if (op === '/') {\r\n          unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n          unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n          unit.cancel();\r\n      }\r\n      return new Dimension(value, unit);\r\n  };\r\n  Dimension.prototype.compare = function (other) {\r\n      var a;\r\n      var b;\r\n      if (!(other instanceof Dimension)) {\r\n          return undefined;\r\n      }\r\n      if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n          a = this;\r\n          b = other;\r\n      }\r\n      else {\r\n          a = this.unify();\r\n          b = other.unify();\r\n          if (a.unit.compare(b.unit) !== 0) {\r\n              return undefined;\r\n          }\r\n      }\r\n      return Node.numericCompare(a.value, b.value);\r\n  };\r\n  Dimension.prototype.unify = function () {\r\n      return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n  };\r\n  Dimension.prototype.convertTo = function (conversions) {\r\n      var value = this.value;\r\n      var unit = this.unit.clone();\r\n      var i;\r\n      var groupName;\r\n      var group;\r\n      var targetUnit;\r\n      var derivedConversions = {};\r\n      var applyUnit;\r\n      if (typeof conversions === 'string') {\r\n          for (i in unitConversions) {\r\n              if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                  derivedConversions = {};\r\n                  derivedConversions[i] = conversions;\r\n              }\r\n          }\r\n          conversions = derivedConversions;\r\n      }\r\n      applyUnit = function (atomicUnit, denominator) {\r\n          /* jshint loopfunc:true */\r\n          if (group.hasOwnProperty(atomicUnit)) {\r\n              if (denominator) {\r\n                  value = value / (group[atomicUnit] / group[targetUnit]);\r\n              }\r\n              else {\r\n                  value = value * (group[atomicUnit] / group[targetUnit]);\r\n              }\r\n              return targetUnit;\r\n          }\r\n          return atomicUnit;\r\n      };\r\n      for (groupName in conversions) {\r\n          if (conversions.hasOwnProperty(groupName)) {\r\n              targetUnit = conversions[groupName];\r\n              group = unitConversions[groupName];\r\n              unit.map(applyUnit);\r\n          }\r\n      }\r\n      unit.cancel();\r\n      return new Dimension(value, unit);\r\n  };\r\n  Dimension.prototype.type = 'Dimension';\n\n  var MATH$1 = Math$1;\r\n  var Operation = function (op, operands, isSpaced) {\r\n      this.op = op.trim();\r\n      this.operands = operands;\r\n      this.isSpaced = isSpaced;\r\n  };\r\n  Operation.prototype = new Node();\r\n  Operation.prototype.accept = function (visitor) {\r\n      this.operands = visitor.visitArray(this.operands);\r\n  };\r\n  Operation.prototype.eval = function (context) {\r\n      var a = this.operands[0].eval(context);\r\n      var b = this.operands[1].eval(context);\r\n      var op;\r\n      if (context.isMathOn(this.op)) {\r\n          op = this.op === './' ? '/' : this.op;\r\n          if (a instanceof Dimension && b instanceof Color) {\r\n              a = a.toColor();\r\n          }\r\n          if (b instanceof Dimension && a instanceof Color) {\r\n              b = b.toColor();\r\n          }\r\n          if (!a.operate) {\r\n              if (a instanceof Operation && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\r\n                  return new Operation(this.op, [a, b], this.isSpaced);\r\n              }\r\n              throw { type: 'Operation',\r\n                  message: 'Operation on an invalid type' };\r\n          }\r\n          return a.operate(context, op, b);\r\n      }\r\n      else {\r\n          return new Operation(this.op, [a, b], this.isSpaced);\r\n      }\r\n  };\r\n  Operation.prototype.genCSS = function (context, output) {\r\n      this.operands[0].genCSS(context, output);\r\n      if (this.isSpaced) {\r\n          output.add(' ');\r\n      }\r\n      output.add(this.op);\r\n      if (this.isSpaced) {\r\n          output.add(' ');\r\n      }\r\n      this.operands[1].genCSS(context, output);\r\n  };\r\n  Operation.prototype.type = 'Operation';\n\n  var MATH$2 = Math$1;\r\n  var Expression = function (value, noSpacing) {\r\n      this.value = value;\r\n      this.noSpacing = noSpacing;\r\n      if (!value) {\r\n          throw new Error('Expression requires an array parameter');\r\n      }\r\n  };\r\n  Expression.prototype = new Node();\r\n  Expression.prototype.accept = function (visitor) {\r\n      this.value = visitor.visitArray(this.value);\r\n  };\r\n  Expression.prototype.eval = function (context) {\r\n      var returnValue;\r\n      var mathOn = context.isMathOn();\r\n      var inParenthesis = this.parens &&\r\n          (context.math !== MATH$2.STRICT_LEGACY || !this.parensInOp);\r\n      var doubleParen = false;\r\n      if (inParenthesis) {\r\n          context.inParenthesis();\r\n      }\r\n      if (this.value.length > 1) {\r\n          returnValue = new Expression(this.value.map(function (e) {\r\n              if (!e.eval) {\r\n                  return e;\r\n              }\r\n              return e.eval(context);\r\n          }), this.noSpacing);\r\n      }\r\n      else if (this.value.length === 1) {\r\n          if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n              doubleParen = true;\r\n          }\r\n          returnValue = this.value[0].eval(context);\r\n      }\r\n      else {\r\n          returnValue = this;\r\n      }\r\n      if (inParenthesis) {\r\n          context.outOfParenthesis();\r\n      }\r\n      if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n          && (!(returnValue instanceof Dimension))) {\r\n          returnValue = new Paren(returnValue);\r\n      }\r\n      return returnValue;\r\n  };\r\n  Expression.prototype.genCSS = function (context, output) {\r\n      for (var i = 0; i < this.value.length; i++) {\r\n          this.value[i].genCSS(context, output);\r\n          if (!this.noSpacing && i + 1 < this.value.length) {\r\n              output.add(' ');\r\n          }\r\n      }\r\n  };\r\n  Expression.prototype.throwAwayComments = function () {\r\n      this.value = this.value.filter(function (v) { return !(v instanceof Comment); });\r\n  };\r\n  Expression.prototype.type = 'Expression';\n\n  var functionCaller = /** @class */ (function () {\r\n      function functionCaller(name, context, index, currentFileInfo) {\r\n          this.name = name.toLowerCase();\r\n          this.index = index;\r\n          this.context = context;\r\n          this.currentFileInfo = currentFileInfo;\r\n          this.func = context.frames[0].functionRegistry.get(this.name);\r\n      }\r\n      functionCaller.prototype.isValid = function () {\r\n          return Boolean(this.func);\r\n      };\r\n      functionCaller.prototype.call = function (args) {\r\n          var _this = this;\r\n          var evalArgs = this.func.evalArgs;\r\n          if (evalArgs !== false) {\r\n              args = args.map(function (a) { return a.eval(_this.context); });\r\n          }\r\n          // This code is terrible and should be replaced as per this issue...\r\n          // https://github.com/less/less.js/issues/2477\r\n          if (Array.isArray(args)) {\r\n              args = args.filter(function (item) {\r\n                  if (item.type === 'Comment') {\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              })\r\n                  .map(function (item) {\r\n                  if (item.type === 'Expression') {\r\n                      var subNodes = item.value.filter(function (item) {\r\n                          if (item.type === 'Comment') {\r\n                              return false;\r\n                          }\r\n                          return true;\r\n                      });\r\n                      if (subNodes.length === 1) {\r\n                          return subNodes[0];\r\n                      }\r\n                      else {\r\n                          return new Expression(subNodes);\r\n                      }\r\n                  }\r\n                  return item;\r\n              });\r\n          }\r\n          if (evalArgs === false) {\r\n              return this.func.apply(this, __spreadArrays([this.context], args));\r\n          }\r\n          return this.func.apply(this, args);\r\n      };\r\n      return functionCaller;\r\n  }());\n\n  //\r\n  // A function call node.\r\n  //\r\n  var Call = function (name, args, index, currentFileInfo) {\r\n      this.name = name;\r\n      this.args = args;\r\n      this.calc = name === 'calc';\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  Call.prototype = new Node();\r\n  Call.prototype.accept = function (visitor) {\r\n      if (this.args) {\r\n          this.args = visitor.visitArray(this.args);\r\n      }\r\n  };\r\n  //\r\n  // When evaluating a function call,\r\n  // we either find the function in the functionRegistry,\r\n  // in which case we call it, passing the  evaluated arguments,\r\n  // if this returns null or we cannot find the function, we\r\n  // simply print it out as it appeared originally [2].\r\n  //\r\n  // The reason why we evaluate the arguments, is in the case where\r\n  // we try to pass a variable to a function, like: `saturate(@color)`.\r\n  // The function should receive the value, not the variable.\r\n  //\r\n  Call.prototype.eval = function (context) {\r\n      var _this = this;\r\n      /**\r\n       * Turn off math for calc(), and switch back on for evaluating nested functions\r\n       */\r\n      var currentMathContext = context.mathOn;\r\n      context.mathOn = !this.calc;\r\n      if (this.calc || context.inCalc) {\r\n          context.enterCalc();\r\n      }\r\n      var exitCalc = function () {\r\n          if (_this.calc || context.inCalc) {\r\n              context.exitCalc();\r\n          }\r\n          context.mathOn = currentMathContext;\r\n      };\r\n      var result;\r\n      var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n      if (funcCaller.isValid()) {\r\n          try {\r\n              result = funcCaller.call(this.args);\r\n              exitCalc();\r\n          }\r\n          catch (e) {\r\n              if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                  throw e;\r\n              }\r\n              throw {\r\n                  type: e.type || 'Runtime',\r\n                  message: \"error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                  index: this.getIndex(),\r\n                  filename: this.fileInfo().filename,\r\n                  line: e.lineNumber,\r\n                  column: e.columnNumber\r\n              };\r\n          }\r\n          if (result !== null && result !== undefined) {\r\n              // Results that that are not nodes are cast as Anonymous nodes\r\n              // Falsy values or booleans are returned as empty nodes\r\n              if (!(result instanceof Node)) {\r\n                  if (!result || result === true) {\r\n                      result = new Anonymous(null);\r\n                  }\r\n                  else {\r\n                      result = new Anonymous(result.toString());\r\n                  }\r\n              }\r\n              result._index = this._index;\r\n              result._fileInfo = this._fileInfo;\r\n              return result;\r\n          }\r\n      }\r\n      var args = this.args.map(function (a) { return a.eval(context); });\r\n      exitCalc();\r\n      return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n  };\r\n  Call.prototype.genCSS = function (context, output) {\r\n      output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n      for (var i = 0; i < this.args.length; i++) {\r\n          this.args[i].genCSS(context, output);\r\n          if (i + 1 < this.args.length) {\r\n              output.add(', ');\r\n          }\r\n      }\r\n      output.add(')');\r\n  };\r\n  Call.prototype.type = 'Call';\n\n  var Variable = function (name, index, currentFileInfo) {\r\n      this.name = name;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  Variable.prototype = new Node();\r\n  Variable.prototype.eval = function (context) {\r\n      var variable;\r\n      var name = this.name;\r\n      if (name.indexOf('@@') === 0) {\r\n          name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n      }\r\n      if (this.evaluating) {\r\n          throw { type: 'Name', message: \"Recursive variable definition for \" + name, filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      this.evaluating = true;\r\n      variable = this.find(context.frames, function (frame) {\r\n          var v = frame.variable(name);\r\n          if (v) {\r\n              if (v.important) {\r\n                  var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                  importantScope.important = v.important;\r\n              }\r\n              // If in calc, wrap vars in a function call to cascade evaluate args first\r\n              if (context.inCalc) {\r\n                  return (new Call('_SELF', [v.value])).eval(context);\r\n              }\r\n              else {\r\n                  return v.value.eval(context);\r\n              }\r\n          }\r\n      });\r\n      if (variable) {\r\n          this.evaluating = false;\r\n          return variable;\r\n      }\r\n      else {\r\n          throw { type: 'Name', message: \"variable \" + name + \" is undefined\", filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n  };\r\n  Variable.prototype.find = function (obj, fun) {\r\n      for (var i = 0, r = void 0; i < obj.length; i++) {\r\n          r = fun.call(obj, obj[i]);\r\n          if (r) {\r\n              return r;\r\n          }\r\n      }\r\n      return null;\r\n  };\r\n  Variable.prototype.type = 'Variable';\n\n  var Property = function (name, index, currentFileInfo) {\r\n      this.name = name;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  Property.prototype = new Node();\r\n  Property.prototype.eval = function (context) {\r\n      var property;\r\n      var name = this.name;\r\n      // TODO: shorten this reference\r\n      var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n      if (this.evaluating) {\r\n          throw { type: 'Name', message: \"Recursive property reference for \" + name, filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      this.evaluating = true;\r\n      property = this.find(context.frames, function (frame) {\r\n          var v;\r\n          var vArr = frame.property(name);\r\n          if (vArr) {\r\n              for (var i = 0; i < vArr.length; i++) {\r\n                  v = vArr[i];\r\n                  vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n              }\r\n              mergeRules(vArr);\r\n              v = vArr[vArr.length - 1];\r\n              if (v.important) {\r\n                  var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                  importantScope.important = v.important;\r\n              }\r\n              v = v.value.eval(context);\r\n              return v;\r\n          }\r\n      });\r\n      if (property) {\r\n          this.evaluating = false;\r\n          return property;\r\n      }\r\n      else {\r\n          throw { type: 'Name', message: \"Property '\" + name + \"' is undefined\", filename: this.currentFileInfo.filename,\r\n              index: this.index };\r\n      }\r\n  };\r\n  Property.prototype.find = function (obj, fun) {\r\n      for (var i = 0, r = void 0; i < obj.length; i++) {\r\n          r = fun.call(obj, obj[i]);\r\n          if (r) {\r\n              return r;\r\n          }\r\n      }\r\n      return null;\r\n  };\r\n  Property.prototype.type = 'Property';\n\n  var Attribute = function (key, op, value) {\r\n      this.key = key;\r\n      this.op = op;\r\n      this.value = value;\r\n  };\r\n  Attribute.prototype = new Node();\r\n  Attribute.prototype.eval = function (context) {\r\n      return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\r\n  };\r\n  Attribute.prototype.genCSS = function (context, output) {\r\n      output.add(this.toCSS(context));\r\n  };\r\n  Attribute.prototype.toCSS = function (context) {\r\n      var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n      if (this.op) {\r\n          value += this.op;\r\n          value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n      }\r\n      return \"[\" + value + \"]\";\r\n  };\r\n  Attribute.prototype.type = 'Attribute';\n\n  var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n      this.escaped = (escaped == null) ? true : escaped;\r\n      this.value = content || '';\r\n      this.quote = str.charAt(0);\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n      this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n      this.allowRoot = escaped;\r\n  };\r\n  Quoted.prototype = new Node();\r\n  Quoted.prototype.genCSS = function (context, output) {\r\n      if (!this.escaped) {\r\n          output.add(this.quote, this.fileInfo(), this.getIndex());\r\n      }\r\n      output.add(this.value);\r\n      if (!this.escaped) {\r\n          output.add(this.quote);\r\n      }\r\n  };\r\n  Quoted.prototype.containsVariables = function () {\r\n      return this.value.match(this.variableRegex);\r\n  };\r\n  Quoted.prototype.eval = function (context) {\r\n      var that = this;\r\n      var value = this.value;\r\n      var variableReplacement = function (_, name) {\r\n          var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n          return (v instanceof Quoted) ? v.value : v.toCSS();\r\n      };\r\n      var propertyReplacement = function (_, name) {\r\n          var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n          return (v instanceof Quoted) ? v.value : v.toCSS();\r\n      };\r\n      function iterativeReplace(value, regexp, replacementFnc) {\r\n          var evaluatedValue = value;\r\n          do {\r\n              value = evaluatedValue.toString();\r\n              evaluatedValue = value.replace(regexp, replacementFnc);\r\n          } while (value !== evaluatedValue);\r\n          return evaluatedValue;\r\n      }\r\n      value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n      value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n      return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n  };\r\n  Quoted.prototype.compare = function (other) {\r\n      // when comparing quoted strings allow the quote to differ\r\n      if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n          return Node.numericCompare(this.value, other.value);\r\n      }\r\n      else {\r\n          return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n      }\r\n  };\r\n  Quoted.prototype.type = 'Quoted';\n\n  var URL = function (val, index, currentFileInfo, isEvald) {\r\n      this.value = val;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.isEvald = isEvald;\r\n  };\r\n  URL.prototype = new Node();\r\n  URL.prototype.accept = function (visitor) {\r\n      this.value = visitor.visit(this.value);\r\n  };\r\n  URL.prototype.genCSS = function (context, output) {\r\n      output.add('url(');\r\n      this.value.genCSS(context, output);\r\n      output.add(')');\r\n  };\r\n  URL.prototype.eval = function (context) {\r\n      var val = this.value.eval(context);\r\n      var rootpath;\r\n      if (!this.isEvald) {\r\n          // Add the rootpath if the URL requires a rewrite\r\n          rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n          if (typeof rootpath === 'string' &&\r\n              typeof val.value === 'string' &&\r\n              context.pathRequiresRewrite(val.value)) {\r\n              if (!val.quote) {\r\n                  rootpath = escapePath(rootpath);\r\n              }\r\n              val.value = context.rewritePath(val.value, rootpath);\r\n          }\r\n          else {\r\n              val.value = context.normalizePath(val.value);\r\n          }\r\n          // Add url args if enabled\r\n          if (context.urlArgs) {\r\n              if (!val.value.match(/^\\s*data:/)) {\r\n                  var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                  var urlArgs = delimiter + context.urlArgs;\r\n                  if (val.value.indexOf('#') !== -1) {\r\n                      val.value = val.value.replace('#', urlArgs + \"#\");\r\n                  }\r\n                  else {\r\n                      val.value += urlArgs;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n  };\r\n  URL.prototype.type = 'Url';\r\n  function escapePath(path) {\r\n      return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n  }\n\n  var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n      this.features = new Value(features);\r\n      this.rules = [new Ruleset(selectors, value)];\r\n      this.rules[0].allowImports = true;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n      this.setParent(selectors, this);\r\n      this.setParent(this.features, this);\r\n      this.setParent(this.rules, this);\r\n  };\r\n  Media.prototype = new AtRule();\r\n  Media.prototype.isRulesetLike = function () {\r\n      return true;\r\n  };\r\n  Media.prototype.accept = function (visitor) {\r\n      if (this.features) {\r\n          this.features = visitor.visit(this.features);\r\n      }\r\n      if (this.rules) {\r\n          this.rules = visitor.visitArray(this.rules);\r\n      }\r\n  };\r\n  Media.prototype.genCSS = function (context, output) {\r\n      output.add('@media ', this._fileInfo, this._index);\r\n      this.features.genCSS(context, output);\r\n      this.outputRuleset(context, output, this.rules);\r\n  };\r\n  Media.prototype.eval = function (context) {\r\n      if (!context.mediaBlocks) {\r\n          context.mediaBlocks = [];\r\n          context.mediaPath = [];\r\n      }\r\n      var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n      if (this.debugInfo) {\r\n          this.rules[0].debugInfo = this.debugInfo;\r\n          media.debugInfo = this.debugInfo;\r\n      }\r\n      media.features = this.features.eval(context);\r\n      context.mediaPath.push(media);\r\n      context.mediaBlocks.push(media);\r\n      this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n      context.frames.unshift(this.rules[0]);\r\n      media.rules = [this.rules[0].eval(context)];\r\n      context.frames.shift();\r\n      context.mediaPath.pop();\r\n      return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n          media.evalNested(context);\r\n  };\r\n  Media.prototype.evalTop = function (context) {\r\n      var result = this;\r\n      // Render all dependent Media blocks.\r\n      if (context.mediaBlocks.length > 1) {\r\n          var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n          result = new Ruleset(selectors, context.mediaBlocks);\r\n          result.multiMedia = true;\r\n          result.copyVisibilityInfo(this.visibilityInfo());\r\n          this.setParent(result, this);\r\n      }\r\n      delete context.mediaBlocks;\r\n      delete context.mediaPath;\r\n      return result;\r\n  };\r\n  Media.prototype.evalNested = function (context) {\r\n      var i;\r\n      var value;\r\n      var path = context.mediaPath.concat([this]);\r\n      // Extract the media-query conditions separated with `,` (OR).\r\n      for (i = 0; i < path.length; i++) {\r\n          value = path[i].features instanceof Value ?\r\n              path[i].features.value : path[i].features;\r\n          path[i] = Array.isArray(value) ? value : [value];\r\n      }\r\n      // Trace all permutations to generate the resulting media-query.\r\n      //\r\n      // (a, b and c) with nested (d, e) ->\r\n      //    a and d\r\n      //    a and e\r\n      //    b and c and d\r\n      //    b and c and e\r\n      this.features = new Value(this.permute(path).map(function (path) {\r\n          path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n          for (i = path.length - 1; i > 0; i--) {\r\n              path.splice(i, 0, new Anonymous('and'));\r\n          }\r\n          return new Expression(path);\r\n      }));\r\n      this.setParent(this.features, this);\r\n      // Fake a tree-node that doesn't output anything.\r\n      return new Ruleset([], []);\r\n  };\r\n  Media.prototype.permute = function (arr) {\r\n      if (arr.length === 0) {\r\n          return [];\r\n      }\r\n      else if (arr.length === 1) {\r\n          return arr[0];\r\n      }\r\n      else {\r\n          var result = [];\r\n          var rest = this.permute(arr.slice(1));\r\n          for (var i = 0; i < rest.length; i++) {\r\n              for (var j = 0; j < arr[0].length; j++) {\r\n                  result.push([arr[0][j]].concat(rest[i]));\r\n              }\r\n          }\r\n          return result;\r\n      }\r\n  };\r\n  Media.prototype.bubbleSelectors = function (selectors) {\r\n      if (!selectors) {\r\n          return;\r\n      }\r\n      this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n      this.setParent(this.rules, this);\r\n  };\r\n  Media.prototype.type = 'Media';\n\n  //\r\n  // CSS @import node\r\n  //\r\n  // The general strategy here is that we don't want to wait\r\n  // for the parsing to be completed, before we start importing\r\n  // the file. That's because in the context of a browser,\r\n  // most of the time will be spent waiting for the server to respond.\r\n  //\r\n  // On creation, we push the import path to our import queue, though\r\n  // `import,push`, we also pass it a callback, which it'll call once\r\n  // the file has been fetched, and parsed.\r\n  //\r\n  var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n      this.options = options;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.path = path;\r\n      this.features = features;\r\n      this.allowRoot = true;\r\n      if (this.options.less !== undefined || this.options.inline) {\r\n          this.css = !this.options.less || this.options.inline;\r\n      }\r\n      else {\r\n          var pathValue = this.getPath();\r\n          if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n              this.css = true;\r\n          }\r\n      }\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.setParent(this.features, this);\r\n      this.setParent(this.path, this);\r\n  };\r\n  Import.prototype = new Node();\r\n  Import.prototype.accept = function (visitor) {\r\n      if (this.features) {\r\n          this.features = visitor.visit(this.features);\r\n      }\r\n      this.path = visitor.visit(this.path);\r\n      if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n          this.root = visitor.visit(this.root);\r\n      }\r\n  };\r\n  Import.prototype.genCSS = function (context, output) {\r\n      if (this.css && this.path._fileInfo.reference === undefined) {\r\n          output.add('@import ', this._fileInfo, this._index);\r\n          this.path.genCSS(context, output);\r\n          if (this.features) {\r\n              output.add(' ');\r\n              this.features.genCSS(context, output);\r\n          }\r\n          output.add(';');\r\n      }\r\n  };\r\n  Import.prototype.getPath = function () {\r\n      return (this.path instanceof URL) ?\r\n          this.path.value.value : this.path.value;\r\n  };\r\n  Import.prototype.isVariableImport = function () {\r\n      var path = this.path;\r\n      if (path instanceof URL) {\r\n          path = path.value;\r\n      }\r\n      if (path instanceof Quoted) {\r\n          return path.containsVariables();\r\n      }\r\n      return true;\r\n  };\r\n  Import.prototype.evalForImport = function (context) {\r\n      var path = this.path;\r\n      if (path instanceof URL) {\r\n          path = path.value;\r\n      }\r\n      return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n  };\r\n  Import.prototype.evalPath = function (context) {\r\n      var path = this.path.eval(context);\r\n      var fileInfo = this._fileInfo;\r\n      if (!(path instanceof URL)) {\r\n          // Add the rootpath if the URL requires a rewrite\r\n          var pathValue = path.value;\r\n          if (fileInfo &&\r\n              pathValue &&\r\n              context.pathRequiresRewrite(pathValue)) {\r\n              path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n          }\r\n          else {\r\n              path.value = context.normalizePath(path.value);\r\n          }\r\n      }\r\n      return path;\r\n  };\r\n  Import.prototype.eval = function (context) {\r\n      var result = this.doEval(context);\r\n      if (this.options.reference || this.blocksVisibility()) {\r\n          if (result.length || result.length === 0) {\r\n              result.forEach(function (node) {\r\n                  node.addVisibilityBlock();\r\n              });\r\n          }\r\n          else {\r\n              result.addVisibilityBlock();\r\n          }\r\n      }\r\n      return result;\r\n  };\r\n  Import.prototype.doEval = function (context) {\r\n      var ruleset;\r\n      var registry;\r\n      var features = this.features && this.features.eval(context);\r\n      if (this.options.isPlugin) {\r\n          if (this.root && this.root.eval) {\r\n              try {\r\n                  this.root.eval(context);\r\n              }\r\n              catch (e) {\r\n                  e.message = 'Plugin error during evaluation';\r\n                  throw new LessError(e, this.root.imports, this.root.filename);\r\n              }\r\n          }\r\n          registry = context.frames[0] && context.frames[0].functionRegistry;\r\n          if (registry && this.root && this.root.functions) {\r\n              registry.addMultiple(this.root.functions);\r\n          }\r\n          return [];\r\n      }\r\n      if (this.skip) {\r\n          if (typeof this.skip === 'function') {\r\n              this.skip = this.skip();\r\n          }\r\n          if (this.skip) {\r\n              return [];\r\n          }\r\n      }\r\n      if (this.options.inline) {\r\n          var contents = new Anonymous(this.root, 0, {\r\n              filename: this.importedFilename,\r\n              reference: this.path._fileInfo && this.path._fileInfo.reference\r\n          }, true, true);\r\n          return this.features ? new Media([contents], this.features.value) : [contents];\r\n      }\r\n      else if (this.css) {\r\n          var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n          if (!newImport.css && this.error) {\r\n              throw this.error;\r\n          }\r\n          return newImport;\r\n      }\r\n      else if (this.root) {\r\n          ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n          ruleset.evalImports(context);\r\n          return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n      }\r\n      else {\r\n          return [];\r\n      }\r\n  };\r\n  Import.prototype.type = 'Import';\n\n  var JsEvalNode = function () { };\r\n  JsEvalNode.prototype = new Node();\r\n  JsEvalNode.prototype.evaluateJavaScript = function (expression, context) {\r\n      var result;\r\n      var that = this;\r\n      var evalContext = {};\r\n      if (!context.javascriptEnabled) {\r\n          throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n              filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) { return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context)); });\r\n      try {\r\n          expression = new Function(\"return (\" + expression + \")\");\r\n      }\r\n      catch (e) {\r\n          throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\", filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      var variables = context.frames[0].variables();\r\n      for (var k in variables) {\r\n          if (variables.hasOwnProperty(k)) {\r\n              /* jshint loopfunc:true */\r\n              evalContext[k.slice(1)] = {\r\n                  value: variables[k].value,\r\n                  toJS: function () {\r\n                      return this.value.eval(context).toCSS();\r\n                  }\r\n              };\r\n          }\r\n      }\r\n      try {\r\n          result = expression.call(evalContext);\r\n      }\r\n      catch (e) {\r\n          throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\", filename: this.fileInfo().filename,\r\n              index: this.getIndex() };\r\n      }\r\n      return result;\r\n  };\r\n  JsEvalNode.prototype.jsify = function (obj) {\r\n      if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n          return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n      }\r\n      else {\r\n          return obj.toCSS();\r\n      }\r\n  };\n\n  var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n      this.escaped = escaped;\r\n      this.expression = string;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n  };\r\n  JavaScript.prototype = new JsEvalNode();\r\n  JavaScript.prototype.eval = function (context) {\r\n      var result = this.evaluateJavaScript(this.expression, context);\r\n      var type = typeof result;\r\n      if (type === 'number' && !isNaN(result)) {\r\n          return new Dimension(result);\r\n      }\r\n      else if (type === 'string') {\r\n          return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n      }\r\n      else if (Array.isArray(result)) {\r\n          return new Anonymous(result.join(', '));\r\n      }\r\n      else {\r\n          return new Anonymous(result);\r\n      }\r\n  };\r\n  JavaScript.prototype.type = 'JavaScript';\n\n  var Assignment = function (key, val) {\r\n      this.key = key;\r\n      this.value = val;\r\n  };\r\n  Assignment.prototype = new Node();\r\n  Assignment.prototype.accept = function (visitor) {\r\n      this.value = visitor.visit(this.value);\r\n  };\r\n  Assignment.prototype.eval = function (context) {\r\n      if (this.value.eval) {\r\n          return new Assignment(this.key, this.value.eval(context));\r\n      }\r\n      return this;\r\n  };\r\n  Assignment.prototype.genCSS = function (context, output) {\r\n      output.add(this.key + \"=\");\r\n      if (this.value.genCSS) {\r\n          this.value.genCSS(context, output);\r\n      }\r\n      else {\r\n          output.add(this.value);\r\n      }\r\n  };\r\n  Assignment.prototype.type = 'Assignment';\n\n  var Condition = function (op, l, r, i, negate) {\r\n      this.op = op.trim();\r\n      this.lvalue = l;\r\n      this.rvalue = r;\r\n      this._index = i;\r\n      this.negate = negate;\r\n  };\r\n  Condition.prototype = new Node();\r\n  Condition.prototype.accept = function (visitor) {\r\n      this.lvalue = visitor.visit(this.lvalue);\r\n      this.rvalue = visitor.visit(this.rvalue);\r\n  };\r\n  Condition.prototype.eval = function (context) {\r\n      var result = (function (op, a, b) {\r\n          switch (op) {\r\n              case 'and': return a && b;\r\n              case 'or': return a || b;\r\n              default:\r\n                  switch (Node.compare(a, b)) {\r\n                      case -1:\r\n                          return op === '<' || op === '=<' || op === '<=';\r\n                      case 0:\r\n                          return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                      case 1:\r\n                          return op === '>' || op === '>=';\r\n                      default:\r\n                          return false;\r\n                  }\r\n          }\r\n      })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n      return this.negate ? !result : result;\r\n  };\r\n  Condition.prototype.type = 'Condition';\n\n  var UnicodeDescriptor = function (value) {\r\n      this.value = value;\r\n  };\r\n  UnicodeDescriptor.prototype = new Node();\r\n  UnicodeDescriptor.prototype.type = 'UnicodeDescriptor';\n\n  var Negative = function (node) {\r\n      this.value = node;\r\n  };\r\n  Negative.prototype = new Node();\r\n  Negative.prototype.genCSS = function (context, output) {\r\n      output.add('-');\r\n      this.value.genCSS(context, output);\r\n  };\r\n  Negative.prototype.eval = function (context) {\r\n      if (context.isMathOn()) {\r\n          return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n      }\r\n      return new Negative(this.value.eval(context));\r\n  };\r\n  Negative.prototype.type = 'Negative';\n\n  var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n      this.selector = selector;\r\n      this.option = option;\r\n      this.object_id = Extend.next_id++;\r\n      this.parent_ids = [this.object_id];\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n      switch (option) {\r\n          case 'all':\r\n              this.allowBefore = true;\r\n              this.allowAfter = true;\r\n              break;\r\n          default:\r\n              this.allowBefore = false;\r\n              this.allowAfter = false;\r\n              break;\r\n      }\r\n      this.setParent(this.selector, this);\r\n  };\r\n  Extend.prototype = new Node();\r\n  Extend.prototype.accept = function (visitor) {\r\n      this.selector = visitor.visit(this.selector);\r\n  };\r\n  Extend.prototype.eval = function (context) {\r\n      return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  Extend.prototype.clone = function (context) {\r\n      return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n  };\r\n  // it concatenates (joins) all selectors in selector array\r\n  Extend.prototype.findSelfSelectors = function (selectors) {\r\n      var selfElements = [];\r\n      var i;\r\n      var selectorElements;\r\n      for (i = 0; i < selectors.length; i++) {\r\n          selectorElements = selectors[i].elements;\r\n          // duplicate the logic in genCSS function inside the selector node.\r\n          // future TODO - move both logics into the selector joiner visitor\r\n          if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n              selectorElements[0].combinator.value = ' ';\r\n          }\r\n          selfElements = selfElements.concat(selectors[i].elements);\r\n      }\r\n      this.selfSelectors = [new Selector(selfElements)];\r\n      this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n  };\r\n  /**\r\n   * Used with the extend visitor\r\n   */\r\n  Extend.next_id = 0;\r\n  Extend.prototype.type = 'Extend';\n\n  var VariableCall = function (variable, index, currentFileInfo) {\r\n      this.variable = variable;\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.allowRoot = true;\r\n  };\r\n  VariableCall.prototype = new Node();\r\n  VariableCall.prototype.eval = function (context) {\r\n      var rules;\r\n      var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n      var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n      if (!detachedRuleset.ruleset) {\r\n          if (detachedRuleset.rules) {\r\n              rules = detachedRuleset;\r\n          }\r\n          else if (Array.isArray(detachedRuleset)) {\r\n              rules = new Ruleset('', detachedRuleset);\r\n          }\r\n          else if (Array.isArray(detachedRuleset.value)) {\r\n              rules = new Ruleset('', detachedRuleset.value);\r\n          }\r\n          else {\r\n              throw error;\r\n          }\r\n          detachedRuleset = new DetachedRuleset(rules);\r\n      }\r\n      if (detachedRuleset.ruleset) {\r\n          return detachedRuleset.callEval(context);\r\n      }\r\n      throw error;\r\n  };\r\n  VariableCall.prototype.type = 'VariableCall';\n\n  var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n      this.value = ruleCall;\r\n      this.lookups = lookups;\r\n      this._index = index;\r\n      this._fileInfo = fileInfo;\r\n  };\r\n  NamespaceValue.prototype = new Node();\r\n  NamespaceValue.prototype.eval = function (context) {\r\n      var i;\r\n      var name;\r\n      var rules = this.value.eval(context);\r\n      for (i = 0; i < this.lookups.length; i++) {\r\n          name = this.lookups[i];\r\n          /**\r\n           * Eval'd DRs return rulesets.\r\n           * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n           * We need to do this because of late parsing of values\r\n           */\r\n          if (Array.isArray(rules)) {\r\n              rules = new Ruleset([new Selector()], rules);\r\n          }\r\n          if (name === '') {\r\n              rules = rules.lastDeclaration();\r\n          }\r\n          else if (name.charAt(0) === '@') {\r\n              if (name.charAt(1) === '@') {\r\n                  name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n              }\r\n              if (rules.variables) {\r\n                  rules = rules.variable(name);\r\n              }\r\n              if (!rules) {\r\n                  throw { type: 'Name', message: \"variable \" + name + \" not found\", filename: this.fileInfo().filename,\r\n                      index: this.getIndex() };\r\n              }\r\n          }\r\n          else {\r\n              if (name.substring(0, 2) === '$@') {\r\n                  name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n              }\r\n              else {\r\n                  name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n              }\r\n              if (rules.properties) {\r\n                  rules = rules.property(name);\r\n              }\r\n              if (!rules) {\r\n                  throw { type: 'Name', message: \"property \\\"\" + name.substr(1) + \"\\\" not found\", filename: this.fileInfo().filename,\r\n                      index: this.getIndex() };\r\n              }\r\n              // Properties are an array of values, since a ruleset can have multiple props.\r\n              // We pick the last one (the \"cascaded\" value)\r\n              rules = rules[rules.length - 1];\r\n          }\r\n          if (rules.value) {\r\n              rules = rules.eval(context).value;\r\n          }\r\n          if (rules.ruleset) {\r\n              rules = rules.ruleset.eval(context);\r\n          }\r\n      }\r\n      return rules;\r\n  };\r\n  NamespaceValue.prototype.type = 'NamespaceValue';\n\n  var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n      this.name = name || 'anonymous mixin';\r\n      this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n      this.params = params;\r\n      this.condition = condition;\r\n      this.variadic = variadic;\r\n      this.arity = params.length;\r\n      this.rules = rules;\r\n      this._lookups = {};\r\n      var optionalParameters = [];\r\n      this.required = params.reduce(function (count, p) {\r\n          if (!p.name || (p.name && !p.value)) {\r\n              return count + 1;\r\n          }\r\n          else {\r\n              optionalParameters.push(p.name);\r\n              return count;\r\n          }\r\n      }, 0);\r\n      this.optionalParameters = optionalParameters;\r\n      this.frames = frames;\r\n      this.copyVisibilityInfo(visibilityInfo);\r\n      this.allowRoot = true;\r\n  };\r\n  Definition.prototype = new Ruleset();\r\n  Definition.prototype.accept = function (visitor) {\r\n      if (this.params && this.params.length) {\r\n          this.params = visitor.visitArray(this.params);\r\n      }\r\n      this.rules = visitor.visitArray(this.rules);\r\n      if (this.condition) {\r\n          this.condition = visitor.visit(this.condition);\r\n      }\r\n  };\r\n  Definition.prototype.evalParams = function (context, mixinEnv, args, evaldArguments) {\r\n      /* jshint boss:true */\r\n      var frame = new Ruleset(null, null);\r\n      var varargs;\r\n      var arg;\r\n      var params = copyArray(this.params);\r\n      var i;\r\n      var j;\r\n      var val;\r\n      var name;\r\n      var isNamedFound;\r\n      var argIndex;\r\n      var argsLength = 0;\r\n      if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n          frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n      }\r\n      mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n      if (args) {\r\n          args = copyArray(args);\r\n          argsLength = args.length;\r\n          for (i = 0; i < argsLength; i++) {\r\n              arg = args[i];\r\n              if (name = (arg && arg.name)) {\r\n                  isNamedFound = false;\r\n                  for (j = 0; j < params.length; j++) {\r\n                      if (!evaldArguments[j] && name === params[j].name) {\r\n                          evaldArguments[j] = arg.value.eval(context);\r\n                          frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                          isNamedFound = true;\r\n                          break;\r\n                      }\r\n                  }\r\n                  if (isNamedFound) {\r\n                      args.splice(i, 1);\r\n                      i--;\r\n                      continue;\r\n                  }\r\n                  else {\r\n                      throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      argIndex = 0;\r\n      for (i = 0; i < params.length; i++) {\r\n          if (evaldArguments[i]) {\r\n              continue;\r\n          }\r\n          arg = args && args[argIndex];\r\n          if (name = params[i].name) {\r\n              if (params[i].variadic) {\r\n                  varargs = [];\r\n                  for (j = argIndex; j < argsLength; j++) {\r\n                      varargs.push(args[j].value.eval(context));\r\n                  }\r\n                  frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n              }\r\n              else {\r\n                  val = arg && arg.value;\r\n                  if (val) {\r\n                      // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                      if (Array.isArray(val)) {\r\n                          val = new DetachedRuleset(new Ruleset('', val));\r\n                      }\r\n                      else {\r\n                          val = val.eval(context);\r\n                      }\r\n                  }\r\n                  else if (params[i].value) {\r\n                      val = params[i].value.eval(mixinEnv);\r\n                      frame.resetCache();\r\n                  }\r\n                  else {\r\n                      throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                  }\r\n                  frame.prependRule(new Declaration(name, val));\r\n                  evaldArguments[i] = val;\r\n              }\r\n          }\r\n          if (params[i].variadic && args) {\r\n              for (j = argIndex; j < argsLength; j++) {\r\n                  evaldArguments[j] = args[j].value.eval(context);\r\n              }\r\n          }\r\n          argIndex++;\r\n      }\r\n      return frame;\r\n  };\r\n  Definition.prototype.makeImportant = function () {\r\n      var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n          if (r.makeImportant) {\r\n              return r.makeImportant(true);\r\n          }\r\n          else {\r\n              return r;\r\n          }\r\n      });\r\n      var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n      return result;\r\n  };\r\n  Definition.prototype.eval = function (context) {\r\n      return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n  };\r\n  Definition.prototype.evalCall = function (context, args, important) {\r\n      var _arguments = [];\r\n      var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n      var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n      var rules;\r\n      var ruleset;\r\n      frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n      rules = copyArray(this.rules);\r\n      ruleset = new Ruleset(null, rules);\r\n      ruleset.originalRuleset = this;\r\n      ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n      if (important) {\r\n          ruleset = ruleset.makeImportant();\r\n      }\r\n      return ruleset;\r\n  };\r\n  Definition.prototype.matchCondition = function (args, context) {\r\n      if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n          .concat(this.frames || []) // the parent namespace/mixin frames\r\n          .concat(context.frames)))) { // the current environment frames\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n  Definition.prototype.matchArgs = function (args, context) {\r\n      var allArgsCnt = (args && args.length) || 0;\r\n      var len;\r\n      var optionalParameters = this.optionalParameters;\r\n      var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n          if (optionalParameters.indexOf(p.name) < 0) {\r\n              return count + 1;\r\n          }\r\n          else {\r\n              return count;\r\n          }\r\n      }, 0);\r\n      if (!this.variadic) {\r\n          if (requiredArgsCnt < this.required) {\r\n              return false;\r\n          }\r\n          if (allArgsCnt > this.params.length) {\r\n              return false;\r\n          }\r\n      }\r\n      else {\r\n          if (requiredArgsCnt < (this.required - 1)) {\r\n              return false;\r\n          }\r\n      }\r\n      // check patterns\r\n      len = Math.min(requiredArgsCnt, this.arity);\r\n      for (var i = 0; i < len; i++) {\r\n          if (!this.params[i].name && !this.params[i].variadic) {\r\n              if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                  return false;\r\n              }\r\n          }\r\n      }\r\n      return true;\r\n  };\r\n  Definition.prototype.type = 'MixinDefinition';\r\n  Definition.prototype.evalFirst = true;\n\n  var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n      this.selector = new Selector(elements);\r\n      this.arguments = args || [];\r\n      this._index = index;\r\n      this._fileInfo = currentFileInfo;\r\n      this.important = important;\r\n      this.allowRoot = true;\r\n      this.setParent(this.selector, this);\r\n  };\r\n  MixinCall.prototype = new Node();\r\n  MixinCall.prototype.accept = function (visitor) {\r\n      if (this.selector) {\r\n          this.selector = visitor.visit(this.selector);\r\n      }\r\n      if (this.arguments.length) {\r\n          this.arguments = visitor.visitArray(this.arguments);\r\n      }\r\n  };\r\n  MixinCall.prototype.eval = function (context) {\r\n      var mixins;\r\n      var mixin;\r\n      var mixinPath;\r\n      var args = [];\r\n      var arg;\r\n      var argValue;\r\n      var rules = [];\r\n      var match = false;\r\n      var i;\r\n      var m;\r\n      var f;\r\n      var isRecursive;\r\n      var isOneFound;\r\n      var candidates = [];\r\n      var candidate;\r\n      var conditionResult = [];\r\n      var defaultResult;\r\n      var defFalseEitherCase = -1;\r\n      var defNone = 0;\r\n      var defTrue = 1;\r\n      var defFalse = 2;\r\n      var count;\r\n      var originalRuleset;\r\n      var noArgumentsFilter;\r\n      this.selector = this.selector.eval(context);\r\n      function calcDefGroup(mixin, mixinPath) {\r\n          var f;\r\n          var p;\r\n          var namespace;\r\n          for (f = 0; f < 2; f++) {\r\n              conditionResult[f] = true;\r\n              defaultFunc.value(f);\r\n              for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                  namespace = mixinPath[p];\r\n                  if (namespace.matchCondition) {\r\n                      conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                  }\r\n              }\r\n              if (mixin.matchCondition) {\r\n                  conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n              }\r\n          }\r\n          if (conditionResult[0] || conditionResult[1]) {\r\n              if (conditionResult[0] != conditionResult[1]) {\r\n                  return conditionResult[1] ?\r\n                      defTrue : defFalse;\r\n              }\r\n              return defNone;\r\n          }\r\n          return defFalseEitherCase;\r\n      }\r\n      for (i = 0; i < this.arguments.length; i++) {\r\n          arg = this.arguments[i];\r\n          argValue = arg.value.eval(context);\r\n          if (arg.expand && Array.isArray(argValue.value)) {\r\n              argValue = argValue.value;\r\n              for (m = 0; m < argValue.length; m++) {\r\n                  args.push({ value: argValue[m] });\r\n              }\r\n          }\r\n          else {\r\n              args.push({ name: arg.name, value: argValue });\r\n          }\r\n      }\r\n      noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n      for (i = 0; i < context.frames.length; i++) {\r\n          if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n              isOneFound = true;\r\n              // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n              // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n              // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n              // we make a final decision.\r\n              for (m = 0; m < mixins.length; m++) {\r\n                  mixin = mixins[m].rule;\r\n                  mixinPath = mixins[m].path;\r\n                  isRecursive = false;\r\n                  for (f = 0; f < context.frames.length; f++) {\r\n                      if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                          isRecursive = true;\r\n                          break;\r\n                      }\r\n                  }\r\n                  if (isRecursive) {\r\n                      continue;\r\n                  }\r\n                  if (mixin.matchArgs(args, context)) {\r\n                      candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                      if (candidate.group !== defFalseEitherCase) {\r\n                          candidates.push(candidate);\r\n                      }\r\n                      match = true;\r\n                  }\r\n              }\r\n              defaultFunc.reset();\r\n              count = [0, 0, 0];\r\n              for (m = 0; m < candidates.length; m++) {\r\n                  count[candidates[m].group]++;\r\n              }\r\n              if (count[defNone] > 0) {\r\n                  defaultResult = defFalse;\r\n              }\r\n              else {\r\n                  defaultResult = defTrue;\r\n                  if ((count[defTrue] + count[defFalse]) > 1) {\r\n                      throw { type: 'Runtime', message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n                  }\r\n              }\r\n              for (m = 0; m < candidates.length; m++) {\r\n                  candidate = candidates[m].group;\r\n                  if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                      try {\r\n                          mixin = candidates[m].mixin;\r\n                          if (!(mixin instanceof Definition)) {\r\n                              originalRuleset = mixin.originalRuleset || mixin;\r\n                              mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                              mixin.originalRuleset = originalRuleset;\r\n                          }\r\n                          var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                          this._setVisibilityToReplacement(newRules);\r\n                          Array.prototype.push.apply(rules, newRules);\r\n                      }\r\n                      catch (e) {\r\n                          throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                      }\r\n                  }\r\n              }\r\n              if (match) {\r\n                  return rules;\r\n              }\r\n          }\r\n      }\r\n      if (isOneFound) {\r\n          throw { type: 'Runtime', message: \"No matching definition was found for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n      }\r\n      else {\r\n          throw { type: 'Name', message: this.selector.toCSS().trim() + \" is undefined\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n      }\r\n  };\r\n  MixinCall.prototype._setVisibilityToReplacement = function (replacement) {\r\n      var i;\r\n      var rule;\r\n      if (this.blocksVisibility()) {\r\n          for (i = 0; i < replacement.length; i++) {\r\n              rule = replacement[i];\r\n              rule.addVisibilityBlock();\r\n          }\r\n      }\r\n  };\r\n  MixinCall.prototype.format = function (args) {\r\n      return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n          var argValue = '';\r\n          if (a.name) {\r\n              argValue += a.name + \":\";\r\n          }\r\n          if (a.value.toCSS) {\r\n              argValue += a.value.toCSS();\r\n          }\r\n          else {\r\n              argValue += '???';\r\n          }\r\n          return argValue;\r\n      }).join(', ') : '') + \")\";\r\n  };\r\n  MixinCall.prototype.type = 'MixinCall';\n\n  var tree = {\r\n      Node: Node, Color: Color, AtRule: AtRule, DetachedRuleset: DetachedRuleset, Operation: Operation,\r\n      Dimension: Dimension, Unit: Unit, Keyword: Keyword, Variable: Variable, Property: Property,\r\n      Ruleset: Ruleset, Element: Element, Attribute: Attribute, Combinator: Combinator, Selector: Selector,\r\n      Quoted: Quoted, Expression: Expression, Declaration: Declaration, Call: Call, URL: URL, Import: Import,\r\n      Comment: Comment, Anonymous: Anonymous, Value: Value, JavaScript: JavaScript, Assignment: Assignment,\r\n      Condition: Condition, Paren: Paren, Media: Media, UnicodeDescriptor: UnicodeDescriptor, Negative: Negative,\r\n      Extend: Extend, VariableCall: VariableCall, NamespaceValue: NamespaceValue,\r\n      mixin: {\r\n          Call: MixinCall,\r\n          Definition: Definition\r\n      }\r\n  };\n\n  var logger = {\r\n      error: function (msg) {\r\n          this._fireEvent('error', msg);\r\n      },\r\n      warn: function (msg) {\r\n          this._fireEvent('warn', msg);\r\n      },\r\n      info: function (msg) {\r\n          this._fireEvent('info', msg);\r\n      },\r\n      debug: function (msg) {\r\n          this._fireEvent('debug', msg);\r\n      },\r\n      addListener: function (listener) {\r\n          this._listeners.push(listener);\r\n      },\r\n      removeListener: function (listener) {\r\n          for (var i = 0; i < this._listeners.length; i++) {\r\n              if (this._listeners[i] === listener) {\r\n                  this._listeners.splice(i, 1);\r\n                  return;\r\n              }\r\n          }\r\n      },\r\n      _fireEvent: function (type, msg) {\r\n          for (var i = 0; i < this._listeners.length; i++) {\r\n              var logFunction = this._listeners[i][type];\r\n              if (logFunction) {\r\n                  logFunction(msg);\r\n              }\r\n          }\r\n      },\r\n      _listeners: []\r\n  };\n\n  /**\r\n   * @todo Document why this abstraction exists, and the relationship between\r\n   *       environment, file managers, and plugin manager\r\n   */\r\n  var environment = /** @class */ (function () {\r\n      function environment(externalEnvironment, fileManagers) {\r\n          this.fileManagers = fileManagers || [];\r\n          externalEnvironment = externalEnvironment || {};\r\n          var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n          var requiredFunctions = [];\r\n          var functions = requiredFunctions.concat(optionalFunctions);\r\n          for (var i = 0; i < functions.length; i++) {\r\n              var propName = functions[i];\r\n              var environmentFunc = externalEnvironment[propName];\r\n              if (environmentFunc) {\r\n                  this[propName] = environmentFunc.bind(externalEnvironment);\r\n              }\r\n              else if (i < requiredFunctions.length) {\r\n                  this.warn(\"missing required function in environment - \" + propName);\r\n              }\r\n          }\r\n      }\r\n      environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n          if (!filename) {\r\n              logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n          }\r\n          if (currentDirectory == null) {\r\n              logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n          }\r\n          var fileManagers = this.fileManagers;\r\n          if (options.pluginManager) {\r\n              fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n          }\r\n          for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n              var fileManager = fileManagers[i];\r\n              if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                  return fileManager;\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      environment.prototype.addFileManager = function (fileManager) {\r\n          this.fileManagers.push(fileManager);\r\n      };\r\n      environment.prototype.clearFileManagers = function () {\r\n          this.fileManagers = [];\r\n      };\r\n      return environment;\r\n  }());\n\n  var AbstractFileManager = /** @class */ (function () {\r\n      function AbstractFileManager() {\r\n      }\r\n      AbstractFileManager.prototype.getPath = function (filename) {\r\n          var j = filename.lastIndexOf('?');\r\n          if (j > 0) {\r\n              filename = filename.slice(0, j);\r\n          }\r\n          j = filename.lastIndexOf('/');\r\n          if (j < 0) {\r\n              j = filename.lastIndexOf('\\\\');\r\n          }\r\n          if (j < 0) {\r\n              return '';\r\n          }\r\n          return filename.slice(0, j + 1);\r\n      };\r\n      AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n          return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n      };\r\n      AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n          return this.tryAppendExtension(path, '.less');\r\n      };\r\n      AbstractFileManager.prototype.supportsSync = function () { return false; };\r\n      AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () { return false; };\r\n      AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n          return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n      };\r\n      // TODO: pull out / replace?\r\n      AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n          if (!basePath) {\r\n              return laterPath;\r\n          }\r\n          return basePath + laterPath;\r\n      };\r\n      AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n          // diff between two paths to create a relative path\r\n          var urlParts = this.extractUrlParts(url);\r\n          var baseUrlParts = this.extractUrlParts(baseUrl);\r\n          var i;\r\n          var max;\r\n          var urlDirectories;\r\n          var baseUrlDirectories;\r\n          var diff = '';\r\n          if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n              return '';\r\n          }\r\n          max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n          for (i = 0; i < max; i++) {\r\n              if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                  break;\r\n              }\r\n          }\r\n          baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n          urlDirectories = urlParts.directories.slice(i);\r\n          for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n              diff += '../';\r\n          }\r\n          for (i = 0; i < urlDirectories.length - 1; i++) {\r\n              diff += urlDirectories[i] + \"/\";\r\n          }\r\n          return diff;\r\n      };\r\n      // helper function, not part of API\r\n      AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n          // urlParts[1] = protocol://hostname/ OR /\r\n          // urlParts[2] = / if path relative to host base\r\n          // urlParts[3] = directories\r\n          // urlParts[4] = filename\r\n          // urlParts[5] = parameters\r\n          var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n          var urlParts = url.match(urlPartsRegex);\r\n          var returner = {};\r\n          var rawDirectories = [];\r\n          var directories = [];\r\n          var i;\r\n          var baseUrlParts;\r\n          if (!urlParts) {\r\n              throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n          }\r\n          // Stylesheets in IE don't always return the full path\r\n          if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n              baseUrlParts = baseUrl.match(urlPartsRegex);\r\n              if (!baseUrlParts) {\r\n                  throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n              }\r\n              urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n              if (!urlParts[2]) {\r\n                  urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n              }\r\n          }\r\n          if (urlParts[3]) {\r\n              rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n              // collapse '..' and skip '.'\r\n              for (i = 0; i < rawDirectories.length; i++) {\r\n                  if (rawDirectories[i] === '..') {\r\n                      directories.pop();\r\n                  }\r\n                  else if (rawDirectories[i] !== '.') {\r\n                      directories.push(rawDirectories[i]);\r\n                  }\r\n              }\r\n          }\r\n          returner.hostPart = urlParts[1];\r\n          returner.directories = directories;\r\n          returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n          returner.path = (urlParts[1] || '') + directories.join('/');\r\n          returner.filename = urlParts[4];\r\n          returner.fileUrl = returner.path + (urlParts[4] || '');\r\n          returner.url = returner.fileUrl + (urlParts[5] || '');\r\n          return returner;\r\n      };\r\n      return AbstractFileManager;\r\n  }());\n\n  var AbstractPluginLoader = /** @class */ (function () {\r\n      function AbstractPluginLoader() {\r\n          // Implemented by Node.js plugin loader\r\n          this.require = function () { return null; };\r\n      }\r\n      AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n          var loader;\r\n          var registry;\r\n          var pluginObj;\r\n          var localModule;\r\n          var pluginManager;\r\n          var filename;\r\n          var result;\r\n          pluginManager = context.pluginManager;\r\n          if (fileInfo) {\r\n              if (typeof fileInfo === 'string') {\r\n                  filename = fileInfo;\r\n              }\r\n              else {\r\n                  filename = fileInfo.filename;\r\n              }\r\n          }\r\n          var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n          if (filename) {\r\n              pluginObj = pluginManager.get(filename);\r\n              if (pluginObj) {\r\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                  if (result) {\r\n                      return result;\r\n                  }\r\n                  try {\r\n                      if (pluginObj.use) {\r\n                          pluginObj.use.call(this.context, pluginObj);\r\n                      }\r\n                  }\r\n                  catch (e) {\r\n                      e.message = e.message || 'Error during @plugin call';\r\n                      return new LessError(e, imports, filename);\r\n                  }\r\n                  return pluginObj;\r\n              }\r\n          }\r\n          localModule = {\r\n              exports: {},\r\n              pluginManager: pluginManager,\r\n              fileInfo: fileInfo\r\n          };\r\n          registry = functionRegistry.create();\r\n          var registerPlugin = function (obj) {\r\n              pluginObj = obj;\r\n          };\r\n          try {\r\n              loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n              loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n          }\r\n          catch (e) {\r\n              return new LessError(e, imports, filename);\r\n          }\r\n          if (!pluginObj) {\r\n              pluginObj = localModule.exports;\r\n          }\r\n          pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n          if (pluginObj instanceof LessError) {\r\n              return pluginObj;\r\n          }\r\n          if (pluginObj) {\r\n              pluginObj.imports = imports;\r\n              pluginObj.filename = filename;\r\n              // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n              if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                  if (result) {\r\n                      return result;\r\n                  }\r\n              }\r\n              // Run on first load\r\n              pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n              pluginObj.functions = registry.getLocalFunctions();\r\n              // Need to call setOptions again because the pluginObj might have functions\r\n              result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n              if (result) {\r\n                  return result;\r\n              }\r\n              // Run every @plugin call\r\n              try {\r\n                  if (pluginObj.use) {\r\n                      pluginObj.use.call(this.context, pluginObj);\r\n                  }\r\n              }\r\n              catch (e) {\r\n                  e.message = e.message || 'Error during @plugin call';\r\n                  return new LessError(e, imports, filename);\r\n              }\r\n          }\r\n          else {\r\n              return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n          }\r\n          return pluginObj;\r\n      };\r\n      AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n          if (options && !plugin.setOptions) {\r\n              return new LessError({\r\n                  message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n              });\r\n          }\r\n          try {\r\n              plugin.setOptions && plugin.setOptions(options);\r\n          }\r\n          catch (e) {\r\n              return new LessError(e);\r\n          }\r\n      };\r\n      AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n          if (plugin) {\r\n              // support plugins being a function\r\n              // so that the plugin can be more usable programmatically\r\n              if (typeof plugin === 'function') {\r\n                  plugin = new plugin();\r\n              }\r\n              if (plugin.minVersion) {\r\n                  if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                      return new LessError({\r\n                          message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                      });\r\n                  }\r\n              }\r\n              return plugin;\r\n          }\r\n          return null;\r\n      };\r\n      AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n          if (typeof aVersion === 'string') {\r\n              aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n              aVersion.shift();\r\n          }\r\n          for (var i = 0; i < aVersion.length; i++) {\r\n              if (aVersion[i] !== bVersion[i]) {\r\n                  return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n              }\r\n          }\r\n          return 0;\r\n      };\r\n      AbstractPluginLoader.prototype.versionToString = function (version) {\r\n          var versionString = '';\r\n          for (var i = 0; i < version.length; i++) {\r\n              versionString += (versionString ? '.' : '') + version[i];\r\n          }\r\n          return versionString;\r\n      };\r\n      AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n          for (var i = 0; i < plugins.length; i++) {\r\n              var plugin = plugins[i];\r\n              if (plugin.printUsage) {\r\n                  plugin.printUsage();\r\n              }\r\n          }\r\n      };\r\n      return AbstractPluginLoader;\r\n  }());\n\n  var _visitArgs = { visitDeeper: true };\r\n  var _hasIndexed = false;\r\n  function _noop(node) {\r\n      return node;\r\n  }\r\n  function indexNodeTypes(parent, ticker) {\r\n      // add .typeIndex to tree node types for lookup table\r\n      var key;\r\n      var child;\r\n      for (key in parent) {\r\n          /* eslint guard-for-in: 0 */\r\n          child = parent[key];\r\n          switch (typeof child) {\r\n              case 'function':\r\n                  // ignore bound functions directly on tree which do not have a prototype\r\n                  // or aren't nodes\r\n                  if (child.prototype && child.prototype.type) {\r\n                      child.prototype.typeIndex = ticker++;\r\n                  }\r\n                  break;\r\n              case 'object':\r\n                  ticker = indexNodeTypes(child, ticker);\r\n                  break;\r\n          }\r\n      }\r\n      return ticker;\r\n  }\r\n  var Visitor = /** @class */ (function () {\r\n      function Visitor(implementation) {\r\n          this._implementation = implementation;\r\n          this._visitInCache = {};\r\n          this._visitOutCache = {};\r\n          if (!_hasIndexed) {\r\n              indexNodeTypes(tree, 1);\r\n              _hasIndexed = true;\r\n          }\r\n      }\r\n      Visitor.prototype.visit = function (node) {\r\n          if (!node) {\r\n              return node;\r\n          }\r\n          var nodeTypeIndex = node.typeIndex;\r\n          if (!nodeTypeIndex) {\r\n              // MixinCall args aren't a node type?\r\n              if (node.value && node.value.typeIndex) {\r\n                  this.visit(node.value);\r\n              }\r\n              return node;\r\n          }\r\n          var impl = this._implementation;\r\n          var func = this._visitInCache[nodeTypeIndex];\r\n          var funcOut = this._visitOutCache[nodeTypeIndex];\r\n          var visitArgs = _visitArgs;\r\n          var fnName;\r\n          visitArgs.visitDeeper = true;\r\n          if (!func) {\r\n              fnName = \"visit\" + node.type;\r\n              func = impl[fnName] || _noop;\r\n              funcOut = impl[fnName + \"Out\"] || _noop;\r\n              this._visitInCache[nodeTypeIndex] = func;\r\n              this._visitOutCache[nodeTypeIndex] = funcOut;\r\n          }\r\n          if (func !== _noop) {\r\n              var newNode = func.call(impl, node, visitArgs);\r\n              if (node && impl.isReplacing) {\r\n                  node = newNode;\r\n              }\r\n          }\r\n          if (visitArgs.visitDeeper && node) {\r\n              if (node.length) {\r\n                  for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                      if (node[i].accept) {\r\n                          node[i].accept(this);\r\n                      }\r\n                  }\r\n              }\r\n              else if (node.accept) {\r\n                  node.accept(this);\r\n              }\r\n          }\r\n          if (funcOut != _noop) {\r\n              funcOut.call(impl, node);\r\n          }\r\n          return node;\r\n      };\r\n      Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n          if (!nodes) {\r\n              return nodes;\r\n          }\r\n          var cnt = nodes.length;\r\n          var i;\r\n          // Non-replacing\r\n          if (nonReplacing || !this._implementation.isReplacing) {\r\n              for (i = 0; i < cnt; i++) {\r\n                  this.visit(nodes[i]);\r\n              }\r\n              return nodes;\r\n          }\r\n          // Replacing\r\n          var out = [];\r\n          for (i = 0; i < cnt; i++) {\r\n              var evald = this.visit(nodes[i]);\r\n              if (evald === undefined) {\r\n                  continue;\r\n              }\r\n              if (!evald.splice) {\r\n                  out.push(evald);\r\n              }\r\n              else if (evald.length) {\r\n                  this.flatten(evald, out);\r\n              }\r\n          }\r\n          return out;\r\n      };\r\n      Visitor.prototype.flatten = function (arr, out) {\r\n          if (!out) {\r\n              out = [];\r\n          }\r\n          var cnt;\r\n          var i;\r\n          var item;\r\n          var nestedCnt;\r\n          var j;\r\n          var nestedItem;\r\n          for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n              item = arr[i];\r\n              if (item === undefined) {\r\n                  continue;\r\n              }\r\n              if (!item.splice) {\r\n                  out.push(item);\r\n                  continue;\r\n              }\r\n              for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                  nestedItem = item[j];\r\n                  if (nestedItem === undefined) {\r\n                      continue;\r\n                  }\r\n                  if (!nestedItem.splice) {\r\n                      out.push(nestedItem);\r\n                  }\r\n                  else if (nestedItem.length) {\r\n                      this.flatten(nestedItem, out);\r\n                  }\r\n              }\r\n          }\r\n          return out;\r\n      };\r\n      return Visitor;\r\n  }());\n\n  var ImportSequencer = /** @class */ (function () {\r\n      function ImportSequencer(onSequencerEmpty) {\r\n          this.imports = [];\r\n          this.variableImports = [];\r\n          this._onSequencerEmpty = onSequencerEmpty;\r\n          this._currentDepth = 0;\r\n      }\r\n      ImportSequencer.prototype.addImport = function (callback) {\r\n          var importSequencer = this;\r\n          var importItem = {\r\n              callback: callback,\r\n              args: null,\r\n              isReady: false\r\n          };\r\n          this.imports.push(importItem);\r\n          return function () {\r\n              var args = [];\r\n              for (var _i = 0; _i < arguments.length; _i++) {\r\n                  args[_i] = arguments[_i];\r\n              }\r\n              importItem.args = Array.prototype.slice.call(args, 0);\r\n              importItem.isReady = true;\r\n              importSequencer.tryRun();\r\n          };\r\n      };\r\n      ImportSequencer.prototype.addVariableImport = function (callback) {\r\n          this.variableImports.push(callback);\r\n      };\r\n      ImportSequencer.prototype.tryRun = function () {\r\n          this._currentDepth++;\r\n          try {\r\n              while (true) {\r\n                  while (this.imports.length > 0) {\r\n                      var importItem = this.imports[0];\r\n                      if (!importItem.isReady) {\r\n                          return;\r\n                      }\r\n                      this.imports = this.imports.slice(1);\r\n                      importItem.callback.apply(null, importItem.args);\r\n                  }\r\n                  if (this.variableImports.length === 0) {\r\n                      break;\r\n                  }\r\n                  var variableImport = this.variableImports[0];\r\n                  this.variableImports = this.variableImports.slice(1);\r\n                  variableImport();\r\n              }\r\n          }\r\n          finally {\r\n              this._currentDepth--;\r\n          }\r\n          if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n              this._onSequencerEmpty();\r\n          }\r\n      };\r\n      return ImportSequencer;\r\n  }());\n\n  var ImportVisitor = function (importer, finish) {\r\n      this._visitor = new Visitor(this);\r\n      this._importer = importer;\r\n      this._finish = finish;\r\n      this.context = new contexts.Eval();\r\n      this.importCount = 0;\r\n      this.onceFileDetectionMap = {};\r\n      this.recursionDetector = {};\r\n      this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n  };\r\n  ImportVisitor.prototype = {\r\n      isReplacing: false,\r\n      run: function (root) {\r\n          try {\r\n              // process the contents\r\n              this._visitor.visit(root);\r\n          }\r\n          catch (e) {\r\n              this.error = e;\r\n          }\r\n          this.isFinished = true;\r\n          this._sequencer.tryRun();\r\n      },\r\n      _onSequencerEmpty: function () {\r\n          if (!this.isFinished) {\r\n              return;\r\n          }\r\n          this._finish(this.error);\r\n      },\r\n      visitImport: function (importNode, visitArgs) {\r\n          var inlineCSS = importNode.options.inline;\r\n          if (!importNode.css || inlineCSS) {\r\n              var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n              var importParent = context.frames[0];\r\n              this.importCount++;\r\n              if (importNode.isVariableImport()) {\r\n                  this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n              }\r\n              else {\r\n                  this.processImportNode(importNode, context, importParent);\r\n              }\r\n          }\r\n          visitArgs.visitDeeper = false;\r\n      },\r\n      processImportNode: function (importNode, context, importParent) {\r\n          var evaldImportNode;\r\n          var inlineCSS = importNode.options.inline;\r\n          try {\r\n              evaldImportNode = importNode.evalForImport(context);\r\n          }\r\n          catch (e) {\r\n              if (!e.filename) {\r\n                  e.index = importNode.getIndex();\r\n                  e.filename = importNode.fileInfo().filename;\r\n              }\r\n              // attempt to eval properly and treat as css\r\n              importNode.css = true;\r\n              // if that fails, this error will be thrown\r\n              importNode.error = e;\r\n          }\r\n          if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n              if (evaldImportNode.options.multiple) {\r\n                  context.importMultiple = true;\r\n              }\r\n              // try appending if we haven't determined if it is css or not\r\n              var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n              for (var i = 0; i < importParent.rules.length; i++) {\r\n                  if (importParent.rules[i] === importNode) {\r\n                      importParent.rules[i] = evaldImportNode;\r\n                      break;\r\n                  }\r\n              }\r\n              var onImported = this.onImported.bind(this, evaldImportNode, context);\r\n              var sequencedOnImported = this._sequencer.addImport(onImported);\r\n              this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n          }\r\n          else {\r\n              this.importCount--;\r\n              if (this.isFinished) {\r\n                  this._sequencer.tryRun();\r\n              }\r\n          }\r\n      },\r\n      onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n          if (e) {\r\n              if (!e.filename) {\r\n                  e.index = importNode.getIndex();\r\n                  e.filename = importNode.fileInfo().filename;\r\n              }\r\n              this.error = e;\r\n          }\r\n          var importVisitor = this;\r\n          var inlineCSS = importNode.options.inline;\r\n          var isPlugin = importNode.options.isPlugin;\r\n          var isOptional = importNode.options.optional;\r\n          var duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n          if (!context.importMultiple) {\r\n              if (duplicateImport) {\r\n                  importNode.skip = true;\r\n              }\r\n              else {\r\n                  importNode.skip = function () {\r\n                      if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                          return true;\r\n                      }\r\n                      importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                      return false;\r\n                  };\r\n              }\r\n          }\r\n          if (!fullPath && isOptional) {\r\n              importNode.skip = true;\r\n          }\r\n          if (root) {\r\n              importNode.root = root;\r\n              importNode.importedFilename = fullPath;\r\n              if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                  importVisitor.recursionDetector[fullPath] = true;\r\n                  var oldContext = this.context;\r\n                  this.context = context;\r\n                  try {\r\n                      this._visitor.visit(root);\r\n                  }\r\n                  catch (e) {\r\n                      this.error = e;\r\n                  }\r\n                  this.context = oldContext;\r\n              }\r\n          }\r\n          importVisitor.importCount--;\r\n          if (importVisitor.isFinished) {\r\n              importVisitor._sequencer.tryRun();\r\n          }\r\n      },\r\n      visitDeclaration: function (declNode, visitArgs) {\r\n          if (declNode.value.type === 'DetachedRuleset') {\r\n              this.context.frames.unshift(declNode);\r\n          }\r\n          else {\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n      },\r\n      visitDeclarationOut: function (declNode) {\r\n          if (declNode.value.type === 'DetachedRuleset') {\r\n              this.context.frames.shift();\r\n          }\r\n      },\r\n      visitAtRule: function (atRuleNode, visitArgs) {\r\n          this.context.frames.unshift(atRuleNode);\r\n      },\r\n      visitAtRuleOut: function (atRuleNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n          this.context.frames.unshift(mixinDefinitionNode);\r\n      },\r\n      visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitRuleset: function (rulesetNode, visitArgs) {\r\n          this.context.frames.unshift(rulesetNode);\r\n      },\r\n      visitRulesetOut: function (rulesetNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitMedia: function (mediaNode, visitArgs) {\r\n          this.context.frames.unshift(mediaNode.rules[0]);\r\n      },\r\n      visitMediaOut: function (mediaNode) {\r\n          this.context.frames.shift();\r\n      }\r\n  };\n\n  var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n      function SetTreeVisibilityVisitor(visible) {\r\n          this.visible = visible;\r\n      }\r\n      SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n          this.visit(root);\r\n      };\r\n      SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n          if (!nodes) {\r\n              return nodes;\r\n          }\r\n          var cnt = nodes.length;\r\n          var i;\r\n          for (i = 0; i < cnt; i++) {\r\n              this.visit(nodes[i]);\r\n          }\r\n          return nodes;\r\n      };\r\n      SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n          if (!node) {\r\n              return node;\r\n          }\r\n          if (node.constructor === Array) {\r\n              return this.visitArray(node);\r\n          }\r\n          if (!node.blocksVisibility || node.blocksVisibility()) {\r\n              return node;\r\n          }\r\n          if (this.visible) {\r\n              node.ensureVisibility();\r\n          }\r\n          else {\r\n              node.ensureInvisibility();\r\n          }\r\n          node.accept(this);\r\n          return node;\r\n      };\r\n      return SetTreeVisibilityVisitor;\r\n  }());\n\n  /* jshint loopfunc:true */\r\n  var ExtendFinderVisitor = /** @class */ (function () {\r\n      function ExtendFinderVisitor() {\r\n          this._visitor = new Visitor(this);\r\n          this.contexts = [];\r\n          this.allExtendsStack = [[]];\r\n      }\r\n      ExtendFinderVisitor.prototype.run = function (root) {\r\n          root = this._visitor.visit(root);\r\n          root.allExtends = this.allExtendsStack[0];\r\n          return root;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          if (rulesetNode.root) {\r\n              return;\r\n          }\r\n          var i;\r\n          var j;\r\n          var extend;\r\n          var allSelectorsExtendList = [];\r\n          var extendList;\r\n          // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n          var rules = rulesetNode.rules;\r\n          var ruleCnt = rules ? rules.length : 0;\r\n          for (i = 0; i < ruleCnt; i++) {\r\n              if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                  allSelectorsExtendList.push(rules[i]);\r\n                  rulesetNode.extendOnEveryPath = true;\r\n              }\r\n          }\r\n          // now find every selector and apply the extends that apply to all extends\r\n          // and the ones which apply to an individual extend\r\n          var paths = rulesetNode.paths;\r\n          for (i = 0; i < paths.length; i++) {\r\n              var selectorPath = paths[i];\r\n              var selector = selectorPath[selectorPath.length - 1];\r\n              var selExtendList = selector.extendList;\r\n              extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                  : allSelectorsExtendList;\r\n              if (extendList) {\r\n                  extendList = extendList.map(function (allSelectorsExtend) { return allSelectorsExtend.clone(); });\r\n              }\r\n              for (j = 0; j < extendList.length; j++) {\r\n                  this.foundExtends = true;\r\n                  extend = extendList[j];\r\n                  extend.findSelfSelectors(selectorPath);\r\n                  extend.ruleset = rulesetNode;\r\n                  if (j === 0) {\r\n                      extend.firstExtendOnThisSelectorPath = true;\r\n                  }\r\n                  this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n              }\r\n          }\r\n          this.contexts.push(rulesetNode.selectors);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n          if (!rulesetNode.root) {\r\n              this.contexts.length = this.contexts.length - 1;\r\n          }\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          mediaNode.allExtends = [];\r\n          this.allExtendsStack.push(mediaNode.allExtends);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          atRuleNode.allExtends = [];\r\n          this.allExtendsStack.push(atRuleNode.allExtends);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n      };\r\n      return ExtendFinderVisitor;\r\n  }());\r\n  var ProcessExtendsVisitor = /** @class */ (function () {\r\n      function ProcessExtendsVisitor() {\r\n          this._visitor = new Visitor(this);\r\n      }\r\n      ProcessExtendsVisitor.prototype.run = function (root) {\r\n          var extendFinder = new ExtendFinderVisitor();\r\n          this.extendIndices = {};\r\n          extendFinder.run(root);\r\n          if (!extendFinder.foundExtends) {\r\n              return root;\r\n          }\r\n          root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n          this.allExtendsStack = [root.allExtends];\r\n          var newRoot = this._visitor.visit(root);\r\n          this.checkExtendsForNonMatched(root.allExtends);\r\n          return newRoot;\r\n      };\r\n      ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n          var indices = this.extendIndices;\r\n          extendList.filter(function (extend) { return !extend.hasFoundMatches && extend.parent_ids.length == 1; }).forEach(function (extend) {\r\n              var selector = '_unknown_';\r\n              try {\r\n                  selector = extend.selector.toCSS({});\r\n              }\r\n              catch (_) { }\r\n              if (!indices[extend.index + \" \" + selector]) {\r\n                  indices[extend.index + \" \" + selector] = true;\r\n                  logger.warn(\"extend '\" + selector + \"' has no matches\");\r\n              }\r\n          });\r\n      };\r\n      ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n          //\r\n          // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n          // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n          // this means this new extend can then go and alter other extends\r\n          //\r\n          // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n          // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n          // processed if we look at each selector at a time, as is done in visitRuleset\r\n          var extendIndex;\r\n          var targetExtendIndex;\r\n          var matches;\r\n          var extendsToAdd = [];\r\n          var newSelector;\r\n          var extendVisitor = this;\r\n          var selectorPath;\r\n          var extend;\r\n          var targetExtend;\r\n          var newExtend;\r\n          iterationCount = iterationCount || 0;\r\n          // loop through comparing every extend with every target extend.\r\n          // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n          // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n          // and the second is the target.\r\n          // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n          // case when processing media queries\r\n          for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n              for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                  extend = extendsList[extendIndex];\r\n                  targetExtend = extendsListTarget[targetExtendIndex];\r\n                  // look for circular references\r\n                  if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                      continue;\r\n                  }\r\n                  // find a match in the target extends self selector (the bit before :extend)\r\n                  selectorPath = [targetExtend.selfSelectors[0]];\r\n                  matches = extendVisitor.findMatch(extend, selectorPath);\r\n                  if (matches.length) {\r\n                      extend.hasFoundMatches = true;\r\n                      // we found a match, so for each self selector..\r\n                      extend.selfSelectors.forEach(function (selfSelector) {\r\n                          var info = targetExtend.visibilityInfo();\r\n                          // process the extend as usual\r\n                          newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                          // but now we create a new extend from it\r\n                          newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                          newExtend.selfSelectors = newSelector;\r\n                          // add the extend onto the list of extends for that selector\r\n                          newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                          // record that we need to add it.\r\n                          extendsToAdd.push(newExtend);\r\n                          newExtend.ruleset = targetExtend.ruleset;\r\n                          // remember its parents for circular references\r\n                          newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                          // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                          // extends will look at the same selector path, so when extending\r\n                          // we know that any others will be duplicates in terms of what is added to the css\r\n                          if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                              newExtend.firstExtendOnThisSelectorPath = true;\r\n                              targetExtend.ruleset.paths.push(newSelector);\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n          if (extendsToAdd.length) {\r\n              // try to detect circular references to stop a stack overflow.\r\n              // may no longer be needed.\r\n              this.extendChainCount++;\r\n              if (iterationCount > 100) {\r\n                  var selectorOne = '{unable to calculate}';\r\n                  var selectorTwo = '{unable to calculate}';\r\n                  try {\r\n                      selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                      selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                  }\r\n                  catch (e) { }\r\n                  throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n              }\r\n              // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n              // d extending e...\r\n              return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n          }\r\n          else {\r\n              return extendsToAdd;\r\n          }\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          if (rulesetNode.root) {\r\n              return;\r\n          }\r\n          var matches;\r\n          var pathIndex;\r\n          var extendIndex;\r\n          var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n          var selectorsToAdd = [];\r\n          var extendVisitor = this;\r\n          var selectorPath;\r\n          // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n          for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n              for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                  selectorPath = rulesetNode.paths[pathIndex];\r\n                  // extending extends happens initially, before the main pass\r\n                  if (rulesetNode.extendOnEveryPath) {\r\n                      continue;\r\n                  }\r\n                  var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                  if (extendList && extendList.length) {\r\n                      continue;\r\n                  }\r\n                  matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                  if (matches.length) {\r\n                      allExtends[extendIndex].hasFoundMatches = true;\r\n                      allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                          var extendedSelectors;\r\n                          extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                          selectorsToAdd.push(extendedSelectors);\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n          rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n      };\r\n      ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n          //\r\n          // look through the haystack selector path to try and find the needle - extend.selector\r\n          // returns an array of selector matches that can then be replaced\r\n          //\r\n          var haystackSelectorIndex;\r\n          var hackstackSelector;\r\n          var hackstackElementIndex;\r\n          var haystackElement;\r\n          var targetCombinator;\r\n          var i;\r\n          var extendVisitor = this;\r\n          var needleElements = extend.selector.elements;\r\n          var potentialMatches = [];\r\n          var potentialMatch;\r\n          var matches = [];\r\n          // loop through the haystack elements\r\n          for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n              hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n              for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                  haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                  // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                  if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                      potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                          initialCombinator: haystackElement.combinator });\r\n                  }\r\n                  for (i = 0; i < potentialMatches.length; i++) {\r\n                      potentialMatch = potentialMatches[i];\r\n                      // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                      // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                      // work out what the resulting combinator will be\r\n                      targetCombinator = haystackElement.combinator.value;\r\n                      if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                          targetCombinator = ' ';\r\n                      }\r\n                      // if we don't match, null our match to indicate failure\r\n                      if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                          (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                          potentialMatch = null;\r\n                      }\r\n                      else {\r\n                          potentialMatch.matched++;\r\n                      }\r\n                      // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                      if (potentialMatch) {\r\n                          potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                          if (potentialMatch.finished &&\r\n                              (!extend.allowAfter &&\r\n                                  (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                              potentialMatch = null;\r\n                          }\r\n                      }\r\n                      // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                      if (potentialMatch) {\r\n                          if (potentialMatch.finished) {\r\n                              potentialMatch.length = needleElements.length;\r\n                              potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                              potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                              potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                              matches.push(potentialMatch);\r\n                          }\r\n                      }\r\n                      else {\r\n                          potentialMatches.splice(i, 1);\r\n                          i--;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return matches;\r\n      };\r\n      ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n          if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n              return elementValue1 === elementValue2;\r\n          }\r\n          if (elementValue1 instanceof tree.Attribute) {\r\n              if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                  return false;\r\n              }\r\n              if (!elementValue1.value || !elementValue2.value) {\r\n                  if (elementValue1.value || elementValue2.value) {\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              }\r\n              elementValue1 = elementValue1.value.value || elementValue1.value;\r\n              elementValue2 = elementValue2.value.value || elementValue2.value;\r\n              return elementValue1 === elementValue2;\r\n          }\r\n          elementValue1 = elementValue1.value;\r\n          elementValue2 = elementValue2.value;\r\n          if (elementValue1 instanceof tree.Selector) {\r\n              if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                  return false;\r\n              }\r\n              for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                  if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                      if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                          return false;\r\n                      }\r\n                  }\r\n                  if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                      return false;\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n          // for a set of matches, replace each match with the replacement selector\r\n          var currentSelectorPathIndex = 0;\r\n          var currentSelectorPathElementIndex = 0;\r\n          var path = [];\r\n          var matchIndex;\r\n          var selector;\r\n          var firstElement;\r\n          var match;\r\n          var newElements;\r\n          for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n              match = matches[matchIndex];\r\n              selector = selectorPath[match.pathIndex];\r\n              firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n              if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                  path[path.length - 1].elements = path[path.length - 1]\r\n                      .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                  currentSelectorPathElementIndex = 0;\r\n                  currentSelectorPathIndex++;\r\n              }\r\n              newElements = selector.elements\r\n                  .slice(currentSelectorPathElementIndex, match.index)\r\n                  .concat([firstElement])\r\n                  .concat(replacementSelector.elements.slice(1));\r\n              if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                  path[path.length - 1].elements =\r\n                      path[path.length - 1].elements.concat(newElements);\r\n              }\r\n              else {\r\n                  path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                  path.push(new tree.Selector(newElements));\r\n              }\r\n              currentSelectorPathIndex = match.endPathIndex;\r\n              currentSelectorPathElementIndex = match.endPathElementIndex;\r\n              if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                  currentSelectorPathElementIndex = 0;\r\n                  currentSelectorPathIndex++;\r\n              }\r\n          }\r\n          if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n              path[path.length - 1].elements = path[path.length - 1]\r\n                  .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n              currentSelectorPathIndex++;\r\n          }\r\n          path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n          path = path.map(function (currentValue) {\r\n              // we can re-use elements here, because the visibility property matters only for selectors\r\n              var derived = currentValue.createDerived(currentValue.elements);\r\n              if (isVisible) {\r\n                  derived.ensureVisibility();\r\n              }\r\n              else {\r\n                  derived.ensureInvisibility();\r\n              }\r\n              return derived;\r\n          });\r\n          return path;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n          this.allExtendsStack.push(newAllExtends);\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n          var lastIndex = this.allExtendsStack.length - 1;\r\n          this.allExtendsStack.length = lastIndex;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n          this.allExtendsStack.push(newAllExtends);\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n          var lastIndex = this.allExtendsStack.length - 1;\r\n          this.allExtendsStack.length = lastIndex;\r\n      };\r\n      return ProcessExtendsVisitor;\r\n  }());\n\n  var JoinSelectorVisitor = /** @class */ (function () {\r\n      function JoinSelectorVisitor() {\r\n          this.contexts = [[]];\r\n          this._visitor = new Visitor(this);\r\n      }\r\n      JoinSelectorVisitor.prototype.run = function (root) {\r\n          return this._visitor.visit(root);\r\n      };\r\n      JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          var paths = [];\r\n          var selectors;\r\n          this.contexts.push(paths);\r\n          if (!rulesetNode.root) {\r\n              selectors = rulesetNode.selectors;\r\n              if (selectors) {\r\n                  selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                  rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                  if (selectors) {\r\n                      rulesetNode.joinSelectors(paths, context, selectors);\r\n                  }\r\n              }\r\n              if (!selectors) {\r\n                  rulesetNode.rules = null;\r\n              }\r\n              rulesetNode.paths = paths;\r\n          }\r\n      };\r\n      JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n          this.contexts.length = this.contexts.length - 1;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n      };\r\n      JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          if (atRuleNode.rules && atRuleNode.rules.length) {\r\n              atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n          }\r\n      };\r\n      return JoinSelectorVisitor;\r\n  }());\n\n  var CSSVisitorUtils = /** @class */ (function () {\r\n      function CSSVisitorUtils(context) {\r\n          this._visitor = new Visitor(this);\r\n          this._context = context;\r\n      }\r\n      CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n          var rule;\r\n          if (!bodyRules) {\r\n              return false;\r\n          }\r\n          for (var r = 0; r < bodyRules.length; r++) {\r\n              rule = bodyRules[r];\r\n              if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                  // the atrule contains something that was referenced (likely by extend)\r\n                  // therefore it needs to be shown in output too\r\n                  return true;\r\n              }\r\n          }\r\n          return false;\r\n      };\r\n      CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n          if (owner && owner.rules) {\r\n              owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n          }\r\n      };\r\n      CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n          return (owner && owner.rules)\r\n              ? (owner.rules.length === 0) : true;\r\n      };\r\n      CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n          return (rulesetNode && rulesetNode.paths)\r\n              ? (rulesetNode.paths.length > 0) : false;\r\n      };\r\n      CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n          if (!node.blocksVisibility()) {\r\n              if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                  return;\r\n              }\r\n              return node;\r\n          }\r\n          var compiledRulesBody = node.rules[0];\r\n          this.keepOnlyVisibleChilds(compiledRulesBody);\r\n          if (this.isEmpty(compiledRulesBody)) {\r\n              return;\r\n          }\r\n          node.ensureVisibility();\r\n          node.removeVisibilityBlock();\r\n          return node;\r\n      };\r\n      CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n          if (rulesetNode.firstRoot) {\r\n              return true;\r\n          }\r\n          if (this.isEmpty(rulesetNode)) {\r\n              return false;\r\n          }\r\n          if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n              return false;\r\n          }\r\n          return true;\r\n      };\r\n      return CSSVisitorUtils;\r\n  }());\r\n  var ToCSSVisitor = function (context) {\r\n      this._visitor = new Visitor(this);\r\n      this._context = context;\r\n      this.utils = new CSSVisitorUtils(context);\r\n  };\r\n  ToCSSVisitor.prototype = {\r\n      isReplacing: true,\r\n      run: function (root) {\r\n          return this._visitor.visit(root);\r\n      },\r\n      visitDeclaration: function (declNode, visitArgs) {\r\n          if (declNode.blocksVisibility() || declNode.variable) {\r\n              return;\r\n          }\r\n          return declNode;\r\n      },\r\n      visitMixinDefinition: function (mixinNode, visitArgs) {\r\n          // mixin definitions do not get eval'd - this means they keep state\r\n          // so we have to clear that state here so it isn't used if toCSS is called twice\r\n          mixinNode.frames = [];\r\n      },\r\n      visitExtend: function (extendNode, visitArgs) {\r\n      },\r\n      visitComment: function (commentNode, visitArgs) {\r\n          if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n              return;\r\n          }\r\n          return commentNode;\r\n      },\r\n      visitMedia: function (mediaNode, visitArgs) {\r\n          var originalRules = mediaNode.rules[0].rules;\r\n          mediaNode.accept(this._visitor);\r\n          visitArgs.visitDeeper = false;\r\n          return this.utils.resolveVisibility(mediaNode, originalRules);\r\n      },\r\n      visitImport: function (importNode, visitArgs) {\r\n          if (importNode.blocksVisibility()) {\r\n              return;\r\n          }\r\n          return importNode;\r\n      },\r\n      visitAtRule: function (atRuleNode, visitArgs) {\r\n          if (atRuleNode.rules && atRuleNode.rules.length) {\r\n              return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n          }\r\n          else {\r\n              return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n          }\r\n      },\r\n      visitAnonymous: function (anonymousNode, visitArgs) {\r\n          if (!anonymousNode.blocksVisibility()) {\r\n              anonymousNode.accept(this._visitor);\r\n              return anonymousNode;\r\n          }\r\n      },\r\n      visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n          // if there is only one nested ruleset and that one has no path, then it is\r\n          // just fake ruleset\r\n          function hasFakeRuleset(atRuleNode) {\r\n              var bodyRules = atRuleNode.rules;\r\n              return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n          }\r\n          function getBodyRules(atRuleNode) {\r\n              var nodeRules = atRuleNode.rules;\r\n              if (hasFakeRuleset(atRuleNode)) {\r\n                  return nodeRules[0].rules;\r\n              }\r\n              return nodeRules;\r\n          }\r\n          // it is still true that it is only one ruleset in array\r\n          // this is last such moment\r\n          // process childs\r\n          var originalRules = getBodyRules(atRuleNode);\r\n          atRuleNode.accept(this._visitor);\r\n          visitArgs.visitDeeper = false;\r\n          if (!this.utils.isEmpty(atRuleNode)) {\r\n              this._mergeRules(atRuleNode.rules[0].rules);\r\n          }\r\n          return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n      },\r\n      visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n          if (atRuleNode.blocksVisibility()) {\r\n              return;\r\n          }\r\n          if (atRuleNode.name === '@charset') {\r\n              // Only output the debug info together with subsequent @charset definitions\r\n              // a comment (or @media statement) before the actual @charset atrule would\r\n              // be considered illegal css as it has to be on the first line\r\n              if (this.charset) {\r\n                  if (atRuleNode.debugInfo) {\r\n                      var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                      comment.debugInfo = atRuleNode.debugInfo;\r\n                      return this._visitor.visit(comment);\r\n                  }\r\n                  return;\r\n              }\r\n              this.charset = true;\r\n          }\r\n          return atRuleNode;\r\n      },\r\n      checkValidNodes: function (rules, isRoot) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          for (var i = 0; i < rules.length; i++) {\r\n              var ruleNode = rules[i];\r\n              if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                  throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                      index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n              if (ruleNode instanceof tree.Call) {\r\n                  throw { message: \"Function '\" + ruleNode.name + \"' is undefined\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n              if (ruleNode.type && !ruleNode.allowRoot) {\r\n                  throw { message: ruleNode.type + \" node returned by a function is not valid here\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n          }\r\n      },\r\n      visitRuleset: function (rulesetNode, visitArgs) {\r\n          // at this point rulesets are nested into each other\r\n          var rule;\r\n          var rulesets = [];\r\n          this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n          if (!rulesetNode.root) {\r\n              // remove invisible paths\r\n              this._compileRulesetPaths(rulesetNode);\r\n              // remove rulesets from this ruleset body and compile them separately\r\n              var nodeRules = rulesetNode.rules;\r\n              var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n              for (var i = 0; i < nodeRuleCnt;) {\r\n                  rule = nodeRules[i];\r\n                  if (rule && rule.rules) {\r\n                      // visit because we are moving them out from being a child\r\n                      rulesets.push(this._visitor.visit(rule));\r\n                      nodeRules.splice(i, 1);\r\n                      nodeRuleCnt--;\r\n                      continue;\r\n                  }\r\n                  i++;\r\n              }\r\n              // accept the visitor to remove rules and refactor itself\r\n              // then we can decide nogw whether we want it or not\r\n              // compile body\r\n              if (nodeRuleCnt > 0) {\r\n                  rulesetNode.accept(this._visitor);\r\n              }\r\n              else {\r\n                  rulesetNode.rules = null;\r\n              }\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n          else { // if (! rulesetNode.root) {\r\n              rulesetNode.accept(this._visitor);\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n          if (rulesetNode.rules) {\r\n              this._mergeRules(rulesetNode.rules);\r\n              this._removeDuplicateRules(rulesetNode.rules);\r\n          }\r\n          // now decide whether we keep the ruleset\r\n          if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n              rulesetNode.ensureVisibility();\r\n              rulesets.splice(0, 0, rulesetNode);\r\n          }\r\n          if (rulesets.length === 1) {\r\n              return rulesets[0];\r\n          }\r\n          return rulesets;\r\n      },\r\n      _compileRulesetPaths: function (rulesetNode) {\r\n          if (rulesetNode.paths) {\r\n              rulesetNode.paths = rulesetNode.paths\r\n                  .filter(function (p) {\r\n                  var i;\r\n                  if (p[0].elements[0].combinator.value === ' ') {\r\n                      p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                  }\r\n                  for (i = 0; i < p.length; i++) {\r\n                      if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                          return true;\r\n                      }\r\n                  }\r\n                  return false;\r\n              });\r\n          }\r\n      },\r\n      _removeDuplicateRules: function (rules) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          // remove duplicates\r\n          var ruleCache = {};\r\n          var ruleList;\r\n          var rule;\r\n          var i;\r\n          for (i = rules.length - 1; i >= 0; i--) {\r\n              rule = rules[i];\r\n              if (rule instanceof tree.Declaration) {\r\n                  if (!ruleCache[rule.name]) {\r\n                      ruleCache[rule.name] = rule;\r\n                  }\r\n                  else {\r\n                      ruleList = ruleCache[rule.name];\r\n                      if (ruleList instanceof tree.Declaration) {\r\n                          ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                      }\r\n                      var ruleCSS = rule.toCSS(this._context);\r\n                      if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                          rules.splice(i, 1);\r\n                      }\r\n                      else {\r\n                          ruleList.push(ruleCSS);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      },\r\n      _mergeRules: function (rules) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          var groups = {};\r\n          var groupsArr = [];\r\n          for (var i = 0; i < rules.length; i++) {\r\n              var rule = rules[i];\r\n              if (rule.merge) {\r\n                  var key = rule.name;\r\n                  groups[key] ? rules.splice(i--, 1) :\r\n                      groupsArr.push(groups[key] = []);\r\n                  groups[key].push(rule);\r\n              }\r\n          }\r\n          groupsArr.forEach(function (group) {\r\n              if (group.length > 0) {\r\n                  var result_1 = group[0];\r\n                  var space_1 = [];\r\n                  var comma_1 = [new tree.Expression(space_1)];\r\n                  group.forEach(function (rule) {\r\n                      if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                          comma_1.push(new tree.Expression(space_1 = []));\r\n                      }\r\n                      space_1.push(rule.value);\r\n                      result_1.important = result_1.important || rule.important;\r\n                  });\r\n                  result_1.value = new tree.Value(comma_1);\r\n              }\r\n          });\r\n      }\r\n  };\n\n  var visitors = {\r\n      Visitor: Visitor,\r\n      ImportVisitor: ImportVisitor,\r\n      MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n      ExtendVisitor: ProcessExtendsVisitor,\r\n      JoinSelectorVisitor: JoinSelectorVisitor,\r\n      ToCSSVisitor: ToCSSVisitor\r\n  };\n\n  // Split the input into chunks.\r\n  var chunker = (function (input, fail) {\r\n      var len = input.length;\r\n      var level = 0;\r\n      var parenLevel = 0;\r\n      var lastOpening;\r\n      var lastOpeningParen;\r\n      var lastMultiComment;\r\n      var lastMultiCommentEndBrace;\r\n      var chunks = [];\r\n      var emitFrom = 0;\r\n      var chunkerCurrentIndex;\r\n      var currentChunkStartIndex;\r\n      var cc;\r\n      var cc2;\r\n      var matched;\r\n      function emitChunk(force) {\r\n          var len = chunkerCurrentIndex - emitFrom;\r\n          if (((len < 512) && !force) || !len) {\r\n              return;\r\n          }\r\n          chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n          emitFrom = chunkerCurrentIndex + 1;\r\n      }\r\n      for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n          cc = input.charCodeAt(chunkerCurrentIndex);\r\n          if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n              // a-z or whitespace\r\n              continue;\r\n          }\r\n          switch (cc) {\r\n              case 40: // (\r\n                  parenLevel++;\r\n                  lastOpeningParen = chunkerCurrentIndex;\r\n                  continue;\r\n              case 41: // )\r\n                  if (--parenLevel < 0) {\r\n                      return fail('missing opening `(`', chunkerCurrentIndex);\r\n                  }\r\n                  continue;\r\n              case 59: // ;\r\n                  if (!parenLevel) {\r\n                      emitChunk();\r\n                  }\r\n                  continue;\r\n              case 123: // {\r\n                  level++;\r\n                  lastOpening = chunkerCurrentIndex;\r\n                  continue;\r\n              case 125: // }\r\n                  if (--level < 0) {\r\n                      return fail('missing opening `{`', chunkerCurrentIndex);\r\n                  }\r\n                  if (!level && !parenLevel) {\r\n                      emitChunk();\r\n                  }\r\n                  continue;\r\n              case 92: // \\\r\n                  if (chunkerCurrentIndex < len - 1) {\r\n                      chunkerCurrentIndex++;\r\n                      continue;\r\n                  }\r\n                  return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n              case 34:\r\n              case 39:\r\n              case 96: // \", ' and `\r\n                  matched = 0;\r\n                  currentChunkStartIndex = chunkerCurrentIndex;\r\n                  for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                      cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                      if (cc2 > 96) {\r\n                          continue;\r\n                      }\r\n                      if (cc2 == cc) {\r\n                          matched = 1;\r\n                          break;\r\n                      }\r\n                      if (cc2 == 92) { // \\\r\n                          if (chunkerCurrentIndex == len - 1) {\r\n                              return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                          }\r\n                          chunkerCurrentIndex++;\r\n                      }\r\n                  }\r\n                  if (matched) {\r\n                      continue;\r\n                  }\r\n                  return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n              case 47: // /, check for comment\r\n                  if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                      continue;\r\n                  }\r\n                  cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                  if (cc2 == 47) {\r\n                      // //, find lnfeed\r\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                          if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  }\r\n                  else if (cc2 == 42) {\r\n                      // /*, find */\r\n                      lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                          if (cc2 == 125) {\r\n                              lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                          }\r\n                          if (cc2 != 42) {\r\n                              continue;\r\n                          }\r\n                          if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                              break;\r\n                          }\r\n                      }\r\n                      if (chunkerCurrentIndex == len - 1) {\r\n                          return fail('missing closing `*/`', currentChunkStartIndex);\r\n                      }\r\n                      chunkerCurrentIndex++;\r\n                  }\r\n                  continue;\r\n              case 42: // *, check for unmatched */\r\n                  if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                      return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                  }\r\n                  continue;\r\n          }\r\n      }\r\n      if (level !== 0) {\r\n          if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n              return fail('missing closing `}` or `*/`', lastOpening);\r\n          }\r\n          else {\r\n              return fail('missing closing `}`', lastOpening);\r\n          }\r\n      }\r\n      else if (parenLevel !== 0) {\r\n          return fail('missing closing `)`', lastOpeningParen);\r\n      }\r\n      emitChunk(true);\r\n      return chunks;\r\n  });\n\n  var getParserInput = (function () {\r\n      var // Less input string\r\n      input;\r\n      var // current chunk\r\n      j;\r\n      var // holds state for backtracking\r\n      saveStack = [];\r\n      var // furthest index the parser has gone to\r\n      furthest;\r\n      var // if this is furthest we got to, this is the probably cause\r\n      furthestPossibleErrorMessage;\r\n      var // chunkified input\r\n      chunks;\r\n      var // current chunk\r\n      current;\r\n      var // index of current chunk, in `input`\r\n      currentPos;\r\n      var parserInput = {};\r\n      var CHARCODE_SPACE = 32;\r\n      var CHARCODE_TAB = 9;\r\n      var CHARCODE_LF = 10;\r\n      var CHARCODE_CR = 13;\r\n      var CHARCODE_PLUS = 43;\r\n      var CHARCODE_COMMA = 44;\r\n      var CHARCODE_FORWARD_SLASH = 47;\r\n      var CHARCODE_9 = 57;\r\n      function skipWhitespace(length) {\r\n          var oldi = parserInput.i;\r\n          var oldj = j;\r\n          var curr = parserInput.i - currentPos;\r\n          var endIndex = parserInput.i + current.length - curr;\r\n          var mem = (parserInput.i += length);\r\n          var inp = input;\r\n          var c;\r\n          var nextChar;\r\n          var comment;\r\n          for (; parserInput.i < endIndex; parserInput.i++) {\r\n              c = inp.charCodeAt(parserInput.i);\r\n              if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                  nextChar = inp.charAt(parserInput.i + 1);\r\n                  if (nextChar === '/') {\r\n                      comment = { index: parserInput.i, isLineComment: true };\r\n                      var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                      if (nextNewLine < 0) {\r\n                          nextNewLine = endIndex;\r\n                      }\r\n                      parserInput.i = nextNewLine;\r\n                      comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                      parserInput.commentStore.push(comment);\r\n                      continue;\r\n                  }\r\n                  else if (nextChar === '*') {\r\n                      var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                      if (nextStarSlash >= 0) {\r\n                          comment = {\r\n                              index: parserInput.i,\r\n                              text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                              isLineComment: false\r\n                          };\r\n                          parserInput.i += comment.text.length - 1;\r\n                          parserInput.commentStore.push(comment);\r\n                          continue;\r\n                      }\r\n                  }\r\n                  break;\r\n              }\r\n              if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                  break;\r\n              }\r\n          }\r\n          current = current.slice(length + parserInput.i - mem + curr);\r\n          currentPos = parserInput.i;\r\n          if (!current.length) {\r\n              if (j < chunks.length - 1) {\r\n                  current = chunks[++j];\r\n                  skipWhitespace(0); // skip space at the beginning of a chunk\r\n                  return true; // things changed\r\n              }\r\n              parserInput.finished = true;\r\n          }\r\n          return oldi !== parserInput.i || oldj !== j;\r\n      }\r\n      parserInput.save = function () {\r\n          currentPos = parserInput.i;\r\n          saveStack.push({ current: current, i: parserInput.i, j: j });\r\n      };\r\n      parserInput.restore = function (possibleErrorMessage) {\r\n          if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n              furthest = parserInput.i;\r\n              furthestPossibleErrorMessage = possibleErrorMessage;\r\n          }\r\n          var state = saveStack.pop();\r\n          current = state.current;\r\n          currentPos = parserInput.i = state.i;\r\n          j = state.j;\r\n      };\r\n      parserInput.forget = function () {\r\n          saveStack.pop();\r\n      };\r\n      parserInput.isWhitespace = function (offset) {\r\n          var pos = parserInput.i + (offset || 0);\r\n          var code = input.charCodeAt(pos);\r\n          return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n      };\r\n      // Specialization of $(tok)\r\n      parserInput.$re = function (tok) {\r\n          if (parserInput.i > currentPos) {\r\n              current = current.slice(parserInput.i - currentPos);\r\n              currentPos = parserInput.i;\r\n          }\r\n          var m = tok.exec(current);\r\n          if (!m) {\r\n              return null;\r\n          }\r\n          skipWhitespace(m[0].length);\r\n          if (typeof m === 'string') {\r\n              return m;\r\n          }\r\n          return m.length === 1 ? m[0] : m;\r\n      };\r\n      parserInput.$char = function (tok) {\r\n          if (input.charAt(parserInput.i) !== tok) {\r\n              return null;\r\n          }\r\n          skipWhitespace(1);\r\n          return tok;\r\n      };\r\n      parserInput.$str = function (tok) {\r\n          var tokLength = tok.length;\r\n          // https://jsperf.com/string-startswith/21\r\n          for (var i = 0; i < tokLength; i++) {\r\n              if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                  return null;\r\n              }\r\n          }\r\n          skipWhitespace(tokLength);\r\n          return tok;\r\n      };\r\n      parserInput.$quoted = function (loc) {\r\n          var pos = loc || parserInput.i;\r\n          var startChar = input.charAt(pos);\r\n          if (startChar !== '\\'' && startChar !== '\"') {\r\n              return;\r\n          }\r\n          var length = input.length;\r\n          var currentPosition = pos;\r\n          for (var i = 1; i + currentPosition < length; i++) {\r\n              var nextChar = input.charAt(i + currentPosition);\r\n              switch (nextChar) {\r\n                  case '\\\\':\r\n                      i++;\r\n                      continue;\r\n                  case '\\r':\r\n                  case '\\n':\r\n                      break;\r\n                  case startChar:\r\n                      var str = input.substr(currentPosition, i + 1);\r\n                      if (!loc && loc !== 0) {\r\n                          skipWhitespace(i + 1);\r\n                          return str;\r\n                      }\r\n                      return [startChar, str];\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      /**\r\n       * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n       * until matching token (outside of blocks)\r\n       */\r\n      parserInput.$parseUntil = function (tok) {\r\n          var quote = '';\r\n          var returnVal = null;\r\n          var inComment = false;\r\n          var blockDepth = 0;\r\n          var blockStack = [];\r\n          var parseGroups = [];\r\n          var length = input.length;\r\n          var startPos = parserInput.i;\r\n          var lastPos = parserInput.i;\r\n          var i = parserInput.i;\r\n          var loop = true;\r\n          var testChar;\r\n          if (typeof tok === 'string') {\r\n              testChar = function (char) { return char === tok; };\r\n          }\r\n          else {\r\n              testChar = function (char) { return tok.test(char); };\r\n          }\r\n          do {\r\n              var nextChar = input.charAt(i);\r\n              if (blockDepth === 0 && testChar(nextChar)) {\r\n                  returnVal = input.substr(lastPos, i - lastPos);\r\n                  if (returnVal) {\r\n                      parseGroups.push(returnVal);\r\n                  }\r\n                  else {\r\n                      parseGroups.push(' ');\r\n                  }\r\n                  returnVal = parseGroups;\r\n                  skipWhitespace(i - startPos);\r\n                  loop = false;\r\n              }\r\n              else {\r\n                  if (inComment) {\r\n                      if (nextChar === '*' &&\r\n                          input.charAt(i + 1) === '/') {\r\n                          i++;\r\n                          blockDepth--;\r\n                          inComment = false;\r\n                      }\r\n                      i++;\r\n                      continue;\r\n                  }\r\n                  switch (nextChar) {\r\n                      case '\\\\':\r\n                          i++;\r\n                          nextChar = input.charAt(i);\r\n                          parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                          lastPos = i + 1;\r\n                          break;\r\n                      case '/':\r\n                          if (input.charAt(i + 1) === '*') {\r\n                              i++;\r\n                              inComment = true;\r\n                              blockDepth++;\r\n                          }\r\n                          break;\r\n                      case '\\'':\r\n                      case '\"':\r\n                          quote = parserInput.$quoted(i);\r\n                          if (quote) {\r\n                              parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                              i += quote[1].length - 1;\r\n                              lastPos = i + 1;\r\n                          }\r\n                          else {\r\n                              skipWhitespace(i - startPos);\r\n                              returnVal = nextChar;\r\n                              loop = false;\r\n                          }\r\n                          break;\r\n                      case '{':\r\n                          blockStack.push('}');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '(':\r\n                          blockStack.push(')');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '[':\r\n                          blockStack.push(']');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '}':\r\n                      case ')':\r\n                      case ']':\r\n                          var expected = blockStack.pop();\r\n                          if (nextChar === expected) {\r\n                              blockDepth--;\r\n                          }\r\n                          else {\r\n                              // move the parser to the error and return expected\r\n                              skipWhitespace(i - startPos);\r\n                              returnVal = expected;\r\n                              loop = false;\r\n                          }\r\n                  }\r\n                  i++;\r\n                  if (i > length) {\r\n                      loop = false;\r\n                  }\r\n              }\r\n          } while (loop);\r\n          return returnVal ? returnVal : null;\r\n      };\r\n      parserInput.autoCommentAbsorb = true;\r\n      parserInput.commentStore = [];\r\n      parserInput.finished = false;\r\n      // Same as $(), but don't change the state of the parser,\r\n      // just return the match.\r\n      parserInput.peek = function (tok) {\r\n          if (typeof tok === 'string') {\r\n              // https://jsperf.com/string-startswith/21\r\n              for (var i = 0; i < tok.length; i++) {\r\n                  if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                      return false;\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          else {\r\n              return tok.test(current);\r\n          }\r\n      };\r\n      // Specialization of peek()\r\n      // TODO remove or change some currentChar calls to peekChar\r\n      parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n      parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n      parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n      parserInput.getInput = function () { return input; };\r\n      parserInput.peekNotNumeric = function () {\r\n          var c = input.charCodeAt(parserInput.i);\r\n          // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n          return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n      };\r\n      parserInput.start = function (str, chunkInput, failFunction) {\r\n          input = str;\r\n          parserInput.i = j = currentPos = furthest = 0;\r\n          // chunking apparently makes things quicker (but my tests indicate\r\n          // it might actually make things slower in node at least)\r\n          // and it is a non-perfect parse - it can't recognise\r\n          // unquoted urls, meaning it can't distinguish comments\r\n          // meaning comments with quotes or {}() in them get 'counted'\r\n          // and then lead to parse errors.\r\n          // In addition if the chunking chunks in the wrong place we might\r\n          // not be able to parse a parser statement in one go\r\n          // this is officially deprecated but can be switched on via an option\r\n          // in the case it causes too much performance issues.\r\n          if (chunkInput) {\r\n              chunks = chunker(str, failFunction);\r\n          }\r\n          else {\r\n              chunks = [str];\r\n          }\r\n          current = chunks[0];\r\n          skipWhitespace(0);\r\n      };\r\n      parserInput.end = function () {\r\n          var message;\r\n          var isFinished = parserInput.i >= input.length;\r\n          if (parserInput.i < furthest) {\r\n              message = furthestPossibleErrorMessage;\r\n              parserInput.i = furthest;\r\n          }\r\n          return {\r\n              isFinished: isFinished,\r\n              furthest: parserInput.i,\r\n              furthestPossibleErrorMessage: message,\r\n              furthestReachedEnd: parserInput.i >= input.length - 1,\r\n              furthestChar: input[parserInput.i]\r\n          };\r\n      };\r\n      return parserInput;\r\n  });\n\n  //\r\n  // less.js - parser\r\n  //\r\n  //    A relatively straight-forward predictive parser.\r\n  //    There is no tokenization/lexing stage, the input is parsed\r\n  //    in one sweep.\r\n  //\r\n  //    To make the parser fast enough to run in the browser, several\r\n  //    optimization had to be made:\r\n  //\r\n  //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n  //      The solution is to chunkify the input into smaller strings.\r\n  //      The chunks are stored in the `chunks` var,\r\n  //      `j` holds the current chunk index, and `currentPos` holds\r\n  //      the index of the current chunk in relation to `input`.\r\n  //      This gives us an almost 4x speed-up.\r\n  //\r\n  //    - In many cases, we don't need to match individual tokens;\r\n  //      for example, if a value doesn't hold any variables, operations\r\n  //      or dynamic references, the parser can effectively 'skip' it,\r\n  //      treating it as a literal.\r\n  //      An example would be '1px solid #000' - which evaluates to itself,\r\n  //      we don't need to know what the individual components are.\r\n  //      The drawback, of course is that you don't get the benefits of\r\n  //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n  //      and a smaller speed-up in the code-gen.\r\n  //\r\n  //\r\n  //    Token matching is done with the `$` function, which either takes\r\n  //    a terminal string or regexp, or a non-terminal function to call.\r\n  //    It also takes care of moving all the indices forwards.\r\n  //\r\n  var Parser = function Parser(context, imports, fileInfo) {\r\n      var parsers;\r\n      var parserInput = getParserInput();\r\n      function error(msg, type) {\r\n          throw new LessError({\r\n              index: parserInput.i,\r\n              filename: fileInfo.filename,\r\n              type: type || 'Syntax',\r\n              message: msg\r\n          }, imports);\r\n      }\r\n      function expect(arg, msg) {\r\n          // some older browsers return typeof 'function' for RegExp\r\n          var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n          if (result) {\r\n              return result;\r\n          }\r\n          error(msg || (typeof arg === 'string'\r\n              ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n              : 'unexpected token'));\r\n      }\r\n      // Specialization of expect()\r\n      function expectChar(arg, msg) {\r\n          if (parserInput.$char(arg)) {\r\n              return arg;\r\n          }\r\n          error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n      }\r\n      function getDebugInfo(index) {\r\n          var filename = fileInfo.filename;\r\n          return {\r\n              lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n              fileName: filename\r\n          };\r\n      }\r\n      /**\r\n       *  Used after initial parsing to create nodes on the fly\r\n       *\r\n       *  @param {String} str          - string to parse\r\n       *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n       *  @param {Number} currentIndex - start number to begin indexing\r\n       *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n       */\r\n      function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n          var result;\r\n          var returnNodes = [];\r\n          var parser = parserInput;\r\n          try {\r\n              parser.start(str, false, function fail(msg, index) {\r\n                  callback({\r\n                      message: msg,\r\n                      index: index + currentIndex\r\n                  });\r\n              });\r\n              for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                  i = parser.i;\r\n                  result = parsers[p]();\r\n                  if (result) {\r\n                      try {\r\n                          result._index = i + currentIndex;\r\n                          result._fileInfo = fileInfo;\r\n                      }\r\n                      catch (e) { }\r\n                      returnNodes.push(result);\r\n                  }\r\n                  else {\r\n                      returnNodes.push(null);\r\n                  }\r\n              }\r\n              var endInfo = parser.end();\r\n              if (endInfo.isFinished) {\r\n                  callback(null, returnNodes);\r\n              }\r\n              else {\r\n                  callback(true, null);\r\n              }\r\n          }\r\n          catch (e) {\r\n              throw new LessError({\r\n                  index: e.index + currentIndex,\r\n                  message: e.message\r\n              }, imports, fileInfo.filename);\r\n          }\r\n      }\r\n      //\r\n      // The Parser\r\n      //\r\n      return {\r\n          parserInput: parserInput,\r\n          imports: imports,\r\n          fileInfo: fileInfo,\r\n          parseNode: parseNode,\r\n          //\r\n          // Parse an input string into an abstract syntax tree,\r\n          // @param str A string containing 'less' markup\r\n          // @param callback call `callback` when done.\r\n          // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n          //\r\n          parse: function (str, callback, additionalData) {\r\n              var root;\r\n              var error = null;\r\n              var globalVars;\r\n              var modifyVars;\r\n              var ignored;\r\n              var preText = '';\r\n              globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n              modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n              if (context.pluginManager) {\r\n                  var preProcessors = context.pluginManager.getPreProcessors();\r\n                  for (var i = 0; i < preProcessors.length; i++) {\r\n                      str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                  }\r\n              }\r\n              if (globalVars || (additionalData && additionalData.banner)) {\r\n                  preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                  ignored = imports.contentsIgnoredChars;\r\n                  ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                  ignored[fileInfo.filename] += preText.length;\r\n              }\r\n              str = str.replace(/\\r\\n?/g, '\\n');\r\n              // Remove potential UTF Byte Order Mark\r\n              str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n              imports.contents[fileInfo.filename] = str;\r\n              // Start with the primary rule.\r\n              // The whole syntax tree is held under a Ruleset node,\r\n              // with the `root` property set to true, so no `{}` are\r\n              // output. The callback is called when the input is parsed.\r\n              try {\r\n                  parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                      throw new LessError({\r\n                          index: index,\r\n                          type: 'Parse',\r\n                          message: msg,\r\n                          filename: fileInfo.filename\r\n                      }, imports);\r\n                  });\r\n                  tree.Node.prototype.parse = this;\r\n                  root = new tree.Ruleset(null, this.parsers.primary());\r\n                  tree.Node.prototype.rootNode = root;\r\n                  root.root = true;\r\n                  root.firstRoot = true;\r\n                  root.functionRegistry = functionRegistry.inherit();\r\n              }\r\n              catch (e) {\r\n                  return callback(new LessError(e, imports, fileInfo.filename));\r\n              }\r\n              // If `i` is smaller than the `input.length - 1`,\r\n              // it means the parser wasn't able to parse the whole\r\n              // string, so we've got a parsing error.\r\n              //\r\n              // We try to extract a \\n delimited string,\r\n              // showing the line where the parse error occurred.\r\n              // We split it up into two parts (the part which parsed,\r\n              // and the part which didn't), so we can color them differently.\r\n              var endInfo = parserInput.end();\r\n              if (!endInfo.isFinished) {\r\n                  var message = endInfo.furthestPossibleErrorMessage;\r\n                  if (!message) {\r\n                      message = 'Unrecognised input';\r\n                      if (endInfo.furthestChar === '}') {\r\n                          message += '. Possibly missing opening \\'{\\'';\r\n                      }\r\n                      else if (endInfo.furthestChar === ')') {\r\n                          message += '. Possibly missing opening \\'(\\'';\r\n                      }\r\n                      else if (endInfo.furthestReachedEnd) {\r\n                          message += '. Possibly missing something';\r\n                      }\r\n                  }\r\n                  error = new LessError({\r\n                      type: 'Parse',\r\n                      message: message,\r\n                      index: endInfo.furthest,\r\n                      filename: fileInfo.filename\r\n                  }, imports);\r\n              }\r\n              var finish = function (e) {\r\n                  e = error || e || imports.error;\r\n                  if (e) {\r\n                      if (!(e instanceof LessError)) {\r\n                          e = new LessError(e, imports, fileInfo.filename);\r\n                      }\r\n                      return callback(e);\r\n                  }\r\n                  else {\r\n                      return callback(null, root);\r\n                  }\r\n              };\r\n              if (context.processImports !== false) {\r\n                  new visitors.ImportVisitor(imports, finish)\r\n                      .run(root);\r\n              }\r\n              else {\r\n                  return finish();\r\n              }\r\n          },\r\n          //\r\n          // Here in, the parsing rules/functions\r\n          //\r\n          // The basic structure of the syntax tree generated is as follows:\r\n          //\r\n          //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n          //\r\n          // Here's some Less code:\r\n          //\r\n          //    .class {\r\n          //      color: #fff;\r\n          //      border: 1px solid #000;\r\n          //      width: @w + 4px;\r\n          //      > .child {...}\r\n          //    }\r\n          //\r\n          // And here's what the parse tree might look like:\r\n          //\r\n          //     Ruleset (Selector '.class', [\r\n          //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n          //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n          //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n          //         Ruleset (Selector [Element '>', '.child'], [...])\r\n          //     ])\r\n          //\r\n          //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n          //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n          //  first, before parsing, that's when we use `peek()`.\r\n          //\r\n          parsers: parsers = {\r\n              //\r\n              // The `primary` rule is the *entry* and *exit* point of the parser.\r\n              // The rules here can appear at any level of the parse tree.\r\n              //\r\n              // The recursive nature of the grammar is an interplay between the `block`\r\n              // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n              // as represented by this simplified grammar:\r\n              //\r\n              //     primary  →  (ruleset | declaration)+\r\n              //     ruleset  →  selector+ block\r\n              //     block    →  '{' primary '}'\r\n              //\r\n              // Only at one point is the primary rule not called from the\r\n              // block rule: at the root level.\r\n              //\r\n              primary: function () {\r\n                  var mixin = this.mixin;\r\n                  var root = [];\r\n                  var node;\r\n                  while (true) {\r\n                      while (true) {\r\n                          node = this.comment();\r\n                          if (!node) {\r\n                              break;\r\n                          }\r\n                          root.push(node);\r\n                      }\r\n                      // always process comments before deciding if finished\r\n                      if (parserInput.finished) {\r\n                          break;\r\n                      }\r\n                      if (parserInput.peek('}')) {\r\n                          break;\r\n                      }\r\n                      node = this.extendRule();\r\n                      if (node) {\r\n                          root = root.concat(node);\r\n                          continue;\r\n                      }\r\n                      node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                          this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                      if (node) {\r\n                          root.push(node);\r\n                      }\r\n                      else {\r\n                          var foundSemiColon = false;\r\n                          while (parserInput.$char(';')) {\r\n                              foundSemiColon = true;\r\n                          }\r\n                          if (!foundSemiColon) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  }\r\n                  return root;\r\n              },\r\n              // comments are collected by the main parsing mechanism and then assigned to nodes\r\n              // where the current structure allows it\r\n              comment: function () {\r\n                  if (parserInput.commentStore.length) {\r\n                      var comment = parserInput.commentStore.shift();\r\n                      return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                  }\r\n              },\r\n              //\r\n              // Entities are tokens which can be found inside an Expression\r\n              //\r\n              entities: {\r\n                  mixinLookup: function () {\r\n                      return parsers.mixin.call(true, true);\r\n                  },\r\n                  //\r\n                  // A string, which supports escaping \" and '\r\n                  //\r\n                  //     \"milky way\" 'he\\'s the one!'\r\n                  //\r\n                  quoted: function (forceEscaped) {\r\n                      var str;\r\n                      var index = parserInput.i;\r\n                      var isEscaped = false;\r\n                      parserInput.save();\r\n                      if (parserInput.$char('~')) {\r\n                          isEscaped = true;\r\n                      }\r\n                      else if (forceEscaped) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      str = parserInput.$quoted();\r\n                      if (!str) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                  },\r\n                  //\r\n                  // A catch-all word, such as:\r\n                  //\r\n                  //     black border-collapse\r\n                  //\r\n                  keyword: function () {\r\n                      var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                      if (k) {\r\n                          return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A function call\r\n                  //\r\n                  //     rgb(255, 0, 255)\r\n                  //\r\n                  // The arguments are parsed with the `entities.arguments` parser.\r\n                  //\r\n                  call: function () {\r\n                      var name;\r\n                      var args;\r\n                      var func;\r\n                      var index = parserInput.i;\r\n                      // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                      if (parserInput.peek(/^url\\(/i)) {\r\n                          return;\r\n                      }\r\n                      parserInput.save();\r\n                      name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\r\n                      if (!name) {\r\n                          parserInput.forget();\r\n                          return;\r\n                      }\r\n                      name = name[1];\r\n                      func = this.customFuncCall(name);\r\n                      if (func) {\r\n                          args = func.parse();\r\n                          if (args && func.stop) {\r\n                              parserInput.forget();\r\n                              return args;\r\n                          }\r\n                      }\r\n                      args = this.arguments(args);\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return new (tree.Call)(name, args, index, fileInfo);\r\n                  },\r\n                  //\r\n                  // Parsing rules for functions with non-standard args, e.g.:\r\n                  //\r\n                  //     boolean(not(2 > 1))\r\n                  //\r\n                  //     This is a quick prototype, to be modified/improved when\r\n                  //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                  //\r\n                  customFuncCall: function (name) {\r\n                      /* Ideally the table is to be moved out of here for faster perf.,\r\n                         but it's quite tricky since it relies on all these `parsers`\r\n                         and `expect` available only here */\r\n                      return {\r\n                          alpha: f(parsers.ieAlpha, true),\r\n                          boolean: f(condition),\r\n                          'if': f(condition)\r\n                      }[name.toLowerCase()];\r\n                      function f(parse, stop) {\r\n                          return {\r\n                              parse: parse,\r\n                              stop: stop // when true - stop after parse() and return its result, \r\n                              // otherwise continue for plain args\r\n                          };\r\n                      }\r\n                      function condition() {\r\n                          return [expect(parsers.condition, 'expected condition')];\r\n                      }\r\n                  },\r\n                  arguments: function (prevArgs) {\r\n                      var argsComma = prevArgs || [];\r\n                      var argsSemiColon = [];\r\n                      var isSemiColonSeparated;\r\n                      var value;\r\n                      parserInput.save();\r\n                      while (true) {\r\n                          if (prevArgs) {\r\n                              prevArgs = false;\r\n                          }\r\n                          else {\r\n                              value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                              if (!value) {\r\n                                  break;\r\n                              }\r\n                              if (value.value && value.value.length == 1) {\r\n                                  value = value.value[0];\r\n                              }\r\n                              argsComma.push(value);\r\n                          }\r\n                          if (parserInput.$char(',')) {\r\n                              continue;\r\n                          }\r\n                          if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                              isSemiColonSeparated = true;\r\n                              value = (argsComma.length < 1) ? argsComma[0]\r\n                                  : new tree.Value(argsComma);\r\n                              argsSemiColon.push(value);\r\n                              argsComma = [];\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                  },\r\n                  literal: function () {\r\n                      return this.dimension() ||\r\n                          this.color() ||\r\n                          this.quoted() ||\r\n                          this.unicodeDescriptor();\r\n                  },\r\n                  // Assignments are argument entities for calls.\r\n                  // They are present in ie filter properties as shown below.\r\n                  //\r\n                  //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                  //\r\n                  assignment: function () {\r\n                      var key;\r\n                      var value;\r\n                      parserInput.save();\r\n                      key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                      if (!key) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (!parserInput.$char('=')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      value = parsers.entity();\r\n                      if (value) {\r\n                          parserInput.forget();\r\n                          return new (tree.Assignment)(key, value);\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  },\r\n                  //\r\n                  // Parse url() tokens\r\n                  //\r\n                  // We use a specific rule for urls, because they don't really behave like\r\n                  // standard function calls. The difference is that the argument doesn't have\r\n                  // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                  //\r\n                  url: function () {\r\n                      var value;\r\n                      var index = parserInput.i;\r\n                      parserInput.autoCommentAbsorb = false;\r\n                      if (!parserInput.$str('url(')) {\r\n                          parserInput.autoCommentAbsorb = true;\r\n                          return;\r\n                      }\r\n                      value = this.quoted() || this.variable() || this.property() ||\r\n                          parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                      parserInput.autoCommentAbsorb = true;\r\n                      expectChar(')');\r\n                      return new (tree.URL)((value.value != null ||\r\n                          value instanceof tree.Variable ||\r\n                          value instanceof tree.Property) ?\r\n                          value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                  },\r\n                  //\r\n                  // A Variable entity, such as `@fink`, in\r\n                  //\r\n                  //     width: @fink + 2px\r\n                  //\r\n                  // We use a different parser for variable definitions,\r\n                  // see `parsers.variable`.\r\n                  //\r\n                  variable: function () {\r\n                      var ch;\r\n                      var name;\r\n                      var index = parserInput.i;\r\n                      parserInput.save();\r\n                      if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                          ch = parserInput.currentChar();\r\n                          if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                              // this may be a VariableCall lookup\r\n                              var result = parsers.variableCall(name);\r\n                              if (result) {\r\n                                  parserInput.forget();\r\n                                  return result;\r\n                              }\r\n                          }\r\n                          parserInput.forget();\r\n                          return new (tree.Variable)(name, index, fileInfo);\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  // A variable entity using the protective {} e.g. @{var}\r\n                  variableCurly: function () {\r\n                      var curly;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                          return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Property accessor, such as `$color`, in\r\n                  //\r\n                  //     background-color: $color\r\n                  //\r\n                  property: function () {\r\n                      var name;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                          return new (tree.Property)(name, index, fileInfo);\r\n                      }\r\n                  },\r\n                  // A property entity useing the protective {} e.g. ${prop}\r\n                  propertyCurly: function () {\r\n                      var curly;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                          return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Hexadecimal color\r\n                  //\r\n                  //     #4F3C2F\r\n                  //\r\n                  // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                  //\r\n                  color: function () {\r\n                      var rgb;\r\n                      parserInput.save();\r\n                      if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                          if (!rgb[2]) {\r\n                              parserInput.forget();\r\n                              return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                          }\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  colorKeyword: function () {\r\n                      parserInput.save();\r\n                      var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                      parserInput.autoCommentAbsorb = false;\r\n                      var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                      parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                      if (!k) {\r\n                          parserInput.forget();\r\n                          return;\r\n                      }\r\n                      parserInput.restore();\r\n                      var color = tree.Color.fromKeyword(k);\r\n                      if (color) {\r\n                          parserInput.$str(k);\r\n                          return color;\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Dimension, that is, a number and a unit\r\n                  //\r\n                  //     0.5em 95%\r\n                  //\r\n                  dimension: function () {\r\n                      if (parserInput.peekNotNumeric()) {\r\n                          return;\r\n                      }\r\n                      var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                      if (value) {\r\n                          return new (tree.Dimension)(value[1], value[2]);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A unicode descriptor, as is used in unicode-range\r\n                  //\r\n                  // U+0??  or U+00A1-00A9\r\n                  //\r\n                  unicodeDescriptor: function () {\r\n                      var ud;\r\n                      ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                      if (ud) {\r\n                          return new (tree.UnicodeDescriptor)(ud[0]);\r\n                      }\r\n                  },\r\n                  //\r\n                  // JavaScript code to be evaluated\r\n                  //\r\n                  //     `window.location.href`\r\n                  //\r\n                  javascript: function () {\r\n                      var js;\r\n                      var index = parserInput.i;\r\n                      parserInput.save();\r\n                      var escape = parserInput.$char('~');\r\n                      var jsQuote = parserInput.$char('`');\r\n                      if (!jsQuote) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      js = parserInput.$re(/^[^`]*`/);\r\n                      if (js) {\r\n                          parserInput.forget();\r\n                          return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                      }\r\n                      parserInput.restore('invalid javascript definition');\r\n                  }\r\n              },\r\n              //\r\n              // The variable part of a variable definition. Used in the `rule` parser\r\n              //\r\n              //     @fink:\r\n              //\r\n              variable: function () {\r\n                  var name;\r\n                  if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                      return name[1];\r\n                  }\r\n              },\r\n              //\r\n              // Call a variable value to retrieve a detached ruleset\r\n              // or a value from a detached ruleset's rules.\r\n              //\r\n              //     @fink();\r\n              //     @fink;\r\n              //     color: @fink[@color];\r\n              //\r\n              variableCall: function (parsedName) {\r\n                  var lookups;\r\n                  var i = parserInput.i;\r\n                  var inValue = !!parsedName;\r\n                  var name = parsedName;\r\n                  parserInput.save();\r\n                  if (name || (parserInput.currentChar() === '@'\r\n                      && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                      lookups = this.mixin.ruleLookups();\r\n                      if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                          parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                          return;\r\n                      }\r\n                      if (!inValue) {\r\n                          name = name[1];\r\n                      }\r\n                      var call = new tree.VariableCall(name, i, fileInfo);\r\n                      if (!inValue && parsers.end()) {\r\n                          parserInput.forget();\r\n                          return call;\r\n                      }\r\n                      else {\r\n                          parserInput.forget();\r\n                          return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                      }\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // extend syntax - used to extend selectors\r\n              //\r\n              extend: function (isRule) {\r\n                  var elements;\r\n                  var e;\r\n                  var index = parserInput.i;\r\n                  var option;\r\n                  var extendList;\r\n                  var extend;\r\n                  if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                      return;\r\n                  }\r\n                  do {\r\n                      option = null;\r\n                      elements = null;\r\n                      while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                          e = this.element();\r\n                          if (!e) {\r\n                              break;\r\n                          }\r\n                          if (elements) {\r\n                              elements.push(e);\r\n                          }\r\n                          else {\r\n                              elements = [e];\r\n                          }\r\n                      }\r\n                      option = option && option[1];\r\n                      if (!elements) {\r\n                          error('Missing target selector for :extend().');\r\n                      }\r\n                      extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                      if (extendList) {\r\n                          extendList.push(extend);\r\n                      }\r\n                      else {\r\n                          extendList = [extend];\r\n                      }\r\n                  } while (parserInput.$char(','));\r\n                  expect(/^\\)/);\r\n                  if (isRule) {\r\n                      expect(/^;/);\r\n                  }\r\n                  return extendList;\r\n              },\r\n              //\r\n              // extendRule - used in a rule to extend all the parent selectors\r\n              //\r\n              extendRule: function () {\r\n                  return this.extend(true);\r\n              },\r\n              //\r\n              // Mixins\r\n              //\r\n              mixin: {\r\n                  //\r\n                  // A Mixin call, with an optional argument list\r\n                  //\r\n                  //     #mixins > .square(#fff);\r\n                  //     #mixins.square(#fff);\r\n                  //     .rounded(4px, black);\r\n                  //     .button;\r\n                  //\r\n                  // We can lookup / return a value using the lookup syntax:\r\n                  //\r\n                  //     color: #mixin.square(#fff)[@color];\r\n                  //\r\n                  // The `while` loop is there because mixins can be\r\n                  // namespaced, but we only support the child and descendant\r\n                  // selector for now.\r\n                  //\r\n                  call: function (inValue, getLookup) {\r\n                      var s = parserInput.currentChar();\r\n                      var important = false;\r\n                      var lookups;\r\n                      var index = parserInput.i;\r\n                      var elements;\r\n                      var args;\r\n                      var hasParens;\r\n                      if (s !== '.' && s !== '#') {\r\n                          return;\r\n                      }\r\n                      parserInput.save(); // stop us absorbing part of an invalid selector\r\n                      elements = this.elements();\r\n                      if (elements) {\r\n                          if (parserInput.$char('(')) {\r\n                              args = this.args(true).args;\r\n                              expectChar(')');\r\n                              hasParens = true;\r\n                          }\r\n                          if (getLookup !== false) {\r\n                              lookups = this.ruleLookups();\r\n                          }\r\n                          if (getLookup === true && !lookups) {\r\n                              parserInput.restore();\r\n                              return;\r\n                          }\r\n                          if (inValue && !lookups && !hasParens) {\r\n                              // This isn't a valid in-value mixin call\r\n                              parserInput.restore();\r\n                              return;\r\n                          }\r\n                          if (!inValue && parsers.important()) {\r\n                              important = true;\r\n                          }\r\n                          if (inValue || parsers.end()) {\r\n                              parserInput.forget();\r\n                              var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                              if (lookups) {\r\n                                  return new tree.NamespaceValue(mixin, lookups);\r\n                              }\r\n                              else {\r\n                                  return mixin;\r\n                              }\r\n                          }\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  /**\r\n                   * Matching elements for mixins\r\n                   * (Start with . or # and can have > )\r\n                   */\r\n                  elements: function () {\r\n                      var elements;\r\n                      var e;\r\n                      var c;\r\n                      var elem;\r\n                      var elemIndex;\r\n                      var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                      while (true) {\r\n                          elemIndex = parserInput.i;\r\n                          e = parserInput.$re(re);\r\n                          if (!e) {\r\n                              break;\r\n                          }\r\n                          elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                          if (elements) {\r\n                              elements.push(elem);\r\n                          }\r\n                          else {\r\n                              elements = [elem];\r\n                          }\r\n                          c = parserInput.$char('>');\r\n                      }\r\n                      return elements;\r\n                  },\r\n                  args: function (isCall) {\r\n                      var entities = parsers.entities;\r\n                      var returner = { args: null, variadic: false };\r\n                      var expressions = [];\r\n                      var argsSemiColon = [];\r\n                      var argsComma = [];\r\n                      var isSemiColonSeparated;\r\n                      var expressionContainsNamed;\r\n                      var name;\r\n                      var nameLoop;\r\n                      var value;\r\n                      var arg;\r\n                      var expand;\r\n                      var hasSep = true;\r\n                      parserInput.save();\r\n                      while (true) {\r\n                          if (isCall) {\r\n                              arg = parsers.detachedRuleset() || parsers.expression();\r\n                          }\r\n                          else {\r\n                              parserInput.commentStore.length = 0;\r\n                              if (parserInput.$str('...')) {\r\n                                  returner.variadic = true;\r\n                                  if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                      isSemiColonSeparated = true;\r\n                                  }\r\n                                  (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                      .push({ variadic: true });\r\n                                  break;\r\n                              }\r\n                              arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                          }\r\n                          if (!arg || !hasSep) {\r\n                              break;\r\n                          }\r\n                          nameLoop = null;\r\n                          if (arg.throwAwayComments) {\r\n                              arg.throwAwayComments();\r\n                          }\r\n                          value = arg;\r\n                          var val = null;\r\n                          if (isCall) {\r\n                              // Variable\r\n                              if (arg.value && arg.value.length == 1) {\r\n                                  val = arg.value[0];\r\n                              }\r\n                          }\r\n                          else {\r\n                              val = arg;\r\n                          }\r\n                          if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                              if (parserInput.$char(':')) {\r\n                                  if (expressions.length > 0) {\r\n                                      if (isSemiColonSeparated) {\r\n                                          error('Cannot mix ; and , as delimiter types');\r\n                                      }\r\n                                      expressionContainsNamed = true;\r\n                                  }\r\n                                  value = parsers.detachedRuleset() || parsers.expression();\r\n                                  if (!value) {\r\n                                      if (isCall) {\r\n                                          error('could not understand value for named argument');\r\n                                      }\r\n                                      else {\r\n                                          parserInput.restore();\r\n                                          returner.args = [];\r\n                                          return returner;\r\n                                      }\r\n                                  }\r\n                                  nameLoop = (name = val.name);\r\n                              }\r\n                              else if (parserInput.$str('...')) {\r\n                                  if (!isCall) {\r\n                                      returner.variadic = true;\r\n                                      if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                          isSemiColonSeparated = true;\r\n                                      }\r\n                                      (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                          .push({ name: arg.name, variadic: true });\r\n                                      break;\r\n                                  }\r\n                                  else {\r\n                                      expand = true;\r\n                                  }\r\n                              }\r\n                              else if (!isCall) {\r\n                                  name = nameLoop = val.name;\r\n                                  value = null;\r\n                              }\r\n                          }\r\n                          if (value) {\r\n                              expressions.push(value);\r\n                          }\r\n                          argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                          if (parserInput.$char(',')) {\r\n                              hasSep = true;\r\n                              continue;\r\n                          }\r\n                          hasSep = parserInput.$char(';') === ';';\r\n                          if (hasSep || isSemiColonSeparated) {\r\n                              if (expressionContainsNamed) {\r\n                                  error('Cannot mix ; and , as delimiter types');\r\n                              }\r\n                              isSemiColonSeparated = true;\r\n                              if (expressions.length > 1) {\r\n                                  value = new (tree.Value)(expressions);\r\n                              }\r\n                              argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                              name = null;\r\n                              expressions = [];\r\n                              expressionContainsNamed = false;\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                      return returner;\r\n                  },\r\n                  //\r\n                  // A Mixin definition, with a list of parameters\r\n                  //\r\n                  //     .rounded (@radius: 2px, @color) {\r\n                  //        ...\r\n                  //     }\r\n                  //\r\n                  // Until we have a finer grained state-machine, we have to\r\n                  // do a look-ahead, to make sure we don't have a mixin call.\r\n                  // See the `rule` function for more information.\r\n                  //\r\n                  // We start by matching `.rounded (`, and then proceed on to\r\n                  // the argument list, which has optional default values.\r\n                  // We store the parameters in `params`, with a `value` key,\r\n                  // if there is a value, such as in the case of `@radius`.\r\n                  //\r\n                  // Once we've got our params list, and a closing `)`, we parse\r\n                  // the `{...}` block.\r\n                  //\r\n                  definition: function () {\r\n                      var name;\r\n                      var params = [];\r\n                      var match;\r\n                      var ruleset;\r\n                      var cond;\r\n                      var variadic = false;\r\n                      if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                          parserInput.peek(/^[^{]*\\}/)) {\r\n                          return;\r\n                      }\r\n                      parserInput.save();\r\n                      match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                      if (match) {\r\n                          name = match[1];\r\n                          var argInfo = this.args(false);\r\n                          params = argInfo.args;\r\n                          variadic = argInfo.variadic;\r\n                          // .mixincall(\"@{a}\");\r\n                          // looks a bit like a mixin definition..\r\n                          // also\r\n                          // .mixincall(@a: {rule: set;});\r\n                          // so we have to be nice and restore\r\n                          if (!parserInput.$char(')')) {\r\n                              parserInput.restore('Missing closing \\')\\'');\r\n                              return;\r\n                          }\r\n                          parserInput.commentStore.length = 0;\r\n                          if (parserInput.$str('when')) { // Guard\r\n                              cond = expect(parsers.conditions, 'expected condition');\r\n                          }\r\n                          ruleset = parsers.block();\r\n                          if (ruleset) {\r\n                              parserInput.forget();\r\n                              return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                          }\r\n                          else {\r\n                              parserInput.restore();\r\n                          }\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  },\r\n                  ruleLookups: function () {\r\n                      var rule;\r\n                      var lookups = [];\r\n                      if (parserInput.currentChar() !== '[') {\r\n                          return;\r\n                      }\r\n                      while (true) {\r\n                          parserInput.save();\r\n                          rule = this.lookupValue();\r\n                          if (!rule && rule !== '') {\r\n                              parserInput.restore();\r\n                              break;\r\n                          }\r\n                          lookups.push(rule);\r\n                          parserInput.forget();\r\n                      }\r\n                      if (lookups.length > 0) {\r\n                          return lookups;\r\n                      }\r\n                  },\r\n                  lookupValue: function () {\r\n                      parserInput.save();\r\n                      if (!parserInput.$char('[')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                      if (!parserInput.$char(']')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (name || name === '') {\r\n                          parserInput.forget();\r\n                          return name;\r\n                      }\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              //\r\n              // Entities are the smallest recognized token,\r\n              // and can be found inside a rule's value.\r\n              //\r\n              entity: function () {\r\n                  var entities = this.entities;\r\n                  return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                      entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                      entities.javascript();\r\n              },\r\n              //\r\n              // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n              // because the `block` rule will be expecting it, but we still need to make sure\r\n              // it's there, if ';' was omitted.\r\n              //\r\n              end: function () {\r\n                  return parserInput.$char(';') || parserInput.peek('}');\r\n              },\r\n              //\r\n              // IE's alpha function\r\n              //\r\n              //     alpha(opacity=88)\r\n              //\r\n              ieAlpha: function () {\r\n                  var value;\r\n                  // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                  if (!parserInput.$re(/^opacity=/i)) {\r\n                      return;\r\n                  }\r\n                  value = parserInput.$re(/^\\d+/);\r\n                  if (!value) {\r\n                      value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                      value = \"@{\" + value.name.slice(1) + \"}\";\r\n                  }\r\n                  expectChar(')');\r\n                  return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n              },\r\n              //\r\n              // A Selector Element\r\n              //\r\n              //     div\r\n              //     + h1\r\n              //     #socks\r\n              //     input[type=\"text\"]\r\n              //\r\n              // Elements are the building blocks for Selectors,\r\n              // they are made out of a `Combinator` (see combinator rule),\r\n              // and an element name, such as a tag a class, or `*`.\r\n              //\r\n              element: function () {\r\n                  var e;\r\n                  var c;\r\n                  var v;\r\n                  var index = parserInput.i;\r\n                  c = this.combinator();\r\n                  e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                      parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                      parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                      parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                      this.entities.variableCurly();\r\n                  if (!e) {\r\n                      parserInput.save();\r\n                      if (parserInput.$char('(')) {\r\n                          if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                              e = new (tree.Paren)(v);\r\n                              parserInput.forget();\r\n                          }\r\n                          else {\r\n                              parserInput.restore('Missing closing \\')\\'');\r\n                          }\r\n                      }\r\n                      else {\r\n                          parserInput.forget();\r\n                      }\r\n                  }\r\n                  if (e) {\r\n                      return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                  }\r\n              },\r\n              //\r\n              // Combinators combine elements together, in a Selector.\r\n              //\r\n              // Because our parser isn't white-space sensitive, special care\r\n              // has to be taken, when parsing the descendant combinator, ` `,\r\n              // as it's an empty space. We have to check the previous character\r\n              // in the input, to see if it's a ` ` character. More info on how\r\n              // we deal with this in *combinator.js*.\r\n              //\r\n              combinator: function () {\r\n                  var c = parserInput.currentChar();\r\n                  if (c === '/') {\r\n                      parserInput.save();\r\n                      var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                      if (slashedCombinator) {\r\n                          parserInput.forget();\r\n                          return new (tree.Combinator)(slashedCombinator);\r\n                      }\r\n                      parserInput.restore();\r\n                  }\r\n                  if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                      parserInput.i++;\r\n                      if (c === '^' && parserInput.currentChar() === '^') {\r\n                          c = '^^';\r\n                          parserInput.i++;\r\n                      }\r\n                      while (parserInput.isWhitespace()) {\r\n                          parserInput.i++;\r\n                      }\r\n                      return new (tree.Combinator)(c);\r\n                  }\r\n                  else if (parserInput.isWhitespace(-1)) {\r\n                      return new (tree.Combinator)(' ');\r\n                  }\r\n                  else {\r\n                      return new (tree.Combinator)(null);\r\n                  }\r\n              },\r\n              //\r\n              // A CSS Selector\r\n              // with less extensions e.g. the ability to extend and guard\r\n              //\r\n              //     .class > div + h1\r\n              //     li a:hover\r\n              //\r\n              // Selectors are made out of one or more Elements, see above.\r\n              //\r\n              selector: function (isLess) {\r\n                  var index = parserInput.i;\r\n                  var elements;\r\n                  var extendList;\r\n                  var c;\r\n                  var e;\r\n                  var allExtends;\r\n                  var when;\r\n                  var condition;\r\n                  isLess = isLess !== false;\r\n                  while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                      if (when) {\r\n                          condition = expect(this.conditions, 'expected condition');\r\n                      }\r\n                      else if (condition) {\r\n                          error('CSS guard can only be used at the end of selector');\r\n                      }\r\n                      else if (extendList) {\r\n                          if (allExtends) {\r\n                              allExtends = allExtends.concat(extendList);\r\n                          }\r\n                          else {\r\n                              allExtends = extendList;\r\n                          }\r\n                      }\r\n                      else {\r\n                          if (allExtends) {\r\n                              error('Extend can only be used at the end of selector');\r\n                          }\r\n                          c = parserInput.currentChar();\r\n                          if (elements) {\r\n                              elements.push(e);\r\n                          }\r\n                          else {\r\n                              elements = [e];\r\n                          }\r\n                          e = null;\r\n                      }\r\n                      if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                          break;\r\n                      }\r\n                  }\r\n                  if (elements) {\r\n                      return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                  }\r\n                  if (allExtends) {\r\n                      error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                  }\r\n              },\r\n              selectors: function () {\r\n                  var s;\r\n                  var selectors;\r\n                  while (true) {\r\n                      s = this.selector();\r\n                      if (!s) {\r\n                          break;\r\n                      }\r\n                      if (selectors) {\r\n                          selectors.push(s);\r\n                      }\r\n                      else {\r\n                          selectors = [s];\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                      if (s.condition && selectors.length > 1) {\r\n                          error(\"Guards are only currently allowed on a single selector.\");\r\n                      }\r\n                      if (!parserInput.$char(',')) {\r\n                          break;\r\n                      }\r\n                      if (s.condition) {\r\n                          error(\"Guards are only currently allowed on a single selector.\");\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                  }\r\n                  return selectors;\r\n              },\r\n              attribute: function () {\r\n                  if (!parserInput.$char('[')) {\r\n                      return;\r\n                  }\r\n                  var entities = this.entities;\r\n                  var key;\r\n                  var val;\r\n                  var op;\r\n                  if (!(key = entities.variableCurly())) {\r\n                      key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                  }\r\n                  op = parserInput.$re(/^[|~*$^]?=/);\r\n                  if (op) {\r\n                      val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                  }\r\n                  expectChar(']');\r\n                  return new (tree.Attribute)(key, op, val);\r\n              },\r\n              //\r\n              // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n              // It's a wrapper around the `primary` rule, with added `{}`.\r\n              //\r\n              block: function () {\r\n                  var content;\r\n                  if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                      return content;\r\n                  }\r\n              },\r\n              blockRuleset: function () {\r\n                  var block = this.block();\r\n                  if (block) {\r\n                      block = new tree.Ruleset(null, block);\r\n                  }\r\n                  return block;\r\n              },\r\n              detachedRuleset: function () {\r\n                  var argInfo;\r\n                  var params;\r\n                  var variadic;\r\n                  parserInput.save();\r\n                  if (parserInput.$re(/^[.#]\\(/)) {\r\n                      /**\r\n                       * DR args currently only implemented for each() function, and not\r\n                       * yet settable as `@dr: #(@arg) {}`\r\n                       * This should be done when DRs are merged with mixins.\r\n                       * See: https://github.com/less/less-meta/issues/16\r\n                       */\r\n                      argInfo = this.mixin.args(false);\r\n                      params = argInfo.args;\r\n                      variadic = argInfo.variadic;\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                  }\r\n                  var blockRuleset = this.blockRuleset();\r\n                  if (blockRuleset) {\r\n                      parserInput.forget();\r\n                      if (params) {\r\n                          return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                      }\r\n                      return new tree.DetachedRuleset(blockRuleset);\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // div, .class, body > p {...}\r\n              //\r\n              ruleset: function () {\r\n                  var selectors;\r\n                  var rules;\r\n                  var debugInfo;\r\n                  parserInput.save();\r\n                  if (context.dumpLineNumbers) {\r\n                      debugInfo = getDebugInfo(parserInput.i);\r\n                  }\r\n                  selectors = this.selectors();\r\n                  if (selectors && (rules = this.block())) {\r\n                      parserInput.forget();\r\n                      var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                      if (context.dumpLineNumbers) {\r\n                          ruleset.debugInfo = debugInfo;\r\n                      }\r\n                      return ruleset;\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              declaration: function () {\r\n                  var name;\r\n                  var value;\r\n                  var index = parserInput.i;\r\n                  var hasDR;\r\n                  var c = parserInput.currentChar();\r\n                  var important;\r\n                  var merge;\r\n                  var isVariable;\r\n                  if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                      return;\r\n                  }\r\n                  parserInput.save();\r\n                  name = this.variable() || this.ruleProperty();\r\n                  if (name) {\r\n                      isVariable = typeof name === 'string';\r\n                      if (isVariable) {\r\n                          value = this.detachedRuleset();\r\n                          if (value) {\r\n                              hasDR = true;\r\n                          }\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                      if (!value) {\r\n                          // a name returned by this.ruleProperty() is always an array of the form:\r\n                          // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                          // where each item is a tree.Keyword or tree.Variable\r\n                          merge = !isVariable && name.length > 1 && name.pop().value;\r\n                          // Custom property values get permissive parsing\r\n                          if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                              value = this.permissiveValue();\r\n                          }\r\n                          // Try to store values as anonymous\r\n                          // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                          else {\r\n                              value = this.anonymousValue();\r\n                          }\r\n                          if (value) {\r\n                              parserInput.forget();\r\n                              // anonymous values absorb the end ';' which is required for them to work\r\n                              return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                          }\r\n                          if (!value) {\r\n                              value = this.value();\r\n                          }\r\n                          if (value) {\r\n                              important = this.important();\r\n                          }\r\n                          else if (isVariable) {\r\n                              // As a last resort, try permissiveValue\r\n                              value = this.permissiveValue();\r\n                          }\r\n                      }\r\n                      if (value && (this.end() || hasDR)) {\r\n                          parserInput.forget();\r\n                          return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              anonymousValue: function () {\r\n                  var index = parserInput.i;\r\n                  var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                  if (match) {\r\n                      return new (tree.Anonymous)(match[1], index);\r\n                  }\r\n              },\r\n              /**\r\n               * Used for custom properties, at-rules, and variables (as fallback)\r\n               * Parses almost anything inside of {} [] () \"\" blocks\r\n               * until it reaches outer-most tokens.\r\n               *\r\n               * First, it will try to parse comments and entities to reach\r\n               * the end. This is mostly like the Expression parser except no\r\n               * math is allowed.\r\n               */\r\n              permissiveValue: function (untilTokens) {\r\n                  var i;\r\n                  var e;\r\n                  var done;\r\n                  var value;\r\n                  var tok = untilTokens || ';';\r\n                  var index = parserInput.i;\r\n                  var result = [];\r\n                  function testCurrentChar() {\r\n                      var char = parserInput.currentChar();\r\n                      if (typeof tok === 'string') {\r\n                          return char === tok;\r\n                      }\r\n                      else {\r\n                          return tok.test(char);\r\n                      }\r\n                  }\r\n                  if (testCurrentChar()) {\r\n                      return;\r\n                  }\r\n                  value = [];\r\n                  do {\r\n                      e = this.comment();\r\n                      if (e) {\r\n                          value.push(e);\r\n                          continue;\r\n                      }\r\n                      e = this.entity();\r\n                      if (e) {\r\n                          value.push(e);\r\n                      }\r\n                  } while (e);\r\n                  done = testCurrentChar();\r\n                  if (value.length > 0) {\r\n                      value = new (tree.Expression)(value);\r\n                      if (done) {\r\n                          return value;\r\n                      }\r\n                      else {\r\n                          result.push(value);\r\n                      }\r\n                      // Preserve space before $parseUntil as it will not\r\n                      if (parserInput.prevChar() === ' ') {\r\n                          result.push(new tree.Anonymous(' ', index));\r\n                      }\r\n                  }\r\n                  parserInput.save();\r\n                  value = parserInput.$parseUntil(tok);\r\n                  if (value) {\r\n                      if (typeof value === 'string') {\r\n                          error(\"Expected '\" + value + \"'\", 'Parse');\r\n                      }\r\n                      if (value.length === 1 && value[0] === ' ') {\r\n                          parserInput.forget();\r\n                          return new tree.Anonymous('', index);\r\n                      }\r\n                      var item = void 0;\r\n                      for (i = 0; i < value.length; i++) {\r\n                          item = value[i];\r\n                          if (Array.isArray(item)) {\r\n                              // Treat actual quotes as normal quoted values\r\n                              result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                          }\r\n                          else {\r\n                              if (i === value.length - 1) {\r\n                                  item = item.trim();\r\n                              }\r\n                              // Treat like quoted values, but replace vars like unquoted expressions\r\n                              var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                              quote.variableRegex = /@([\\w-]+)/g;\r\n                              quote.propRegex = /\\$([\\w-]+)/g;\r\n                              result.push(quote);\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      return new tree.Expression(result, true);\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // An @import atrule\r\n              //\r\n              //     @import \"lib\";\r\n              //\r\n              // Depending on our environment, importing is done differently:\r\n              // In the browser, it's an XHR request, in Node, it would be a\r\n              // file-system operation. The function used for importing is\r\n              // stored in `import`, which we pass to the Import constructor.\r\n              //\r\n              'import': function () {\r\n                  var path;\r\n                  var features;\r\n                  var index = parserInput.i;\r\n                  var dir = parserInput.$re(/^@import?\\s+/);\r\n                  if (dir) {\r\n                      var options = (dir ? this.importOptions() : null) || {};\r\n                      if ((path = this.entities.quoted() || this.entities.url())) {\r\n                          features = this.mediaFeatures();\r\n                          if (!parserInput.$char(';')) {\r\n                              parserInput.i = index;\r\n                              error('missing semi-colon or unrecognised media features on import');\r\n                          }\r\n                          features = features && new (tree.Value)(features);\r\n                          return new (tree.Import)(path, features, options, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.i = index;\r\n                          error('malformed import statement');\r\n                      }\r\n                  }\r\n              },\r\n              importOptions: function () {\r\n                  var o;\r\n                  var options = {};\r\n                  var optionName;\r\n                  var value;\r\n                  // list of options, surrounded by parens\r\n                  if (!parserInput.$char('(')) {\r\n                      return null;\r\n                  }\r\n                  do {\r\n                      o = this.importOption();\r\n                      if (o) {\r\n                          optionName = o;\r\n                          value = true;\r\n                          switch (optionName) {\r\n                              case 'css':\r\n                                  optionName = 'less';\r\n                                  value = false;\r\n                                  break;\r\n                              case 'once':\r\n                                  optionName = 'multiple';\r\n                                  value = false;\r\n                                  break;\r\n                          }\r\n                          options[optionName] = value;\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  } while (o);\r\n                  expectChar(')');\r\n                  return options;\r\n              },\r\n              importOption: function () {\r\n                  var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                  if (opt) {\r\n                      return opt[1];\r\n                  }\r\n              },\r\n              mediaFeature: function () {\r\n                  var entities = this.entities;\r\n                  var nodes = [];\r\n                  var e;\r\n                  var p;\r\n                  parserInput.save();\r\n                  do {\r\n                      e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                      if (e) {\r\n                          nodes.push(e);\r\n                      }\r\n                      else if (parserInput.$char('(')) {\r\n                          p = this.property();\r\n                          e = this.value();\r\n                          if (parserInput.$char(')')) {\r\n                              if (p && e) {\r\n                                  nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                              }\r\n                              else if (e) {\r\n                                  nodes.push(new (tree.Paren)(e));\r\n                              }\r\n                              else {\r\n                                  error('badly formed media feature definition');\r\n                              }\r\n                          }\r\n                          else {\r\n                              error('Missing closing \\')\\'', 'Parse');\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  parserInput.forget();\r\n                  if (nodes.length > 0) {\r\n                      return new (tree.Expression)(nodes);\r\n                  }\r\n              },\r\n              mediaFeatures: function () {\r\n                  var entities = this.entities;\r\n                  var features = [];\r\n                  var e;\r\n                  do {\r\n                      e = this.mediaFeature();\r\n                      if (e) {\r\n                          features.push(e);\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                      else {\r\n                          e = entities.variable() || entities.mixinLookup();\r\n                          if (e) {\r\n                              features.push(e);\r\n                              if (!parserInput.$char(',')) {\r\n                                  break;\r\n                              }\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  return features.length > 0 ? features : null;\r\n              },\r\n              media: function () {\r\n                  var features;\r\n                  var rules;\r\n                  var media;\r\n                  var debugInfo;\r\n                  var index = parserInput.i;\r\n                  if (context.dumpLineNumbers) {\r\n                      debugInfo = getDebugInfo(index);\r\n                  }\r\n                  parserInput.save();\r\n                  if (parserInput.$str('@media')) {\r\n                      features = this.mediaFeatures();\r\n                      rules = this.block();\r\n                      if (!rules) {\r\n                          error('media definitions require block statements after any features');\r\n                      }\r\n                      parserInput.forget();\r\n                      media = new (tree.Media)(rules, features, index, fileInfo);\r\n                      if (context.dumpLineNumbers) {\r\n                          media.debugInfo = debugInfo;\r\n                      }\r\n                      return media;\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // A @plugin directive, used to import plugins dynamically.\r\n              //\r\n              //     @plugin (args) \"lib\";\r\n              //\r\n              plugin: function () {\r\n                  var path;\r\n                  var args;\r\n                  var options;\r\n                  var index = parserInput.i;\r\n                  var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                  if (dir) {\r\n                      args = this.pluginArgs();\r\n                      if (args) {\r\n                          options = {\r\n                              pluginArgs: args,\r\n                              isPlugin: true\r\n                          };\r\n                      }\r\n                      else {\r\n                          options = { isPlugin: true };\r\n                      }\r\n                      if ((path = this.entities.quoted() || this.entities.url())) {\r\n                          if (!parserInput.$char(';')) {\r\n                              parserInput.i = index;\r\n                              error('missing semi-colon on @plugin');\r\n                          }\r\n                          return new (tree.Import)(path, null, options, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.i = index;\r\n                          error('malformed @plugin statement');\r\n                      }\r\n                  }\r\n              },\r\n              pluginArgs: function () {\r\n                  // list of options, surrounded by parens\r\n                  parserInput.save();\r\n                  if (!parserInput.$char('(')) {\r\n                      parserInput.restore();\r\n                      return null;\r\n                  }\r\n                  var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                  if (args[1]) {\r\n                      parserInput.forget();\r\n                      return args[1].trim();\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                      return null;\r\n                  }\r\n              },\r\n              //\r\n              // A CSS AtRule\r\n              //\r\n              //     @charset \"utf-8\";\r\n              //\r\n              atrule: function () {\r\n                  var index = parserInput.i;\r\n                  var name;\r\n                  var value;\r\n                  var rules;\r\n                  var nonVendorSpecificName;\r\n                  var hasIdentifier;\r\n                  var hasExpression;\r\n                  var hasUnknown;\r\n                  var hasBlock = true;\r\n                  var isRooted = true;\r\n                  if (parserInput.currentChar() !== '@') {\r\n                      return;\r\n                  }\r\n                  value = this['import']() || this.plugin() || this.media();\r\n                  if (value) {\r\n                      return value;\r\n                  }\r\n                  parserInput.save();\r\n                  name = parserInput.$re(/^@[a-z-]+/);\r\n                  if (!name) {\r\n                      return;\r\n                  }\r\n                  nonVendorSpecificName = name;\r\n                  if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                      nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                  }\r\n                  switch (nonVendorSpecificName) {\r\n                      case '@charset':\r\n                          hasIdentifier = true;\r\n                          hasBlock = false;\r\n                          break;\r\n                      case '@namespace':\r\n                          hasExpression = true;\r\n                          hasBlock = false;\r\n                          break;\r\n                      case '@keyframes':\r\n                      case '@counter-style':\r\n                          hasIdentifier = true;\r\n                          break;\r\n                      case '@document':\r\n                      case '@supports':\r\n                          hasUnknown = true;\r\n                          isRooted = false;\r\n                          break;\r\n                      default:\r\n                          hasUnknown = true;\r\n                          break;\r\n                  }\r\n                  parserInput.commentStore.length = 0;\r\n                  if (hasIdentifier) {\r\n                      value = this.entity();\r\n                      if (!value) {\r\n                          error(\"expected \" + name + \" identifier\");\r\n                      }\r\n                  }\r\n                  else if (hasExpression) {\r\n                      value = this.expression();\r\n                      if (!value) {\r\n                          error(\"expected \" + name + \" expression\");\r\n                      }\r\n                  }\r\n                  else if (hasUnknown) {\r\n                      value = this.permissiveValue(/^[{;]/);\r\n                      hasBlock = (parserInput.currentChar() === '{');\r\n                      if (!value) {\r\n                          if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                              error(name + \" rule is missing block or ending semi-colon\");\r\n                          }\r\n                      }\r\n                      else if (!value.value) {\r\n                          value = null;\r\n                      }\r\n                  }\r\n                  if (hasBlock) {\r\n                      rules = this.blockRuleset();\r\n                  }\r\n                  if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                      parserInput.forget();\r\n                      return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                  }\r\n                  parserInput.restore('at-rule options not recognised');\r\n              },\r\n              //\r\n              // A Value is a comma-delimited list of Expressions\r\n              //\r\n              //     font-family: Baskerville, Georgia, serif;\r\n              //\r\n              // In a Rule, a Value represents everything after the `:`,\r\n              // and before the `;`.\r\n              //\r\n              value: function () {\r\n                  var e;\r\n                  var expressions = [];\r\n                  var index = parserInput.i;\r\n                  do {\r\n                      e = this.expression();\r\n                      if (e) {\r\n                          expressions.push(e);\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  if (expressions.length > 0) {\r\n                      return new (tree.Value)(expressions, index);\r\n                  }\r\n              },\r\n              important: function () {\r\n                  if (parserInput.currentChar() === '!') {\r\n                      return parserInput.$re(/^! *important/);\r\n                  }\r\n              },\r\n              sub: function () {\r\n                  var a;\r\n                  var e;\r\n                  parserInput.save();\r\n                  if (parserInput.$char('(')) {\r\n                      a = this.addition();\r\n                      if (a && parserInput.$char(')')) {\r\n                          parserInput.forget();\r\n                          e = new (tree.Expression)([a]);\r\n                          e.parens = true;\r\n                          return e;\r\n                      }\r\n                      parserInput.restore('Expected \\')\\'');\r\n                      return;\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              multiplication: function () {\r\n                  var m;\r\n                  var a;\r\n                  var op;\r\n                  var operation;\r\n                  var isSpaced;\r\n                  m = this.operand();\r\n                  if (m) {\r\n                      isSpaced = parserInput.isWhitespace(-1);\r\n                      while (true) {\r\n                          if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                              break;\r\n                          }\r\n                          parserInput.save();\r\n                          op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                          if (!op) {\r\n                              parserInput.forget();\r\n                              break;\r\n                          }\r\n                          a = this.operand();\r\n                          if (!a) {\r\n                              parserInput.restore();\r\n                              break;\r\n                          }\r\n                          parserInput.forget();\r\n                          m.parensInOp = true;\r\n                          a.parensInOp = true;\r\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                          isSpaced = parserInput.isWhitespace(-1);\r\n                      }\r\n                      return operation || m;\r\n                  }\r\n              },\r\n              addition: function () {\r\n                  var m;\r\n                  var a;\r\n                  var op;\r\n                  var operation;\r\n                  var isSpaced;\r\n                  m = this.multiplication();\r\n                  if (m) {\r\n                      isSpaced = parserInput.isWhitespace(-1);\r\n                      while (true) {\r\n                          op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                          if (!op) {\r\n                              break;\r\n                          }\r\n                          a = this.multiplication();\r\n                          if (!a) {\r\n                              break;\r\n                          }\r\n                          m.parensInOp = true;\r\n                          a.parensInOp = true;\r\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                          isSpaced = parserInput.isWhitespace(-1);\r\n                      }\r\n                      return operation || m;\r\n                  }\r\n              },\r\n              conditions: function () {\r\n                  var a;\r\n                  var b;\r\n                  var index = parserInput.i;\r\n                  var condition;\r\n                  a = this.condition(true);\r\n                  if (a) {\r\n                      while (true) {\r\n                          if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                          b = this.condition(true);\r\n                          if (!b) {\r\n                              break;\r\n                          }\r\n                          condition = new (tree.Condition)('or', condition || a, b, index);\r\n                      }\r\n                      return condition || a;\r\n                  }\r\n              },\r\n              condition: function (needsParens) {\r\n                  var result;\r\n                  var logical;\r\n                  var next;\r\n                  function or() {\r\n                      return parserInput.$str('or');\r\n                  }\r\n                  result = this.conditionAnd(needsParens);\r\n                  if (!result) {\r\n                      return;\r\n                  }\r\n                  logical = or();\r\n                  if (logical) {\r\n                      next = this.condition(needsParens);\r\n                      if (next) {\r\n                          result = new (tree.Condition)(logical, result, next);\r\n                      }\r\n                      else {\r\n                          return;\r\n                      }\r\n                  }\r\n                  return result;\r\n              },\r\n              conditionAnd: function (needsParens) {\r\n                  var result;\r\n                  var logical;\r\n                  var next;\r\n                  var self = this;\r\n                  function insideCondition() {\r\n                      var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                      if (!cond && !needsParens) {\r\n                          return self.atomicCondition(needsParens);\r\n                      }\r\n                      return cond;\r\n                  }\r\n                  function and() {\r\n                      return parserInput.$str('and');\r\n                  }\r\n                  result = insideCondition();\r\n                  if (!result) {\r\n                      return;\r\n                  }\r\n                  logical = and();\r\n                  if (logical) {\r\n                      next = this.conditionAnd(needsParens);\r\n                      if (next) {\r\n                          result = new (tree.Condition)(logical, result, next);\r\n                      }\r\n                      else {\r\n                          return;\r\n                      }\r\n                  }\r\n                  return result;\r\n              },\r\n              negatedCondition: function (needsParens) {\r\n                  if (parserInput.$str('not')) {\r\n                      var result = this.parenthesisCondition(needsParens);\r\n                      if (result) {\r\n                          result.negate = !result.negate;\r\n                      }\r\n                      return result;\r\n                  }\r\n              },\r\n              parenthesisCondition: function (needsParens) {\r\n                  function tryConditionFollowedByParenthesis(me) {\r\n                      var body;\r\n                      parserInput.save();\r\n                      body = me.condition(needsParens);\r\n                      if (!body) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return body;\r\n                  }\r\n                  var body;\r\n                  parserInput.save();\r\n                  if (!parserInput.$str('(')) {\r\n                      parserInput.restore();\r\n                      return;\r\n                  }\r\n                  body = tryConditionFollowedByParenthesis(this);\r\n                  if (body) {\r\n                      parserInput.forget();\r\n                      return body;\r\n                  }\r\n                  body = this.atomicCondition(needsParens);\r\n                  if (!body) {\r\n                      parserInput.restore();\r\n                      return;\r\n                  }\r\n                  if (!parserInput.$char(')')) {\r\n                      parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                      return;\r\n                  }\r\n                  parserInput.forget();\r\n                  return body;\r\n              },\r\n              atomicCondition: function (needsParens) {\r\n                  var entities = this.entities;\r\n                  var index = parserInput.i;\r\n                  var a;\r\n                  var b;\r\n                  var c;\r\n                  var op;\r\n                  function cond() {\r\n                      return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                  }\r\n                  cond = cond.bind(this);\r\n                  a = cond();\r\n                  if (a) {\r\n                      if (parserInput.$char('>')) {\r\n                          if (parserInput.$char('=')) {\r\n                              op = '>=';\r\n                          }\r\n                          else {\r\n                              op = '>';\r\n                          }\r\n                      }\r\n                      else if (parserInput.$char('<')) {\r\n                          if (parserInput.$char('=')) {\r\n                              op = '<=';\r\n                          }\r\n                          else {\r\n                              op = '<';\r\n                          }\r\n                      }\r\n                      else if (parserInput.$char('=')) {\r\n                          if (parserInput.$char('>')) {\r\n                              op = '=>';\r\n                          }\r\n                          else if (parserInput.$char('<')) {\r\n                              op = '=<';\r\n                          }\r\n                          else {\r\n                              op = '=';\r\n                          }\r\n                      }\r\n                      if (op) {\r\n                          b = cond();\r\n                          if (b) {\r\n                              c = new (tree.Condition)(op, a, b, index, false);\r\n                          }\r\n                          else {\r\n                              error('expected expression');\r\n                          }\r\n                      }\r\n                      else {\r\n                          c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                      }\r\n                      return c;\r\n                  }\r\n              },\r\n              //\r\n              // An operand is anything that can be part of an operation,\r\n              // such as a Color, or a Variable\r\n              //\r\n              operand: function () {\r\n                  var entities = this.entities;\r\n                  var negate;\r\n                  if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                      negate = parserInput.$char('-');\r\n                  }\r\n                  var o = this.sub() || entities.dimension() ||\r\n                      entities.color() || entities.variable() ||\r\n                      entities.property() || entities.call() ||\r\n                      entities.quoted(true) || entities.colorKeyword() ||\r\n                      entities.mixinLookup();\r\n                  if (negate) {\r\n                      o.parensInOp = true;\r\n                      o = new (tree.Negative)(o);\r\n                  }\r\n                  return o;\r\n              },\r\n              //\r\n              // Expressions either represent mathematical operations,\r\n              // or white-space delimited Entities.\r\n              //\r\n              //     1px solid black\r\n              //     @var * 2\r\n              //\r\n              expression: function () {\r\n                  var entities = [];\r\n                  var e;\r\n                  var delim;\r\n                  var index = parserInput.i;\r\n                  do {\r\n                      e = this.comment();\r\n                      if (e) {\r\n                          entities.push(e);\r\n                          continue;\r\n                      }\r\n                      e = this.addition() || this.entity();\r\n                      if (e instanceof tree.Comment) {\r\n                          e = null;\r\n                      }\r\n                      if (e) {\r\n                          entities.push(e);\r\n                          // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                          if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                              delim = parserInput.$char('/');\r\n                              if (delim) {\r\n                                  entities.push(new (tree.Anonymous)(delim, index));\r\n                              }\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  if (entities.length > 0) {\r\n                      return new (tree.Expression)(entities);\r\n                  }\r\n              },\r\n              property: function () {\r\n                  var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                  if (name) {\r\n                      return name[1];\r\n                  }\r\n              },\r\n              ruleProperty: function () {\r\n                  var name = [];\r\n                  var index = [];\r\n                  var s;\r\n                  var k;\r\n                  parserInput.save();\r\n                  var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                  if (simpleProperty) {\r\n                      name = [new (tree.Keyword)(simpleProperty[1])];\r\n                      parserInput.forget();\r\n                      return name;\r\n                  }\r\n                  function match(re) {\r\n                      var i = parserInput.i;\r\n                      var chunk = parserInput.$re(re);\r\n                      if (chunk) {\r\n                          index.push(i);\r\n                          return name.push(chunk[1]);\r\n                      }\r\n                  }\r\n                  match(/^(\\*?)/);\r\n                  while (true) {\r\n                      if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                          break;\r\n                      }\r\n                  }\r\n                  if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                      parserInput.forget();\r\n                      // at last, we have the complete match now. move forward,\r\n                      // convert name particles to tree objects and return:\r\n                      if (name[0] === '') {\r\n                          name.shift();\r\n                          index.shift();\r\n                      }\r\n                      for (k = 0; k < name.length; k++) {\r\n                          s = name[k];\r\n                          name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                              new (tree.Keyword)(s) :\r\n                              (s.charAt(0) === '@' ?\r\n                                  new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                  new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                      }\r\n                      return name;\r\n                  }\r\n                  parserInput.restore();\r\n              }\r\n          }\r\n      };\r\n  };\r\n  Parser.serializeVars = function (vars) {\r\n      var s = '';\r\n      for (var name_1 in vars) {\r\n          if (Object.hasOwnProperty.call(vars, name_1)) {\r\n              var value = vars[name_1];\r\n              s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n          }\r\n      }\r\n      return s;\r\n  };\n\n  function boolean(condition) {\r\n      return condition ? Keyword.True : Keyword.False;\r\n  }\r\n  /**\r\n   * Functions with evalArgs set to false are sent context\r\n   * as the first argument.\r\n   */\r\n  function If(context, condition, trueValue, falseValue) {\r\n      return condition.eval(context) ? trueValue.eval(context)\r\n          : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n  }\r\n  If.evalArgs = false;\r\n  var boolean$1 = { boolean: boolean, 'if': If };\n\n  var colorFunctions;\r\n  function clamp$1(val) {\r\n      return Math.min(1, Math.max(0, val));\r\n  }\r\n  function hsla(origColor, hsl) {\r\n      var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n      if (color) {\r\n          if (origColor.value &&\r\n              /^(rgb|hsl)/.test(origColor.value)) {\r\n              color.value = origColor.value;\r\n          }\r\n          else {\r\n              color.value = 'rgb';\r\n          }\r\n          return color;\r\n      }\r\n  }\r\n  function toHSL(color) {\r\n      if (color.toHSL) {\r\n          return color.toHSL();\r\n      }\r\n      else {\r\n          throw new Error('Argument cannot be evaluated to a color');\r\n      }\r\n  }\r\n  function toHSV(color) {\r\n      if (color.toHSV) {\r\n          return color.toHSV();\r\n      }\r\n      else {\r\n          throw new Error('Argument cannot be evaluated to a color');\r\n      }\r\n  }\r\n  function number(n) {\r\n      if (n instanceof Dimension) {\r\n          return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n      }\r\n      else if (typeof n === 'number') {\r\n          return n;\r\n      }\r\n      else {\r\n          throw {\r\n              type: 'Argument',\r\n              message: 'color functions take numbers as parameters'\r\n          };\r\n      }\r\n  }\r\n  function scaled(n, size) {\r\n      if (n instanceof Dimension && n.unit.is('%')) {\r\n          return parseFloat(n.value * size / 100);\r\n      }\r\n      else {\r\n          return number(n);\r\n      }\r\n  }\r\n  colorFunctions = {\r\n      rgb: function (r, g, b) {\r\n          var color = colorFunctions.rgba(r, g, b, 1.0);\r\n          if (color) {\r\n              color.value = 'rgb';\r\n              return color;\r\n          }\r\n      },\r\n      rgba: function (r, g, b, a) {\r\n          try {\r\n              if (r instanceof Color) {\r\n                  if (g) {\r\n                      a = number(g);\r\n                  }\r\n                  else {\r\n                      a = r.alpha;\r\n                  }\r\n                  return new Color(r.rgb, a, 'rgba');\r\n              }\r\n              var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n              a = number(a);\r\n              return new Color(rgb, a, 'rgba');\r\n          }\r\n          catch (e) { }\r\n      },\r\n      hsl: function (h, s, l) {\r\n          var color = colorFunctions.hsla(h, s, l, 1.0);\r\n          if (color) {\r\n              color.value = 'hsl';\r\n              return color;\r\n          }\r\n      },\r\n      hsla: function (h, s, l, a) {\r\n          try {\r\n              if (h instanceof Color) {\r\n                  if (s) {\r\n                      a = number(s);\r\n                  }\r\n                  else {\r\n                      a = h.alpha;\r\n                  }\r\n                  return new Color(h.rgb, a, 'hsla');\r\n              }\r\n              var m1_1;\r\n              var m2_1;\r\n              function hue(h) {\r\n                  h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                  if (h * 6 < 1) {\r\n                      return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                  }\r\n                  else if (h * 2 < 1) {\r\n                      return m2_1;\r\n                  }\r\n                  else if (h * 3 < 2) {\r\n                      return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                  }\r\n                  else {\r\n                      return m1_1;\r\n                  }\r\n              }\r\n              h = (number(h) % 360) / 360;\r\n              s = clamp$1(number(s));\r\n              l = clamp$1(number(l));\r\n              a = clamp$1(number(a));\r\n              m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n              m1_1 = l * 2 - m2_1;\r\n              var rgb = [\r\n                  hue(h + 1 / 3) * 255,\r\n                  hue(h) * 255,\r\n                  hue(h - 1 / 3) * 255\r\n              ];\r\n              a = number(a);\r\n              return new Color(rgb, a, 'hsla');\r\n          }\r\n          catch (e) { }\r\n      },\r\n      hsv: function (h, s, v) {\r\n          return colorFunctions.hsva(h, s, v, 1.0);\r\n      },\r\n      hsva: function (h, s, v, a) {\r\n          h = ((number(h) % 360) / 360) * 360;\r\n          s = number(s);\r\n          v = number(v);\r\n          a = number(a);\r\n          var i;\r\n          var f;\r\n          i = Math.floor((h / 60) % 6);\r\n          f = (h / 60) - i;\r\n          var vs = [v,\r\n              v * (1 - s),\r\n              v * (1 - f * s),\r\n              v * (1 - (1 - f) * s)];\r\n          var perm = [[0, 3, 1],\r\n              [2, 0, 1],\r\n              [1, 0, 3],\r\n              [1, 2, 0],\r\n              [3, 1, 0],\r\n              [0, 1, 2]];\r\n          return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n      },\r\n      hue: function (color) {\r\n          return new Dimension(toHSL(color).h);\r\n      },\r\n      saturation: function (color) {\r\n          return new Dimension(toHSL(color).s * 100, '%');\r\n      },\r\n      lightness: function (color) {\r\n          return new Dimension(toHSL(color).l * 100, '%');\r\n      },\r\n      hsvhue: function (color) {\r\n          return new Dimension(toHSV(color).h);\r\n      },\r\n      hsvsaturation: function (color) {\r\n          return new Dimension(toHSV(color).s * 100, '%');\r\n      },\r\n      hsvvalue: function (color) {\r\n          return new Dimension(toHSV(color).v * 100, '%');\r\n      },\r\n      red: function (color) {\r\n          return new Dimension(color.rgb[0]);\r\n      },\r\n      green: function (color) {\r\n          return new Dimension(color.rgb[1]);\r\n      },\r\n      blue: function (color) {\r\n          return new Dimension(color.rgb[2]);\r\n      },\r\n      alpha: function (color) {\r\n          return new Dimension(toHSL(color).a);\r\n      },\r\n      luma: function (color) {\r\n          return new Dimension(color.luma() * color.alpha * 100, '%');\r\n      },\r\n      luminance: function (color) {\r\n          var luminance = (0.2126 * color.rgb[0] / 255) +\r\n              (0.7152 * color.rgb[1] / 255) +\r\n              (0.0722 * color.rgb[2] / 255);\r\n          return new Dimension(luminance * color.alpha * 100, '%');\r\n      },\r\n      saturate: function (color, amount, method) {\r\n          // filter: saturate(3.2);\r\n          // should be kept as is, so check for color\r\n          if (!color.rgb) {\r\n              return null;\r\n          }\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.s += hsl.s * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.s += amount.value / 100;\r\n          }\r\n          hsl.s = clamp$1(hsl.s);\r\n          return hsla(color, hsl);\r\n      },\r\n      desaturate: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.s -= hsl.s * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.s -= amount.value / 100;\r\n          }\r\n          hsl.s = clamp$1(hsl.s);\r\n          return hsla(color, hsl);\r\n      },\r\n      lighten: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.l += hsl.l * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.l += amount.value / 100;\r\n          }\r\n          hsl.l = clamp$1(hsl.l);\r\n          return hsla(color, hsl);\r\n      },\r\n      darken: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.l -= hsl.l * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.l -= amount.value / 100;\r\n          }\r\n          hsl.l = clamp$1(hsl.l);\r\n          return hsla(color, hsl);\r\n      },\r\n      fadein: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.a += hsl.a * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.a += amount.value / 100;\r\n          }\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      fadeout: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.a -= hsl.a * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.a -= amount.value / 100;\r\n          }\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      fade: function (color, amount) {\r\n          var hsl = toHSL(color);\r\n          hsl.a = amount.value / 100;\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      spin: function (color, amount) {\r\n          var hsl = toHSL(color);\r\n          var hue = (hsl.h + amount.value) % 360;\r\n          hsl.h = hue < 0 ? 360 + hue : hue;\r\n          return hsla(color, hsl);\r\n      },\r\n      //\r\n      // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n      // http://sass-lang.com\r\n      //\r\n      mix: function (color1, color2, weight) {\r\n          if (!weight) {\r\n              weight = new Dimension(50);\r\n          }\r\n          var p = weight.value / 100.0;\r\n          var w = p * 2 - 1;\r\n          var a = toHSL(color1).a - toHSL(color2).a;\r\n          var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n          var w2 = 1 - w1;\r\n          var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n              color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n              color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n          var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n          return new Color(rgb, alpha);\r\n      },\r\n      greyscale: function (color) {\r\n          return colorFunctions.desaturate(color, new Dimension(100));\r\n      },\r\n      contrast: function (color, dark, light, threshold) {\r\n          // filter: contrast(3.2);\r\n          // should be kept as is, so check for color\r\n          if (!color.rgb) {\r\n              return null;\r\n          }\r\n          if (typeof light === 'undefined') {\r\n              light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n          }\r\n          if (typeof dark === 'undefined') {\r\n              dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n          }\r\n          // Figure out which is actually light and dark:\r\n          if (dark.luma() > light.luma()) {\r\n              var t = light;\r\n              light = dark;\r\n              dark = t;\r\n          }\r\n          if (typeof threshold === 'undefined') {\r\n              threshold = 0.43;\r\n          }\r\n          else {\r\n              threshold = number(threshold);\r\n          }\r\n          if (color.luma() < threshold) {\r\n              return light;\r\n          }\r\n          else {\r\n              return dark;\r\n          }\r\n      },\r\n      // Changes made in 2.7.0 - Reverted in 3.0.0\r\n      // contrast: function (color, color1, color2, threshold) {\r\n      //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n      //     // according to the standard WCAG contrast ratio calculation.\r\n      //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n      //     // The threshold param is no longer used, in line with SASS.\r\n      //     // filter: contrast(3.2);\r\n      //     // should be kept as is, so check for color\r\n      //     if (!color.rgb) {\r\n      //         return null;\r\n      //     }\r\n      //     if (typeof color1 === 'undefined') {\r\n      //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n      //     }\r\n      //     if (typeof color2 === 'undefined') {\r\n      //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n      //     }\r\n      //     var contrast1, contrast2;\r\n      //     var luma = color.luma();\r\n      //     var luma1 = color1.luma();\r\n      //     var luma2 = color2.luma();\r\n      //     // Calculate contrast ratios for each color\r\n      //     if (luma > luma1) {\r\n      //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n      //     } else {\r\n      //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n      //     }\r\n      //     if (luma > luma2) {\r\n      //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n      //     } else {\r\n      //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n      //     }\r\n      //     if (contrast1 > contrast2) {\r\n      //         return color1;\r\n      //     } else {\r\n      //         return color2;\r\n      //     }\r\n      // },\r\n      argb: function (color) {\r\n          return new Anonymous(color.toARGB());\r\n      },\r\n      color: function (c) {\r\n          if ((c instanceof Quoted) &&\r\n              (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n              var val = c.value.slice(1);\r\n              return new Color(val, undefined, \"#\" + val);\r\n          }\r\n          if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n              c.value = undefined;\r\n              return c;\r\n          }\r\n          throw {\r\n              type: 'Argument',\r\n              message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n          };\r\n      },\r\n      tint: function (color, amount) {\r\n          return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n      },\r\n      shade: function (color, amount) {\r\n          return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n      }\r\n  };\r\n  var color = colorFunctions;\n\n  // Color Blending\r\n  // ref: http://www.w3.org/TR/compositing-1\r\n  function colorBlend(mode, color1, color2) {\r\n      var ab = color1.alpha; // result\r\n      var // backdrop\r\n      cb;\r\n      var as = color2.alpha;\r\n      var // source\r\n      cs;\r\n      var ar;\r\n      var cr;\r\n      var r = [];\r\n      ar = as + ab * (1 - as);\r\n      for (var i = 0; i < 3; i++) {\r\n          cb = color1.rgb[i] / 255;\r\n          cs = color2.rgb[i] / 255;\r\n          cr = mode(cb, cs);\r\n          if (ar) {\r\n              cr = (as * cs + ab * (cb -\r\n                  as * (cb + cs - cr))) / ar;\r\n          }\r\n          r[i] = cr * 255;\r\n      }\r\n      return new Color(r, ar);\r\n  }\r\n  var colorBlendModeFunctions = {\r\n      multiply: function (cb, cs) {\r\n          return cb * cs;\r\n      },\r\n      screen: function (cb, cs) {\r\n          return cb + cs - cb * cs;\r\n      },\r\n      overlay: function (cb, cs) {\r\n          cb *= 2;\r\n          return (cb <= 1) ?\r\n              colorBlendModeFunctions.multiply(cb, cs) :\r\n              colorBlendModeFunctions.screen(cb - 1, cs);\r\n      },\r\n      softlight: function (cb, cs) {\r\n          var d = 1;\r\n          var e = cb;\r\n          if (cs > 0.5) {\r\n              e = 1;\r\n              d = (cb > 0.25) ? Math.sqrt(cb)\r\n                  : ((16 * cb - 12) * cb + 4) * cb;\r\n          }\r\n          return cb - (1 - 2 * cs) * e * (d - cb);\r\n      },\r\n      hardlight: function (cb, cs) {\r\n          return colorBlendModeFunctions.overlay(cs, cb);\r\n      },\r\n      difference: function (cb, cs) {\r\n          return Math.abs(cb - cs);\r\n      },\r\n      exclusion: function (cb, cs) {\r\n          return cb + cs - 2 * cb * cs;\r\n      },\r\n      // non-w3c functions:\r\n      average: function (cb, cs) {\r\n          return (cb + cs) / 2;\r\n      },\r\n      negation: function (cb, cs) {\r\n          return 1 - Math.abs(cb + cs - 1);\r\n      }\r\n  };\r\n  for (var f in colorBlendModeFunctions) {\r\n      if (colorBlendModeFunctions.hasOwnProperty(f)) {\r\n          colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\r\n      }\r\n  }\n\n  var dataUri = (function (environment) {\r\n      var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n      return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n              if (!filePathNode) {\r\n                  filePathNode = mimetypeNode;\r\n                  mimetypeNode = null;\r\n              }\r\n              var mimetype = mimetypeNode && mimetypeNode.value;\r\n              var filePath = filePathNode.value;\r\n              var currentFileInfo = this.currentFileInfo;\r\n              var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                  currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n              var fragmentStart = filePath.indexOf('#');\r\n              var fragment = '';\r\n              if (fragmentStart !== -1) {\r\n                  fragment = filePath.slice(fragmentStart);\r\n                  filePath = filePath.slice(0, fragmentStart);\r\n              }\r\n              var context = clone(this.context);\r\n              context.rawBuffer = true;\r\n              var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n              if (!fileManager) {\r\n                  return fallback(this, filePathNode);\r\n              }\r\n              var useBase64 = false;\r\n              // detect the mimetype if not given\r\n              if (!mimetypeNode) {\r\n                  mimetype = environment.mimeLookup(filePath);\r\n                  if (mimetype === 'image/svg+xml') {\r\n                      useBase64 = false;\r\n                  }\r\n                  else {\r\n                      // use base 64 unless it's an ASCII or UTF-8 format\r\n                      var charset = environment.charsetLookup(mimetype);\r\n                      useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                  }\r\n                  if (useBase64) {\r\n                      mimetype += ';base64';\r\n                  }\r\n              }\r\n              else {\r\n                  useBase64 = /;base64$/.test(mimetype);\r\n              }\r\n              var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n              if (!fileSync.contents) {\r\n                  logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                  return fallback(this, filePathNode || mimetypeNode);\r\n              }\r\n              var buf = fileSync.contents;\r\n              if (useBase64 && !environment.encodeBase64) {\r\n                  return fallback(this, filePathNode);\r\n              }\r\n              buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n              var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n              return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n          } };\r\n  });\n\n  var getItemsFromNode = function (node) {\r\n      // handle non-array values as an array of length 1\r\n      // return 'undefined' if index is invalid\r\n      var items = Array.isArray(node.value) ?\r\n          node.value : Array(node);\r\n      return items;\r\n  };\r\n  var list = {\r\n      _SELF: function (n) {\r\n          return n;\r\n      },\r\n      extract: function (values, index) {\r\n          // (1-based index)\r\n          index = index.value - 1;\r\n          return getItemsFromNode(values)[index];\r\n      },\r\n      length: function (values) {\r\n          return new Dimension(getItemsFromNode(values).length);\r\n      },\r\n      /**\r\n       * Creates a Less list of incremental values.\r\n       * Modeled after Lodash's range function, also exists natively in PHP\r\n       *\r\n       * @param {Dimension} [start=1]\r\n       * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n       * @param {Dimension} [step=1]\r\n       */\r\n      range: function (start, end, step) {\r\n          var from;\r\n          var to;\r\n          var stepValue = 1;\r\n          var list = [];\r\n          if (end) {\r\n              to = end;\r\n              from = start.value;\r\n              if (step) {\r\n                  stepValue = step.value;\r\n              }\r\n          }\r\n          else {\r\n              from = 1;\r\n              to = start;\r\n          }\r\n          for (var i = from; i <= to.value; i += stepValue) {\r\n              list.push(new Dimension(i, to.unit));\r\n          }\r\n          return new Expression(list);\r\n      },\r\n      each: function (list, rs) {\r\n          var _this = this;\r\n          var rules = [];\r\n          var newRules;\r\n          var iterator;\r\n          var tryEval = function (val) {\r\n              if (val instanceof Node) {\r\n                  return val.eval(_this.context);\r\n              }\r\n              return val;\r\n          };\r\n          if (list.value && !(list instanceof Quoted)) {\r\n              if (Array.isArray(list.value)) {\r\n                  iterator = list.value.map(tryEval);\r\n              }\r\n              else {\r\n                  iterator = [tryEval(list.value)];\r\n              }\r\n          }\r\n          else if (list.ruleset) {\r\n              iterator = tryEval(list.ruleset).rules;\r\n          }\r\n          else if (list.rules) {\r\n              iterator = list.rules.map(tryEval);\r\n          }\r\n          else if (Array.isArray(list)) {\r\n              iterator = list.map(tryEval);\r\n          }\r\n          else {\r\n              iterator = [tryEval(list)];\r\n          }\r\n          var valueName = '@value';\r\n          var keyName = '@key';\r\n          var indexName = '@index';\r\n          if (rs.params) {\r\n              valueName = rs.params[0] && rs.params[0].name;\r\n              keyName = rs.params[1] && rs.params[1].name;\r\n              indexName = rs.params[2] && rs.params[2].name;\r\n              rs = rs.rules;\r\n          }\r\n          else {\r\n              rs = rs.ruleset;\r\n          }\r\n          for (var i = 0; i < iterator.length; i++) {\r\n              var key = void 0;\r\n              var value = void 0;\r\n              var item = iterator[i];\r\n              if (item instanceof Declaration) {\r\n                  key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                  value = item.value;\r\n              }\r\n              else {\r\n                  key = new Dimension(i + 1);\r\n                  value = item;\r\n              }\r\n              if (item instanceof Comment) {\r\n                  continue;\r\n              }\r\n              newRules = rs.rules.slice(0);\r\n              if (valueName) {\r\n                  newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n              }\r\n              if (indexName) {\r\n                  newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n              }\r\n              if (keyName) {\r\n                  newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n              }\r\n              rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n          }\r\n          return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n      }\r\n  };\n\n  var MathHelper = function (fn, unit, n) {\r\n      if (!(n instanceof Dimension)) {\r\n          throw { type: 'Argument', message: 'argument must be a number' };\r\n      }\r\n      if (unit == null) {\r\n          unit = n.unit;\r\n      }\r\n      else {\r\n          n = n.unify();\r\n      }\r\n      return new Dimension(fn(parseFloat(n.value)), unit);\r\n  };\n\n  var mathFunctions = {\r\n      // name,  unit\r\n      ceil: null,\r\n      floor: null,\r\n      sqrt: null,\r\n      abs: null,\r\n      tan: '',\r\n      sin: '',\r\n      cos: '',\r\n      atan: 'rad',\r\n      asin: 'rad',\r\n      acos: 'rad'\r\n  };\r\n  for (var f$1 in mathFunctions) {\r\n      if (mathFunctions.hasOwnProperty(f$1)) {\r\n          mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\r\n      }\r\n  }\r\n  mathFunctions.round = function (n, f) {\r\n      var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n      return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n  };\n\n  var minMax = function (isMin, args) {\r\n      args = Array.prototype.slice.call(args);\r\n      switch (args.length) {\r\n          case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n      }\r\n      var i; // key is the unit.toString() for unified Dimension values,\r\n      var j;\r\n      var current;\r\n      var currentUnified;\r\n      var referenceUnified;\r\n      var unit;\r\n      var unitStatic;\r\n      var unitClone;\r\n      var // elems only contains original argument values.\r\n      order = [];\r\n      var values = {};\r\n      // value is the index into the order array.\r\n      for (i = 0; i < args.length; i++) {\r\n          current = args[i];\r\n          if (!(current instanceof Dimension)) {\r\n              if (Array.isArray(args[i].value)) {\r\n                  Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n              }\r\n              continue;\r\n          }\r\n          currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n          unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n          unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n          unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n          j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n          if (j === undefined) {\r\n              if (unitStatic !== undefined && unit !== unitStatic) {\r\n                  throw { type: 'Argument', message: 'incompatible types' };\r\n              }\r\n              values[unit] = order.length;\r\n              order.push(current);\r\n              continue;\r\n          }\r\n          referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n          if (isMin && currentUnified.value < referenceUnified.value ||\r\n              !isMin && currentUnified.value > referenceUnified.value) {\r\n              order[j] = current;\r\n          }\r\n      }\r\n      if (order.length == 1) {\r\n          return order[0];\r\n      }\r\n      args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n      return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n  };\r\n  var number$1 = {\r\n      min: function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return minMax(true, args);\r\n      },\r\n      max: function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return minMax(false, args);\r\n      },\r\n      convert: function (val, unit) {\r\n          return val.convertTo(unit.value);\r\n      },\r\n      pi: function () {\r\n          return new Dimension(Math.PI);\r\n      },\r\n      mod: function (a, b) {\r\n          return new Dimension(a.value % b.value, a.unit);\r\n      },\r\n      pow: function (x, y) {\r\n          if (typeof x === 'number' && typeof y === 'number') {\r\n              x = new Dimension(x);\r\n              y = new Dimension(y);\r\n          }\r\n          else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n              throw { type: 'Argument', message: 'arguments must be numbers' };\r\n          }\r\n          return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n      },\r\n      percentage: function (n) {\r\n          var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n          return result;\r\n      }\r\n  };\n\n  var string = {\r\n      e: function (str) {\r\n          return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n      },\r\n      escape: function (str) {\r\n          return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n              .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n      },\r\n      replace: function (string, pattern, replacement, flags) {\r\n          var result = string.value;\r\n          replacement = (replacement.type === 'Quoted') ?\r\n              replacement.value : replacement.toCSS();\r\n          result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n          return new Quoted(string.quote || '', result, string.escaped);\r\n      },\r\n      '%': function (string /* arg, arg, ... */) {\r\n          var args = Array.prototype.slice.call(arguments, 1);\r\n          var result = string.value;\r\n          var _loop_1 = function (i) {\r\n              /* jshint loopfunc:true */\r\n              result = result.replace(/%[sda]/i, function (token) {\r\n                  var value = ((args[i].type === 'Quoted') &&\r\n                      token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                  return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n              });\r\n          };\r\n          for (var i = 0; i < args.length; i++) {\r\n              _loop_1(i);\r\n          }\r\n          result = result.replace(/%%/g, '%');\r\n          return new Quoted(string.quote || '', result, string.escaped);\r\n      }\r\n  };\n\n  var svg = (function (environment) {\r\n      return { 'svg-gradient': function (direction) {\r\n              var stops;\r\n              var gradientDirectionSvg;\r\n              var gradientType = 'linear';\r\n              var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n              var renderEnv = { compress: false };\r\n              var returner;\r\n              var directionValue = direction.toCSS(renderEnv);\r\n              var i;\r\n              var color;\r\n              var position;\r\n              var positionValue;\r\n              var alpha;\r\n              function throwArgumentDescriptor() {\r\n                  throw { type: 'Argument',\r\n                      message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                          ' end_color [end_position] or direction, color list' };\r\n              }\r\n              if (arguments.length == 2) {\r\n                  if (arguments[1].value.length < 2) {\r\n                      throwArgumentDescriptor();\r\n                  }\r\n                  stops = arguments[1].value;\r\n              }\r\n              else if (arguments.length < 3) {\r\n                  throwArgumentDescriptor();\r\n              }\r\n              else {\r\n                  stops = Array.prototype.slice.call(arguments, 1);\r\n              }\r\n              switch (directionValue) {\r\n                  case 'to bottom':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                      break;\r\n                  case 'to right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                      break;\r\n                  case 'to bottom right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                      break;\r\n                  case 'to top right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                      break;\r\n                  case 'ellipse':\r\n                  case 'ellipse at center':\r\n                      gradientType = 'radial';\r\n                      gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                      rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                      break;\r\n                  default:\r\n                      throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                              ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n              }\r\n              returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n              for (i = 0; i < stops.length; i += 1) {\r\n                  if (stops[i] instanceof Expression) {\r\n                      color = stops[i].value[0];\r\n                      position = stops[i].value[1];\r\n                  }\r\n                  else {\r\n                      color = stops[i];\r\n                      position = undefined;\r\n                  }\r\n                  if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                      throwArgumentDescriptor();\r\n                  }\r\n                  positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                  alpha = color.alpha;\r\n                  returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n              }\r\n              returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n              returner = encodeURIComponent(returner);\r\n              returner = \"data:image/svg+xml,\" + returner;\r\n              return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n          } };\r\n  });\n\n  var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n  var isunit = function (n, unit) {\r\n      if (unit === undefined) {\r\n          throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n      }\r\n      unit = typeof unit.value === 'string' ? unit.value : unit;\r\n      if (typeof unit !== 'string') {\r\n          throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n      }\r\n      return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n  };\r\n  var types = {\r\n      isruleset: function (n) {\r\n          return isa(n, DetachedRuleset);\r\n      },\r\n      iscolor: function (n) {\r\n          return isa(n, Color);\r\n      },\r\n      isnumber: function (n) {\r\n          return isa(n, Dimension);\r\n      },\r\n      isstring: function (n) {\r\n          return isa(n, Quoted);\r\n      },\r\n      iskeyword: function (n) {\r\n          return isa(n, Keyword);\r\n      },\r\n      isurl: function (n) {\r\n          return isa(n, URL);\r\n      },\r\n      ispixel: function (n) {\r\n          return isunit(n, 'px');\r\n      },\r\n      ispercentage: function (n) {\r\n          return isunit(n, '%');\r\n      },\r\n      isem: function (n) {\r\n          return isunit(n, 'em');\r\n      },\r\n      isunit: isunit,\r\n      unit: function (val, unit) {\r\n          if (!(val instanceof Dimension)) {\r\n              throw { type: 'Argument', message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n          }\r\n          if (unit) {\r\n              if (unit instanceof Keyword) {\r\n                  unit = unit.value;\r\n              }\r\n              else {\r\n                  unit = unit.toCSS();\r\n              }\r\n          }\r\n          else {\r\n              unit = '';\r\n          }\r\n          return new Dimension(val.value, unit);\r\n      },\r\n      'get-unit': function (n) {\r\n          return new Anonymous(n.unit);\r\n      }\r\n  };\n\n  var Functions = (function (environment) {\r\n      var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n      // register functions\r\n      functionRegistry.addMultiple(boolean$1);\r\n      functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n      functionRegistry.addMultiple(color);\r\n      functionRegistry.addMultiple(colorBlend);\r\n      functionRegistry.addMultiple(dataUri(environment));\r\n      functionRegistry.addMultiple(list);\r\n      functionRegistry.addMultiple(mathFunctions);\r\n      functionRegistry.addMultiple(number$1);\r\n      functionRegistry.addMultiple(string);\r\n      functionRegistry.addMultiple(svg());\r\n      functionRegistry.addMultiple(types);\r\n      return functions;\r\n  });\n\n  var sourceMapOutput = (function (environment) {\r\n      var SourceMapOutput = /** @class */ (function () {\r\n          function SourceMapOutput(options) {\r\n              this._css = [];\r\n              this._rootNode = options.rootNode;\r\n              this._contentsMap = options.contentsMap;\r\n              this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n              if (options.sourceMapFilename) {\r\n                  this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n              }\r\n              this._outputFilename = options.outputFilename;\r\n              this.sourceMapURL = options.sourceMapURL;\r\n              if (options.sourceMapBasepath) {\r\n                  this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n              }\r\n              if (options.sourceMapRootpath) {\r\n                  this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                  if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                      this._sourceMapRootpath += '/';\r\n                  }\r\n              }\r\n              else {\r\n                  this._sourceMapRootpath = '';\r\n              }\r\n              this._outputSourceFiles = options.outputSourceFiles;\r\n              this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n              this._lineNumber = 0;\r\n              this._column = 0;\r\n          }\r\n          SourceMapOutput.prototype.removeBasepath = function (path) {\r\n              if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                  path = path.substring(this._sourceMapBasepath.length);\r\n                  if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                      path = path.substring(1);\r\n                  }\r\n              }\r\n              return path;\r\n          };\r\n          SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n              filename = filename.replace(/\\\\/g, '/');\r\n              filename = this.removeBasepath(filename);\r\n              return (this._sourceMapRootpath || '') + filename;\r\n          };\r\n          SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n              // ignore adding empty strings\r\n              if (!chunk) {\r\n                  return;\r\n              }\r\n              var lines;\r\n              var sourceLines;\r\n              var columns;\r\n              var sourceColumns;\r\n              var i;\r\n              if (fileInfo && fileInfo.filename) {\r\n                  var inputSource = this._contentsMap[fileInfo.filename];\r\n                  // remove vars/banner added to the top of the file\r\n                  if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                      // adjust the index\r\n                      index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                      if (index < 0) {\r\n                          index = 0;\r\n                      }\r\n                      // adjust the source\r\n                      inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                  }\r\n                  /**\r\n                   * ignore empty content, or failsafe\r\n                   * if contents map is incorrect\r\n                   */\r\n                  if (inputSource === undefined) {\r\n                      this._css.push(chunk);\r\n                      return;\r\n                  }\r\n                  inputSource = inputSource.substring(0, index);\r\n                  sourceLines = inputSource.split('\\n');\r\n                  sourceColumns = sourceLines[sourceLines.length - 1];\r\n              }\r\n              lines = chunk.split('\\n');\r\n              columns = lines[lines.length - 1];\r\n              if (fileInfo && fileInfo.filename) {\r\n                  if (!mapLines) {\r\n                      this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                          original: { line: sourceLines.length, column: sourceColumns.length },\r\n                          source: this.normalizeFilename(fileInfo.filename) });\r\n                  }\r\n                  else {\r\n                      for (i = 0; i < lines.length; i++) {\r\n                          this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                              original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                              source: this.normalizeFilename(fileInfo.filename) });\r\n                      }\r\n                  }\r\n              }\r\n              if (lines.length === 1) {\r\n                  this._column += columns.length;\r\n              }\r\n              else {\r\n                  this._lineNumber += lines.length - 1;\r\n                  this._column = columns.length;\r\n              }\r\n              this._css.push(chunk);\r\n          };\r\n          SourceMapOutput.prototype.isEmpty = function () {\r\n              return this._css.length === 0;\r\n          };\r\n          SourceMapOutput.prototype.toCSS = function (context) {\r\n              this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n              if (this._outputSourceFiles) {\r\n                  for (var filename in this._contentsMap) {\r\n                      if (this._contentsMap.hasOwnProperty(filename)) {\r\n                          var source = this._contentsMap[filename];\r\n                          if (this._contentsIgnoredCharsMap[filename]) {\r\n                              source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                          }\r\n                          this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                      }\r\n                  }\r\n              }\r\n              this._rootNode.genCSS(context, this);\r\n              if (this._css.length > 0) {\r\n                  var sourceMapURL = void 0;\r\n                  var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                  if (this.sourceMapURL) {\r\n                      sourceMapURL = this.sourceMapURL;\r\n                  }\r\n                  else if (this._sourceMapFilename) {\r\n                      sourceMapURL = this._sourceMapFilename;\r\n                  }\r\n                  this.sourceMapURL = sourceMapURL;\r\n                  this.sourceMap = sourceMapContent;\r\n              }\r\n              return this._css.join('');\r\n          };\r\n          return SourceMapOutput;\r\n      }());\r\n      return SourceMapOutput;\r\n  });\n\n  var sourceMapBuilder = (function (SourceMapOutput, environment) {\r\n      var SourceMapBuilder = /** @class */ (function () {\r\n          function SourceMapBuilder(options) {\r\n              this.options = options;\r\n          }\r\n          SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n              var sourceMapOutput = new SourceMapOutput({\r\n                  contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                  rootNode: rootNode,\r\n                  contentsMap: imports.contents,\r\n                  sourceMapFilename: this.options.sourceMapFilename,\r\n                  sourceMapURL: this.options.sourceMapURL,\r\n                  outputFilename: this.options.sourceMapOutputFilename,\r\n                  sourceMapBasepath: this.options.sourceMapBasepath,\r\n                  sourceMapRootpath: this.options.sourceMapRootpath,\r\n                  outputSourceFiles: this.options.outputSourceFiles,\r\n                  sourceMapGenerator: this.options.sourceMapGenerator,\r\n                  sourceMapFileInline: this.options.sourceMapFileInline,\r\n                  disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n              });\r\n              var css = sourceMapOutput.toCSS(options);\r\n              this.sourceMap = sourceMapOutput.sourceMap;\r\n              this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n              if (this.options.sourceMapInputFilename) {\r\n                  this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n              }\r\n              if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                  this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n              }\r\n              return css + this.getCSSAppendage();\r\n          };\r\n          SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n              var sourceMapURL = this.sourceMapURL;\r\n              if (this.options.sourceMapFileInline) {\r\n                  if (this.sourceMap === undefined) {\r\n                      return '';\r\n                  }\r\n                  sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n              }\r\n              if (this.options.disableSourcemapAnnotation) {\r\n                  return '';\r\n              }\r\n              if (sourceMapURL) {\r\n                  return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n              }\r\n              return '';\r\n          };\r\n          SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n              return this.sourceMap;\r\n          };\r\n          SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n              this.sourceMap = sourceMap;\r\n          };\r\n          SourceMapBuilder.prototype.isInline = function () {\r\n              return this.options.sourceMapFileInline;\r\n          };\r\n          SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n              return this.sourceMapURL;\r\n          };\r\n          SourceMapBuilder.prototype.getOutputFilename = function () {\r\n              return this.options.sourceMapOutputFilename;\r\n          };\r\n          SourceMapBuilder.prototype.getInputFilename = function () {\r\n              return this.sourceMapInputFilename;\r\n          };\r\n          return SourceMapBuilder;\r\n      }());\r\n      return SourceMapBuilder;\r\n  });\n\n  var transformTree = (function (root, options) {\r\n      if (options === void 0) { options = {}; }\r\n      var evaldRoot;\r\n      var variables = options.variables;\r\n      var evalEnv = new contexts.Eval(options);\r\n      //\r\n      // Allows setting variables with a hash, so:\r\n      //\r\n      //   `{ color: new tree.Color('#f01') }` will become:\r\n      //\r\n      //   new tree.Declaration('@color',\r\n      //     new tree.Value([\r\n      //       new tree.Expression([\r\n      //         new tree.Color('#f01')\r\n      //       ])\r\n      //     ])\r\n      //   )\r\n      //\r\n      if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n          variables = Object.keys(variables).map(function (k) {\r\n              var value = variables[k];\r\n              if (!(value instanceof tree.Value)) {\r\n                  if (!(value instanceof tree.Expression)) {\r\n                      value = new tree.Expression([value]);\r\n                  }\r\n                  value = new tree.Value([value]);\r\n              }\r\n              return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n          });\r\n          evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n      }\r\n      var visitors$1 = [\r\n          new visitors.JoinSelectorVisitor(),\r\n          new visitors.MarkVisibleSelectorsVisitor(true),\r\n          new visitors.ExtendVisitor(),\r\n          new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n      ];\r\n      var preEvalVisitors = [];\r\n      var v;\r\n      var visitorIterator;\r\n      /**\r\n       * first() / get() allows visitors to be added while visiting\r\n       *\r\n       * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n       */\r\n      if (options.pluginManager) {\r\n          visitorIterator = options.pluginManager.visitor();\r\n          for (var i = 0; i < 2; i++) {\r\n              visitorIterator.first();\r\n              while ((v = visitorIterator.get())) {\r\n                  if (v.isPreEvalVisitor) {\r\n                      if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                          preEvalVisitors.push(v);\r\n                          v.run(root);\r\n                      }\r\n                  }\r\n                  else {\r\n                      if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                          if (v.isPreVisitor) {\r\n                              visitors$1.unshift(v);\r\n                          }\r\n                          else {\r\n                              visitors$1.push(v);\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      evaldRoot = root.eval(evalEnv);\r\n      for (var i = 0; i < visitors$1.length; i++) {\r\n          visitors$1[i].run(evaldRoot);\r\n      }\r\n      // Run any remaining visitors added after eval pass\r\n      if (options.pluginManager) {\r\n          visitorIterator.first();\r\n          while ((v = visitorIterator.get())) {\r\n              if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                  v.run(evaldRoot);\r\n              }\r\n          }\r\n      }\r\n      return evaldRoot;\r\n  });\n\n  var parseTree = (function (SourceMapBuilder) {\r\n      var ParseTree = /** @class */ (function () {\r\n          function ParseTree(root, imports) {\r\n              this.root = root;\r\n              this.imports = imports;\r\n          }\r\n          ParseTree.prototype.toCSS = function (options) {\r\n              var evaldRoot;\r\n              var result = {};\r\n              var sourceMapBuilder;\r\n              try {\r\n                  evaldRoot = transformTree(this.root, options);\r\n              }\r\n              catch (e) {\r\n                  throw new LessError(e, this.imports);\r\n              }\r\n              try {\r\n                  var compress = Boolean(options.compress);\r\n                  if (compress) {\r\n                      logger.warn('The compress option has been deprecated. ' +\r\n                          'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                  }\r\n                  var toCSSOptions = {\r\n                      compress: compress,\r\n                      dumpLineNumbers: options.dumpLineNumbers,\r\n                      strictUnits: Boolean(options.strictUnits),\r\n                      numPrecision: 8\r\n                  };\r\n                  if (options.sourceMap) {\r\n                      sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                      result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                  }\r\n                  else {\r\n                      result.css = evaldRoot.toCSS(toCSSOptions);\r\n                  }\r\n              }\r\n              catch (e) {\r\n                  throw new LessError(e, this.imports);\r\n              }\r\n              if (options.pluginManager) {\r\n                  var postProcessors = options.pluginManager.getPostProcessors();\r\n                  for (var i = 0; i < postProcessors.length; i++) {\r\n                      result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                  }\r\n              }\r\n              if (options.sourceMap) {\r\n                  result.map = sourceMapBuilder.getExternalSourceMap();\r\n              }\r\n              result.imports = [];\r\n              for (var file in this.imports.files) {\r\n                  if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                      result.imports.push(file);\r\n                  }\r\n              }\r\n              return result;\r\n          };\r\n          return ParseTree;\r\n      }());\r\n      return ParseTree;\r\n  });\n\n  function importManager (environment) {\r\n      // FileInfo = {\r\n      //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n      //  'filename' - full resolved filename of current file\r\n      //  'rootpath' - path to append to normal URLs for this node\r\n      //  'currentDirectory' - path to the current file, absolute\r\n      //  'rootFilename' - filename of the base file\r\n      //  'entryPath' - absolute path to the entry file\r\n      //  'reference' - whether the file should not be output and only output parts that are referenced\r\n      var ImportManager = /** @class */ (function () {\r\n          function ImportManager(less, context, rootFileInfo) {\r\n              this.less = less;\r\n              this.rootFilename = rootFileInfo.filename;\r\n              this.paths = context.paths || []; // Search paths, when importing\r\n              this.contents = {}; // map - filename to contents of all the files\r\n              this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n              this.mime = context.mime;\r\n              this.error = null;\r\n              this.context = context;\r\n              // Deprecated? Unused outside of here, could be useful.\r\n              this.queue = []; // Files which haven't been imported yet\r\n              this.files = {}; // Holds the imported parse trees.\r\n          }\r\n          /**\r\n           * Add an import to be imported\r\n           * @param path - the raw path\r\n           * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n           * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n           * @param importOptions - import options\r\n           * @param callback - callback for when it is imported\r\n           */\r\n          ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n              var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n              this.queue.push(path);\r\n              var fileParsedFunc = function (e, root, fullPath) {\r\n                  importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                  var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                  if (importOptions.optional && e) {\r\n                      callback(null, { rules: [] }, false, null);\r\n                      logger.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                  }\r\n                  else {\r\n                      // Inline imports aren't cached here.\r\n                      // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                      // same name as they used to do before this comment and the condition below have been added.\r\n                      if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                          importManager.files[fullPath] = { root: root, options: importOptions };\r\n                      }\r\n                      if (e && !importManager.error) {\r\n                          importManager.error = e;\r\n                      }\r\n                      callback(e, root, importedEqualsRoot, fullPath);\r\n                  }\r\n              };\r\n              var newFileInfo = {\r\n                  rewriteUrls: this.context.rewriteUrls,\r\n                  entryPath: currentFileInfo.entryPath,\r\n                  rootpath: currentFileInfo.rootpath,\r\n                  rootFilename: currentFileInfo.rootFilename\r\n              };\r\n              var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n              if (!fileManager) {\r\n                  fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                  return;\r\n              }\r\n              var loadFileCallback = function (loadedFile) {\r\n                  var plugin;\r\n                  var resolvedFilename = loadedFile.filename;\r\n                  var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                  // Pass on an updated rootpath if path of imported file is relative and file\r\n                  // is in a (sub|sup) directory\r\n                  //\r\n                  // Examples:\r\n                  // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                  //   then rootpath should become 'less/module/nav/'\r\n                  // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                  //   then rootpath should become 'less/../'\r\n                  newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                  if (newFileInfo.rewriteUrls) {\r\n                      newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                      if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                          newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                      }\r\n                  }\r\n                  newFileInfo.filename = resolvedFilename;\r\n                  var newEnv = new contexts.Parse(importManager.context);\r\n                  newEnv.processImports = false;\r\n                  importManager.contents[resolvedFilename] = contents;\r\n                  if (currentFileInfo.reference || importOptions.reference) {\r\n                      newFileInfo.reference = true;\r\n                  }\r\n                  if (importOptions.isPlugin) {\r\n                      plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                      if (plugin instanceof LessError) {\r\n                          fileParsedFunc(plugin, null, resolvedFilename);\r\n                      }\r\n                      else {\r\n                          fileParsedFunc(null, plugin, resolvedFilename);\r\n                      }\r\n                  }\r\n                  else if (importOptions.inline) {\r\n                      fileParsedFunc(null, contents, resolvedFilename);\r\n                  }\r\n                  else {\r\n                      // import (multiple) parse trees apparently get altered and can't be cached.\r\n                      // TODO: investigate why this is\r\n                      if (importManager.files[resolvedFilename]\r\n                          && !importManager.files[resolvedFilename].options.multiple\r\n                          && !importOptions.multiple) {\r\n                          fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                      }\r\n                      else {\r\n                          new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                              fileParsedFunc(e, root, resolvedFilename);\r\n                          });\r\n                      }\r\n                  }\r\n              };\r\n              var loadedFile;\r\n              var promise;\r\n              var context = clone(this.context);\r\n              if (tryAppendExtension) {\r\n                  context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n              }\r\n              if (importOptions.isPlugin) {\r\n                  context.mime = 'application/javascript';\r\n                  if (context.syncImport) {\r\n                      loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                  }\r\n                  else {\r\n                      promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                  }\r\n              }\r\n              else {\r\n                  if (context.syncImport) {\r\n                      loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                  }\r\n                  else {\r\n                      promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                          if (err) {\r\n                              fileParsedFunc(err);\r\n                          }\r\n                          else {\r\n                              loadFileCallback(loadedFile);\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n              if (loadedFile) {\r\n                  if (!loadedFile.filename) {\r\n                      fileParsedFunc(loadedFile);\r\n                  }\r\n                  else {\r\n                      loadFileCallback(loadedFile);\r\n                  }\r\n              }\r\n              else if (promise) {\r\n                  promise.then(loadFileCallback, fileParsedFunc);\r\n              }\r\n          };\r\n          return ImportManager;\r\n      }());\r\n      return ImportManager;\r\n  }\n\n  var Render = (function (environment, ParseTree, ImportManager) {\r\n      var render = function (input, options, callback) {\r\n          if (typeof options === 'function') {\r\n              callback = options;\r\n              options = copyOptions(this.options, {});\r\n          }\r\n          else {\r\n              options = copyOptions(this.options, options || {});\r\n          }\r\n          if (!callback) {\r\n              var self_1 = this;\r\n              return new Promise(function (resolve, reject) {\r\n                  render.call(self_1, input, options, function (err, output) {\r\n                      if (err) {\r\n                          reject(err);\r\n                      }\r\n                      else {\r\n                          resolve(output);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n          else {\r\n              this.parse(input, options, function (err, root, imports, options) {\r\n                  if (err) {\r\n                      return callback(err);\r\n                  }\r\n                  var result;\r\n                  try {\r\n                      var parseTree = new ParseTree(root, imports);\r\n                      result = parseTree.toCSS(options);\r\n                  }\r\n                  catch (err) {\r\n                      return callback(err);\r\n                  }\r\n                  callback(null, result);\r\n              });\r\n          }\r\n      };\r\n      return render;\r\n  });\n\n  /**\r\n   * Plugin Manager\r\n   */\r\n  var PluginManager = /** @class */ (function () {\r\n      function PluginManager(less) {\r\n          this.less = less;\r\n          this.visitors = [];\r\n          this.preProcessors = [];\r\n          this.postProcessors = [];\r\n          this.installedPlugins = [];\r\n          this.fileManagers = [];\r\n          this.iterator = -1;\r\n          this.pluginCache = {};\r\n          this.Loader = new less.PluginLoader(less);\r\n      }\r\n      /**\r\n       * Adds all the plugins in the array\r\n       * @param {Array} plugins\r\n       */\r\n      PluginManager.prototype.addPlugins = function (plugins) {\r\n          if (plugins) {\r\n              for (var i = 0; i < plugins.length; i++) {\r\n                  this.addPlugin(plugins[i]);\r\n              }\r\n          }\r\n      };\r\n      /**\r\n       *\r\n       * @param plugin\r\n       * @param {String} filename\r\n       */\r\n      PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n          this.installedPlugins.push(plugin);\r\n          if (filename) {\r\n              this.pluginCache[filename] = plugin;\r\n          }\r\n          if (plugin.install) {\r\n              plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n          }\r\n      };\r\n      /**\r\n       *\r\n       * @param filename\r\n       */\r\n      PluginManager.prototype.get = function (filename) {\r\n          return this.pluginCache[filename];\r\n      };\r\n      /**\r\n       * Adds a visitor. The visitor object has options on itself to determine\r\n       * when it should run.\r\n       * @param visitor\r\n       */\r\n      PluginManager.prototype.addVisitor = function (visitor) {\r\n          this.visitors.push(visitor);\r\n      };\r\n      /**\r\n       * Adds a pre processor object\r\n       * @param {object} preProcessor\r\n       * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n       */\r\n      PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n          var indexToInsertAt;\r\n          for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n              if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                  break;\r\n              }\r\n          }\r\n          this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n      };\r\n      /**\r\n       * Adds a post processor object\r\n       * @param {object} postProcessor\r\n       * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n       */\r\n      PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n          var indexToInsertAt;\r\n          for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n              if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                  break;\r\n              }\r\n          }\r\n          this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n      };\r\n      /**\r\n       *\r\n       * @param manager\r\n       */\r\n      PluginManager.prototype.addFileManager = function (manager) {\r\n          this.fileManagers.push(manager);\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getPreProcessors = function () {\r\n          var preProcessors = [];\r\n          for (var i = 0; i < this.preProcessors.length; i++) {\r\n              preProcessors.push(this.preProcessors[i].preProcessor);\r\n          }\r\n          return preProcessors;\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getPostProcessors = function () {\r\n          var postProcessors = [];\r\n          for (var i = 0; i < this.postProcessors.length; i++) {\r\n              postProcessors.push(this.postProcessors[i].postProcessor);\r\n          }\r\n          return postProcessors;\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getVisitors = function () {\r\n          return this.visitors;\r\n      };\r\n      PluginManager.prototype.visitor = function () {\r\n          var self = this;\r\n          return {\r\n              first: function () {\r\n                  self.iterator = -1;\r\n                  return self.visitors[self.iterator];\r\n              },\r\n              get: function () {\r\n                  self.iterator += 1;\r\n                  return self.visitors[self.iterator];\r\n              }\r\n          };\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getFileManagers = function () {\r\n          return this.fileManagers;\r\n      };\r\n      return PluginManager;\r\n  }());\r\n  var pm;\r\n  function PluginManagerFactory(less, newFactory) {\r\n      if (newFactory || !pm) {\r\n          pm = new PluginManager(less);\r\n      }\r\n      return pm;\r\n  }\n\n  var Parse = (function (environment, ParseTree, ImportManager) {\r\n      var parse = function (input, options, callback) {\r\n          if (typeof options === 'function') {\r\n              callback = options;\r\n              options = copyOptions(this.options, {});\r\n          }\r\n          else {\r\n              options = copyOptions(this.options, options || {});\r\n          }\r\n          if (!callback) {\r\n              var self_1 = this;\r\n              return new Promise(function (resolve, reject) {\r\n                  parse.call(self_1, input, options, function (err, output) {\r\n                      if (err) {\r\n                          reject(err);\r\n                      }\r\n                      else {\r\n                          resolve(output);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n          else {\r\n              var context_1;\r\n              var rootFileInfo = void 0;\r\n              var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n              options.pluginManager = pluginManager_1;\r\n              context_1 = new contexts.Parse(options);\r\n              if (options.rootFileInfo) {\r\n                  rootFileInfo = options.rootFileInfo;\r\n              }\r\n              else {\r\n                  var filename = options.filename || 'input';\r\n                  var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                  rootFileInfo = {\r\n                      filename: filename,\r\n                      rewriteUrls: context_1.rewriteUrls,\r\n                      rootpath: context_1.rootpath || '',\r\n                      currentDirectory: entryPath,\r\n                      entryPath: entryPath,\r\n                      rootFilename: filename\r\n                  };\r\n                  // add in a missing trailing slash\r\n                  if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                      rootFileInfo.rootpath += '/';\r\n                  }\r\n              }\r\n              var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n              this.importManager = imports_1;\r\n              // TODO: allow the plugins to be just a list of paths or names\r\n              // Do an async plugin queue like lessc\r\n              if (options.plugins) {\r\n                  options.plugins.forEach(function (plugin) {\r\n                      var evalResult;\r\n                      var contents;\r\n                      if (plugin.fileContent) {\r\n                          contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                          evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                          if (evalResult instanceof LessError) {\r\n                              return callback(evalResult);\r\n                          }\r\n                      }\r\n                      else {\r\n                          pluginManager_1.addPlugin(plugin);\r\n                      }\r\n                  });\r\n              }\r\n              new Parser(context_1, imports_1, rootFileInfo)\r\n                  .parse(input, function (e, root) {\r\n                  if (e) {\r\n                      return callback(e);\r\n                  }\r\n                  callback(null, root, imports_1, options);\r\n              }, options);\r\n          }\r\n      };\r\n      return parse;\r\n  });\n\n  var lessRoot = (function (environment$1, fileManagers) {\r\n      /**\r\n       * @todo\r\n       * This original code could be improved quite a bit.\r\n       * Many classes / modules currently add side-effects / mutations to passed in objects,\r\n       * which makes it hard to refactor and reason about.\r\n       */\r\n      environment$1 = new environment(environment$1, fileManagers);\r\n      var SourceMapOutput = sourceMapOutput(environment$1);\r\n      var SourceMapBuilder = sourceMapBuilder(SourceMapOutput, environment$1);\r\n      var ParseTree = parseTree(SourceMapBuilder);\r\n      var ImportManager = importManager(environment$1);\r\n      var render = Render(environment$1, ParseTree);\r\n      var parse = Parse(environment$1, ParseTree, ImportManager);\r\n      var functions = Functions(environment$1);\r\n      /**\r\n       * @todo\r\n       * This root properties / methods need to be organized.\r\n       * It's not clear what should / must be public and why.\r\n       */\r\n      var initial = {\r\n          version: [3, 13, 1],\r\n          data: data,\r\n          tree: tree,\r\n          Environment: environment,\r\n          AbstractFileManager: AbstractFileManager,\r\n          AbstractPluginLoader: AbstractPluginLoader,\r\n          environment: environment$1,\r\n          visitors: visitors,\r\n          Parser: Parser,\r\n          functions: functions,\r\n          contexts: contexts,\r\n          SourceMapOutput: SourceMapOutput,\r\n          SourceMapBuilder: SourceMapBuilder,\r\n          ParseTree: ParseTree,\r\n          ImportManager: ImportManager,\r\n          render: render,\r\n          parse: parse,\r\n          LessError: LessError,\r\n          transformTree: transformTree,\r\n          utils: utils,\r\n          PluginManager: PluginManagerFactory,\r\n          logger: logger\r\n      };\r\n      // Create a public API\r\n      var ctor = function (t) { return function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return new (t.bind.apply(t, __spreadArrays([void 0], args)))();\r\n      }; };\r\n      var t;\r\n      var api = Object.create(initial);\r\n      for (var n in initial.tree) {\r\n          /* eslint guard-for-in: 0 */\r\n          t = initial.tree[n];\r\n          if (typeof t === 'function') {\r\n              api[n.toLowerCase()] = ctor(t);\r\n          }\r\n          else {\r\n              api[n] = Object.create(null);\r\n              for (var o in t) {\r\n                  /* eslint guard-for-in: 0 */\r\n                  api[n][o.toLowerCase()] = ctor(t[o]);\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Some of the functions assume a `this` context of the API object,\r\n       * which causes it to fail when wrapped for ES6 imports.\r\n       *\r\n       * An assumed `this` should be removed in the future.\r\n       */\r\n      initial.parse = initial.parse.bind(api);\r\n      initial.render = initial.render.bind(api);\r\n      return api;\r\n  });\n\n  /* global window, XMLHttpRequest */\r\n  var options;\r\n  var logger$1;\r\n  var fileCache = {};\r\n  // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n  var FileManager = /** @class */ (function (_super) {\r\n      __extends(FileManager, _super);\r\n      function FileManager() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      FileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n          return true;\r\n      };\r\n      FileManager.prototype.join = function (basePath, laterPath) {\r\n          if (!basePath) {\r\n              return laterPath;\r\n          }\r\n          return this.extractUrlParts(laterPath, basePath).path;\r\n      };\r\n      FileManager.prototype.doXHR = function (url, type, callback, errback) {\r\n          var xhr = new XMLHttpRequest();\r\n          var async = options.isFileProtocol ? options.fileAsync : true;\r\n          if (typeof xhr.overrideMimeType === 'function') {\r\n              xhr.overrideMimeType('text/css');\r\n          }\r\n          logger$1.debug(\"XHR: Getting '\" + url + \"'\");\r\n          xhr.open('GET', url, async);\r\n          xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n          xhr.send(null);\r\n          function handleResponse(xhr, callback, errback) {\r\n              if (xhr.status >= 200 && xhr.status < 300) {\r\n                  callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n              }\r\n              else if (typeof errback === 'function') {\r\n                  errback(xhr.status, url);\r\n              }\r\n          }\r\n          if (options.isFileProtocol && !options.fileAsync) {\r\n              if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                  callback(xhr.responseText);\r\n              }\r\n              else {\r\n                  errback(xhr.status, url);\r\n              }\r\n          }\r\n          else if (async) {\r\n              xhr.onreadystatechange = function () {\r\n                  if (xhr.readyState == 4) {\r\n                      handleResponse(xhr, callback, errback);\r\n                  }\r\n              };\r\n          }\r\n          else {\r\n              handleResponse(xhr, callback, errback);\r\n          }\r\n      };\r\n      FileManager.prototype.supports = function () {\r\n          return true;\r\n      };\r\n      FileManager.prototype.clearFileCache = function () {\r\n          fileCache = {};\r\n      };\r\n      FileManager.prototype.loadFile = function (filename, currentDirectory, options, environment) {\r\n          // TODO: Add prefix support like less-node?\r\n          // What about multiple paths?\r\n          if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n              filename = currentDirectory + filename;\r\n          }\r\n          filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n          options = options || {};\r\n          // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n          // some context variables for imports\r\n          var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n          var href = hrefParts.url;\r\n          var self = this;\r\n          return new Promise(function (resolve, reject) {\r\n              if (options.useFileCache && fileCache[href]) {\r\n                  try {\r\n                      var lessText = fileCache[href];\r\n                      return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                  }\r\n                  catch (e) {\r\n                      return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                  }\r\n              }\r\n              self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                  // per file cache\r\n                  fileCache[href] = data;\r\n                  // Use remote copy (re-parse)\r\n                  resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n              }, function doXHRError(status, url) {\r\n                  reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n              });\r\n          });\r\n      };\r\n      return FileManager;\r\n  }(AbstractFileManager));\r\n  var FM = (function (opts, log) {\r\n      options = opts;\r\n      logger$1 = log;\r\n      return FileManager;\r\n  });\n\n  // TODO: Add tests for browser @plugin\r\n  /**\r\n   * Browser Plugin Loader\r\n   */\r\n  var PluginLoader = /** @class */ (function (_super) {\r\n      __extends(PluginLoader, _super);\r\n      function PluginLoader(less) {\r\n          var _this = _super.call(this) || this;\r\n          _this.less = less;\r\n          return _this;\r\n          // Should we shim this.require for browser? Probably not?\r\n      }\r\n      PluginLoader.prototype.loadPlugin = function (filename, basePath, context, environment, fileManager) {\r\n          return new Promise(function (fulfill, reject) {\r\n              fileManager.loadFile(filename, basePath, context, environment)\r\n                  .then(fulfill).catch(reject);\r\n          });\r\n      };\r\n      return PluginLoader;\r\n  }(AbstractPluginLoader));\n\n  var LogListener = (function (less, options) {\r\n      var logLevel_debug = 4;\r\n      var logLevel_info = 3;\r\n      var logLevel_warn = 2;\r\n      var logLevel_error = 1;\r\n      // The amount of logging in the javascript console.\r\n      // 3 - Debug, information and errors\r\n      // 2 - Information and errors\r\n      // 1 - Errors\r\n      // 0 - None\r\n      // Defaults to 2\r\n      options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n      if (!options.loggers) {\r\n          options.loggers = [{\r\n                  debug: function (msg) {\r\n                      if (options.logLevel >= logLevel_debug) {\r\n                          console.log(msg);\r\n                      }\r\n                  },\r\n                  info: function (msg) {\r\n                      if (options.logLevel >= logLevel_info) {\r\n                          console.log(msg);\r\n                      }\r\n                  },\r\n                  warn: function (msg) {\r\n                      if (options.logLevel >= logLevel_warn) {\r\n                          console.warn(msg);\r\n                      }\r\n                  },\r\n                  error: function (msg) {\r\n                      if (options.logLevel >= logLevel_error) {\r\n                          console.error(msg);\r\n                      }\r\n                  }\r\n              }];\r\n      }\r\n      for (var i = 0; i < options.loggers.length; i++) {\r\n          less.logger.addListener(options.loggers[i]);\r\n      }\r\n  });\n\n  var ErrorReporting = (function (window, less, options) {\r\n      function errorHTML(e, rootHref) {\r\n          var id = \"less-error-message:\" + extractId(rootHref || '');\r\n          var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n          var elem = window.document.createElement('div');\r\n          var timer;\r\n          var content;\r\n          var errors = [];\r\n          var filename = e.filename || rootHref;\r\n          var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n          elem.id = id;\r\n          elem.className = 'less-error-message';\r\n          content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n              (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n          var errorline = function (e, i, classname) {\r\n              if (e.extract[i] !== undefined) {\r\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                      .replace(/\\{class\\}/, classname)\r\n                      .replace(/\\{content\\}/, e.extract[i]));\r\n              }\r\n          };\r\n          if (e.line) {\r\n              errorline(e, 0, '');\r\n              errorline(e, 1, 'line');\r\n              errorline(e, 2, '');\r\n              content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n          }\r\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n              content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n          }\r\n          elem.innerHTML = content;\r\n          // CSS for error messages\r\n          browser.createCSS(window.document, [\r\n              '.less-error-message ul, .less-error-message li {',\r\n              'list-style-type: none;',\r\n              'margin-right: 15px;',\r\n              'padding: 4px 0;',\r\n              'margin: 0;',\r\n              '}',\r\n              '.less-error-message label {',\r\n              'font-size: 12px;',\r\n              'margin-right: 15px;',\r\n              'padding: 4px 0;',\r\n              'color: #cc7777;',\r\n              '}',\r\n              '.less-error-message pre {',\r\n              'color: #dd6666;',\r\n              'padding: 4px 0;',\r\n              'margin: 0;',\r\n              'display: inline-block;',\r\n              '}',\r\n              '.less-error-message pre.line {',\r\n              'color: #ff0000;',\r\n              '}',\r\n              '.less-error-message h3 {',\r\n              'font-size: 20px;',\r\n              'font-weight: bold;',\r\n              'padding: 15px 0 5px 0;',\r\n              'margin: 0;',\r\n              '}',\r\n              '.less-error-message a {',\r\n              'color: #10a',\r\n              '}',\r\n              '.less-error-message .error {',\r\n              'color: red;',\r\n              'font-weight: bold;',\r\n              'padding-bottom: 2px;',\r\n              'border-bottom: 1px dashed red;',\r\n              '}'\r\n          ].join('\\n'), { title: 'error-message' });\r\n          elem.style.cssText = [\r\n              'font-family: Arial, sans-serif',\r\n              'border: 1px solid #e00',\r\n              'background-color: #eee',\r\n              'border-radius: 5px',\r\n              '-webkit-border-radius: 5px',\r\n              '-moz-border-radius: 5px',\r\n              'color: #e00',\r\n              'padding: 15px',\r\n              'margin-bottom: 15px'\r\n          ].join(';');\r\n          if (options.env === 'development') {\r\n              timer = setInterval(function () {\r\n                  var document = window.document;\r\n                  var body = document.body;\r\n                  if (body) {\r\n                      if (document.getElementById(id)) {\r\n                          body.replaceChild(elem, document.getElementById(id));\r\n                      }\r\n                      else {\r\n                          body.insertBefore(elem, body.firstChild);\r\n                      }\r\n                      clearInterval(timer);\r\n                  }\r\n              }, 10);\r\n          }\r\n      }\r\n      function removeErrorHTML(path) {\r\n          var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n          if (node) {\r\n              node.parentNode.removeChild(node);\r\n          }\r\n      }\r\n      function removeError(path) {\r\n          if (!options.errorReporting || options.errorReporting === 'html') {\r\n              removeErrorHTML(path);\r\n          }\r\n          else if (options.errorReporting === 'console') ;\r\n          else if (typeof options.errorReporting === 'function') {\r\n              options.errorReporting('remove', path);\r\n          }\r\n      }\r\n      function errorConsole(e, rootHref) {\r\n          var template = '{line} {content}';\r\n          var filename = e.filename || rootHref;\r\n          var errors = [];\r\n          var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n          var errorline = function (e, i, classname) {\r\n              if (e.extract[i] !== undefined) {\r\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                      .replace(/\\{class\\}/, classname)\r\n                      .replace(/\\{content\\}/, e.extract[i]));\r\n              }\r\n          };\r\n          if (e.line) {\r\n              errorline(e, 0, '');\r\n              errorline(e, 1, 'line');\r\n              errorline(e, 2, '');\r\n              content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n          }\r\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n              content += \"\\nStack Trace\\n\" + e.stack;\r\n          }\r\n          less.logger.error(content);\r\n      }\r\n      function error(e, rootHref) {\r\n          if (!options.errorReporting || options.errorReporting === 'html') {\r\n              errorHTML(e, rootHref);\r\n          }\r\n          else if (options.errorReporting === 'console') {\r\n              errorConsole(e, rootHref);\r\n          }\r\n          else if (typeof options.errorReporting === 'function') {\r\n              options.errorReporting('add', e, rootHref);\r\n          }\r\n      }\r\n      return {\r\n          add: error,\r\n          remove: removeError\r\n      };\r\n  });\n\n  // Cache system is a bit outdated and could do with work\r\n  var Cache = (function (window, options, logger) {\r\n      var cache = null;\r\n      if (options.env !== 'development') {\r\n          try {\r\n              cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n          }\r\n          catch (_) { }\r\n      }\r\n      return {\r\n          setCSS: function (path, lastModified, modifyVars, styles) {\r\n              if (cache) {\r\n                  logger.info(\"saving \" + path + \" to cache.\");\r\n                  try {\r\n                      cache.setItem(path, styles);\r\n                      cache.setItem(path + \":timestamp\", lastModified);\r\n                      if (modifyVars) {\r\n                          cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                      }\r\n                  }\r\n                  catch (e) {\r\n                      // TODO - could do with adding more robust error handling\r\n                      logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                  }\r\n              }\r\n          },\r\n          getCSS: function (path, webInfo, modifyVars) {\r\n              var css = cache && cache.getItem(path);\r\n              var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n              var vars = cache && cache.getItem(path + \":vars\");\r\n              modifyVars = modifyVars || {};\r\n              vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n              if (timestamp && webInfo.lastModified &&\r\n                  (new Date(webInfo.lastModified).valueOf() ===\r\n                      new Date(timestamp).valueOf()) &&\r\n                  JSON.stringify(modifyVars) === vars) {\r\n                  // Use local copy\r\n                  return css;\r\n              }\r\n          }\r\n      };\r\n  });\n\n  var ImageSize = (function () {\r\n      function imageSize() {\r\n          throw {\r\n              type: 'Runtime',\r\n              message: 'Image size functions are not supported in browser version of less'\r\n          };\r\n      }\r\n      var imageFunctions = {\r\n          'image-size': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          },\r\n          'image-width': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          },\r\n          'image-height': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          }\r\n      };\r\n      functionRegistry.addMultiple(imageFunctions);\r\n  });\n\n  //\r\n  var root = (function (window, options) {\r\n      var document = window.document;\r\n      var less = lessRoot();\r\n      less.options = options;\r\n      var environment = less.environment;\r\n      var FileManager = FM(options, less.logger);\r\n      var fileManager = new FileManager();\r\n      environment.addFileManager(fileManager);\r\n      less.FileManager = FileManager;\r\n      less.PluginLoader = PluginLoader;\r\n      LogListener(less, options);\r\n      var errors = ErrorReporting(window, less, options);\r\n      var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n      ImageSize(less.environment);\r\n      // Setup user functions - Deprecate?\r\n      if (options.functions) {\r\n          less.functions.functionRegistry.addMultiple(options.functions);\r\n      }\r\n      var typePattern = /^text\\/(x-)?less$/;\r\n      function clone(obj) {\r\n          var cloned = {};\r\n          for (var prop in obj) {\r\n              if (obj.hasOwnProperty(prop)) {\r\n                  cloned[prop] = obj[prop];\r\n              }\r\n          }\r\n          return cloned;\r\n      }\r\n      // only really needed for phantom\r\n      function bind(func, thisArg) {\r\n          var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n          return function () {\r\n              var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n              return func.apply(thisArg, args);\r\n          };\r\n      }\r\n      function loadStyles(modifyVars) {\r\n          var styles = document.getElementsByTagName('style');\r\n          var style;\r\n          for (var i = 0; i < styles.length; i++) {\r\n              style = styles[i];\r\n              if (style.type.match(typePattern)) {\r\n                  var instanceOptions = clone(options);\r\n                  instanceOptions.modifyVars = modifyVars;\r\n                  var lessText = style.innerHTML || '';\r\n                  instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                  /* jshint loopfunc:true */\r\n                  // use closure to store current style\r\n                  less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                      if (e) {\r\n                          errors.add(e, 'inline');\r\n                      }\r\n                      else {\r\n                          style.type = 'text/css';\r\n                          if (style.styleSheet) {\r\n                              style.styleSheet.cssText = result.css;\r\n                          }\r\n                          else {\r\n                              style.innerHTML = result.css;\r\n                          }\r\n                      }\r\n                  }, null, style));\r\n              }\r\n          }\r\n      }\r\n      function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n          var instanceOptions = clone(options);\r\n          addDataAttr(instanceOptions, sheet);\r\n          instanceOptions.mime = sheet.type;\r\n          if (modifyVars) {\r\n              instanceOptions.modifyVars = modifyVars;\r\n          }\r\n          function loadInitialFileCallback(loadedFile) {\r\n              var data = loadedFile.contents;\r\n              var path = loadedFile.filename;\r\n              var webInfo = loadedFile.webInfo;\r\n              var newFileInfo = {\r\n                  currentDirectory: fileManager.getPath(path),\r\n                  filename: path,\r\n                  rootFilename: path,\r\n                  rewriteUrls: instanceOptions.rewriteUrls\r\n              };\r\n              newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n              newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n              if (webInfo) {\r\n                  webInfo.remaining = remaining;\r\n                  var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                  if (!reload && css) {\r\n                      webInfo.local = true;\r\n                      callback(null, css, data, sheet, webInfo, path);\r\n                      return;\r\n                  }\r\n              }\r\n              // TODO add tests around how this behaves when reloading\r\n              errors.remove(path);\r\n              instanceOptions.rootFileInfo = newFileInfo;\r\n              less.render(data, instanceOptions, function (e, result) {\r\n                  if (e) {\r\n                      e.href = path;\r\n                      callback(e);\r\n                  }\r\n                  else {\r\n                      cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                      callback(null, result.css, data, sheet, webInfo, path);\r\n                  }\r\n              });\r\n          }\r\n          fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n              .then(function (loadedFile) {\r\n              loadInitialFileCallback(loadedFile);\r\n          }).catch(function (err) {\r\n              console.log(err);\r\n              callback(err);\r\n          });\r\n      }\r\n      function loadStyleSheets(callback, reload, modifyVars) {\r\n          for (var i = 0; i < less.sheets.length; i++) {\r\n              loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n          }\r\n      }\r\n      function initRunningMode() {\r\n          if (less.env === 'development') {\r\n              less.watchTimer = setInterval(function () {\r\n                  if (less.watchMode) {\r\n                      fileManager.clearFileCache();\r\n                      loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                          if (e) {\r\n                              errors.add(e, e.href || sheet.href);\r\n                          }\r\n                          else if (css) {\r\n                              browser.createCSS(window.document, css, sheet);\r\n                          }\r\n                      });\r\n                  }\r\n              }, options.poll);\r\n          }\r\n      }\r\n      //\r\n      // Watch mode\r\n      //\r\n      less.watch = function () {\r\n          if (!less.watchMode) {\r\n              less.env = 'development';\r\n              initRunningMode();\r\n          }\r\n          this.watchMode = true;\r\n          return true;\r\n      };\r\n      less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n      //\r\n      // Synchronously get all <link> tags with the 'rel' attribute set to\r\n      // \"stylesheet/less\".\r\n      //\r\n      less.registerStylesheetsImmediately = function () {\r\n          var links = document.getElementsByTagName('link');\r\n          less.sheets = [];\r\n          for (var i = 0; i < links.length; i++) {\r\n              if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                  (links[i].type.match(typePattern)))) {\r\n                  less.sheets.push(links[i]);\r\n              }\r\n          }\r\n      };\r\n      //\r\n      // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n      // \"stylesheet/less\", returning a Promise.\r\n      //\r\n      less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n          less.registerStylesheetsImmediately();\r\n          resolve();\r\n      }); };\r\n      //\r\n      // With this function, it's possible to alter variables and re-render\r\n      // CSS without reloading less-files\r\n      //\r\n      less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n      less.refresh = function (reload, modifyVars, clearFileCache) {\r\n          if ((reload || clearFileCache) && clearFileCache !== false) {\r\n              fileManager.clearFileCache();\r\n          }\r\n          return new Promise(function (resolve, reject) {\r\n              var startTime;\r\n              var endTime;\r\n              var totalMilliseconds;\r\n              var remainingSheets;\r\n              startTime = endTime = new Date();\r\n              // Set counter for remaining unprocessed sheets\r\n              remainingSheets = less.sheets.length;\r\n              if (remainingSheets === 0) {\r\n                  endTime = new Date();\r\n                  totalMilliseconds = endTime - startTime;\r\n                  less.logger.info('Less has finished and no sheets were loaded.');\r\n                  resolve({\r\n                      startTime: startTime,\r\n                      endTime: endTime,\r\n                      totalMilliseconds: totalMilliseconds,\r\n                      sheets: less.sheets.length\r\n                  });\r\n              }\r\n              else {\r\n                  // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                  loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                      if (e) {\r\n                          errors.add(e, e.href || sheet.href);\r\n                          reject(e);\r\n                          return;\r\n                      }\r\n                      if (webInfo.local) {\r\n                          less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                      }\r\n                      else {\r\n                          less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                      }\r\n                      browser.createCSS(window.document, css, sheet);\r\n                      less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                      // Count completed sheet\r\n                      remainingSheets--;\r\n                      // Check if the last remaining sheet was processed and then call the promise\r\n                      if (remainingSheets === 0) {\r\n                          totalMilliseconds = new Date() - startTime;\r\n                          less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                          resolve({\r\n                              startTime: startTime,\r\n                              endTime: endTime,\r\n                              totalMilliseconds: totalMilliseconds,\r\n                              sheets: less.sheets.length\r\n                          });\r\n                      }\r\n                      endTime = new Date();\r\n                  }, reload, modifyVars);\r\n              }\r\n              loadStyles(modifyVars);\r\n          });\r\n      };\r\n      less.refreshStyles = loadStyles;\r\n      return less;\r\n  });\n\n  /**\r\n   * Kicks off less and compiles any stylesheets\r\n   * used in the browser distributed version of less\r\n   * to kick-start less using the browser api\r\n   */\r\n  var options$1 = defaultOptions();\r\n  if (window.less) {\r\n      for (var key in window.less) {\r\n          if (window.less.hasOwnProperty(key)) {\r\n              options$1[key] = window.less[key];\r\n          }\r\n      }\r\n  }\r\n  addDefaultOptions(window, options$1);\r\n  options$1.plugins = options$1.plugins || [];\r\n  if (window.LESS_PLUGINS) {\r\n      options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\r\n  }\r\n  var less = root(window, options$1);\r\n  window.less = less;\r\n  var css;\r\n  var head;\r\n  var style;\r\n  // Always restore page visibility\r\n  function resolveOrReject(data) {\r\n      if (data.filename) {\r\n          console.warn(data);\r\n      }\r\n      if (!options$1.async) {\r\n          head.removeChild(style);\r\n      }\r\n  }\r\n  if (options$1.onReady) {\r\n      if (/!watch/.test(window.location.hash)) {\r\n          less.watch();\r\n      }\r\n      // Simulate synchronous stylesheet loading by hiding page rendering\r\n      if (!options$1.async) {\r\n          css = 'body { display: none !important }';\r\n          head = document.head || document.getElementsByTagName('head')[0];\r\n          style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          if (style.styleSheet) {\r\n              style.styleSheet.cssText = css;\r\n          }\r\n          else {\r\n              style.appendChild(document.createTextNode(css));\r\n          }\r\n          head.appendChild(style);\r\n      }\r\n      less.registerStylesheetsImmediately();\r\n      less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n  }\n\n  return less;\n\n})));\n"],"names":["module","exports","defaultOptions","javascriptEnabled","depends","compress","lint","paths","color","strictImports","insecure","rootpath","rewriteUrls","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","createCSS","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","currentScript","window","scripts","addDefaultOptions","undefined","isFileProtocol","test","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","exec","hash","useFileCache","onReady","relativeUrls","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","__extends","__","this","constructor","prototype","create","__spreadArrays","s","i","il","arguments","r","k","a","j","jl","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","self","defineProperty","get","fileInfo","getIndex","setParent","nodes","set","node","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","push","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","fround","precision","numPrecision","Number","toFixed","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","info","compare","type","numericCompare","Color","rgb","originalForm","match","map","c","parseInt","alpha","split","clamp","v","max","min","toHex","round","toString","luma","g","pow","doNotCompress","colorFunction","args","indexOf","concat","toHSL","h","l","toRGB","splitcolor","operate","other","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","STRICT_LEGACY","RewriteUrls","OFF","LOCAL","ALL","getType","payload","call","isPlainObject","getPrototypeOf","__spreadArrays$1","assignProp","carry","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","enumerable","writable","configurable","copy","target","getOwnPropertyNames","getOwnPropertySymbols","reduce","props","includes","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","assign","copyOptions","opts","strictMath","merge","flattenArray","result","length_1","utils","freeze","anonymousFunc","LessError","fileContentMap","currentFilename","filename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","F","error","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","name","important","inline","variable","evalName","lastRule","prevMath","evaldValue","mathBypass","importantScope","importantResult","pop","makeImportant","debugInfo","ctx","lineSeparator","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","isPathRelative","path","isPathLocalRelative","makeRegistry","base","_data","addMultiple","functions","_this","keys","getLocalFunctions","inherit","Eval","frames","inCalc","mathOn","enterCalc","calcStack","exitCalc","inParenthesis","parensStack","outOfParenthesis","isMathOn","pathRequiresRewrite","rewritePath","newPath","normalizePath","segment","segments","reverse","functionRegistry","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","_lookups","_variables","_properties","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","splice","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","isRuleset","prependRule","find","foundMixins","debugInfo$1","charsetRuleNodes","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","element","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","deriveSelector","deriveFrom","newPaths","concatenated","bind","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","_i","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","MATH$2","Expression","noSpacing","returnValue","parens","parensInOp","doubleParen","throwAwayComments","functionCaller","isValid","evalArgs","item","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","pluginManager","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","escapePath","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","logger","msg","_fireEvent","warn","debug","addListener","listener","_listeners","removeListener","logFunction","environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","propName","environmentFunc","getFileManager","currentDirectory","isSync","getFileManagers","fileManager","addFileManager","clearFileManagers","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","registerPlugin","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","chunker","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","chunks","emitFrom","emitChunk","force","charCodeAt","fromCharCode","getParserInput","furthest","furthestPossibleErrorMessage","current","currentPos","saveStack","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","If","trueValue","falseValue","colorFunctions","boolean$1","clamp$1","hsla","origColor","hsl","number","scaled","size","rgba","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","mode","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","dataUri","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","encodeURIComponent","getItemsFromNode","list","_SELF","values","range","step","from","to","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","f$1","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","svg","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","Functions","sourceMapOutput","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","sourceMapBuilder","SourceMapBuilder","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","parseTree","ParseTree","toCSSOptions","postProcessors","getPostProcessors","files","rootFilename","importManager","ImportManager","rootFileInfo","mime","queue","pluginLoader","Loader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","pm","Render","render","self_1","Promise","resolve","reject","PluginManager","installedPlugins","pluginCache","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getVisitors","PluginManagerFactory","newFactory","logger$1","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","lessRoot","environment$1","initial","Environment","ctor","api","fileCache","_super","doXHR","errback","xhr","XMLHttpRequest","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","LogListener","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","ErrorReporting","errorHTML","rootHref","timer","template","errors","filenameNoPath","className","errorline","classname","innerHTML","style","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","Cache","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","ImageSize","imageSize","imageFunctions","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","options$1","LESS_PLUGINS","resolveOrReject","pageLoadFinished","factory"],"sourceRoot":""}