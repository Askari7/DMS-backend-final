{"version":3,"file":"static/js/7521.c0248e64.chunk.js","mappings":"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","sources":["view/main/widgets/charts/areaChart.jsx","view/main/widgets/charts/donutChart.jsx","view/main/widgets/charts/lineChart.jsx","view/main/widgets/charts/columnChart.jsx","view/main/widgets/charts/barChart.jsx","view/main/widgets/charts/radialbarChart.jsx","view/main/widgets/charts/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Card, Row, Col, DatePicker } from \"antd\";\r\nimport Chart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AreaChart() {\r\n  function onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n  }\r\n\r\n  const [data] = useState({\r\n    series: [\r\n      {\r\n        name: \"Docs Approved by Project Manager\",\r\n        data: [\r\n          9, 9, 8, 7, 3, 1, 3, 9, 7, 3,\r\n          9, 4,\r\n        ],\r\n      },\r\n      {\r\n        name: \"Docs Approved by Client\",\r\n        data: [\r\n          7, 6, 3, 3, 1, 5, 8, 6, 2, 2,\r\n          7, 2,\r\n        ],\r\n      },\r\n      {\r\n        name: \"Working Docs\",\r\n        data: [\r\n          2, 3, 5, 4, 6, 8, 2, 3, 5, 1,\r\n          2, 2,\r\n        ],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        fontFamily: \"Manrope, sans-serif\",\r\n        type: \"area\",\r\n\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      labels: {\r\n        style: {\r\n          fontSize: \"14px\",\r\n        },\r\n      },\r\n\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n\r\n      grid: {\r\n        borderColor: \"#DFE6E9\",\r\n        row: {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n        type: \"solid\",\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 4,\r\n        curve: \"straight\",\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n        axisTicks: {\r\n          show: false,\r\n          borderType: \"solid\",\r\n          color: \"#78909C\",\r\n          height: 6,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n        },\r\n\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"14px\",\r\n          },\r\n        },\r\n        categories: [\r\n          \"Project1\",\r\n          \"Project2\",\r\n          \"Project3\",\r\n          \"Project4\",\r\n          \"Project5\",\r\n          \"Project6\",\r\n          \"Project7\",\r\n          \"Project8\",\r\n          \"Project9\",\r\n          \"Project10\",\r\n          \"Project11\",\r\n          \"Project12\",\r\n        ],\r\n      },\r\n      legend: {\r\n        horizontalAlign: \"right\",\r\n        offsetX: 40,\r\n        position: \"top\",\r\n        markers: {\r\n          radius: 12,\r\n        },\r\n      },\r\n      colors: [\"#EBFAFA\", \"#55B1F3\", \"#0010F7\"],\r\n\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"14px\",\r\n          },\r\n          formatter: (value) => {\r\n            return value;\r\n          },\r\n        },\r\n\r\n        min: 0,\r\n        max: 10,\r\n        tickAmount: 5,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row justify=\"space-between\">\r\n            <Row align=\"bottom\" className=\"hp-pb-16\">\r\n              <h4 className=\"hp-mr-8\">Documents In Projects</h4>\r\n            </Row>\r\n            \r\n            <Col>\r\n              <DatePicker\r\n                onChange={onChange}\r\n                picker=\"year\"\r\n                defaultValue={moment(\"2019\", \"YYYY\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <div id=\"chart\">\r\n            <Chart\r\n              options={data.options}\r\n              series={data.series}\r\n              type=\"area\"\r\n              height={350}\r\n              legend=\"legend\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Row, Col, Dropdown, Menu } from \"antd\";\r\nimport Chart from \"react-apexcharts\";\r\nimport './index.css'\r\nexport default function DonutChart({ projects, projectCount ,projectsStatusCounts}) {\r\n  console.log(\"projects\",projects,\"projectCount\",projectCount,\"projectsStatusCounts\",projectsStatusCounts);\r\n  const [statusCounts, setStatusCounts] = useState([0, 0, 0]);\r\n  const [progress, setProgress] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (projects && projects.length > 0) {\r\n      let initializedCount = 0;\r\n      let completedCount = 0;\r\n      let ongoingCount = 0;\r\n\r\n      projects.forEach((project) => {\r\n        switch (project.status) {\r\n          case \"Initialized\":\r\n            initializedCount++;\r\n            break;\r\n          case \"Completed\":\r\n            completedCount++;\r\n            break;\r\n          case \"Ongoing\":\r\n            ongoingCount++;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      setStatusCounts([initializedCount, completedCount, ongoingCount]);\r\n      console.log(projects,'log');\r\n      if(projects[0].projectId){\r\n        setProgress(\"MDR Progress\")\r\n      }else{\r\n        setProgress(\"Project Progress\")\r\n      } \r\n    }\r\n  }, [projects]);\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>Last 7 Days</Menu.Item>\r\n      <Menu.Item>Last Month</Menu.Item>\r\n      <Menu.Item>Last Year</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Series prop received by Chart component:\", statusCounts);\r\n  }, [statusCounts]);\r\n\r\n  const [data] = useState({\r\n    series: statusCounts,\r\n    options: {\r\n      \r\n\r\n      chart: {\r\n        dropShadow: {\r\n          enabled: true,\r\n          top: 0,\r\n          left: 0,\r\n          blur: 1.5,\r\n          opacity: 0.3\r\n          \r\n        },\r\n        fontFamily: \"Manrope, sans-serif\",\r\n        type: \"donut\",\r\n        toolbar: {\r\n          show: true,\r\n        },\r\n        zoom: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      colors: [\"#0010F7\", \"#55B1F3\", \"#1BE7FF\"],\r\n\r\n      labels: [\"Initialized\", \"Completed\", \" Ongoing\"],\r\n\r\n      dataLabels: {\r\n        style: {\r\n          colors: ['#55B1F3', '#0010F7', '#1BE7FF']\r\n        },\r\n        enabled: true,\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            size: \"70%\",\r\n            labels: {\r\n              show: true,\r\n              name: {\r\n                fontSize: \"2rem\",\r\n              },\r\n              value: {\r\n                fontSize: \"16px\",\r\n                formatter(val) {\r\n                  return `${val}`;\r\n                },\r\n              },\r\n              total: {\r\n                show: true,\r\n                fontSize: \"16px\",\r\n                label: \"Total\",\r\n                formatter: function (w) {\r\n                  return `${w.globals.seriesTotals.reduce((a, b) => {\r\n                    return a + b;\r\n                  })}`;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      \r\n\r\n      legend: {\r\n        itemMargin: {\r\n          horizontal: 24,\r\n          vertical: 12,\r\n        },\r\n        horizontalAlign: \"center\",\r\n        position: \"bottom\",\r\n        fontSize: \"18px\",\r\n\r\n        markers: {\r\n          radius: 12,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify=\"space-between\" align=\"top\">\r\n            <Col>\r\n              <h4 className=\"hp-mr-8\">{progress}</h4>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <div id=\"chart\" className=\"hp-donut-chart\">\r\n            <Chart options={data.options} series={statusCounts} type=\"donut\" height={398} legend=\"legend\" />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Card, Row, Col, DatePicker } from \"antd\";\r\nimport Chart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\n\r\nexport default function LineChart() {\r\n  function onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n  }\r\n\r\n  const [data] = useState({\r\n    series: [\r\n      {\r\n        name: \"In House\",\r\n        data: [\r\n          28877, 29334, 33233, 36439, 32675, 32333, 33457, 38345, 36783, 39457,\r\n          22459, 39840,\r\n        ],\r\n      },\r\n      {\r\n        name: \"Client\",\r\n        data: [\r\n          12010, 11313, 14623, 18935, 17345, 13465, 17813, 19125, 16256, 20356,\r\n          12233, 14570,\r\n        ],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        fontFamily: \"Manrope, sans-serif\",\r\n        type: \"line\",\r\n\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      colors: [\"#0063F7\", \"#1BE7FF\"],\r\n      labels: {\r\n        style: {\r\n          fontSize: \"14px\",\r\n        },\r\n      },\r\n\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n\r\n      grid: {\r\n        borderColor: \"#DFE6E9\",\r\n        row: {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n\r\n      markers: {\r\n        strokeWidth: 0,\r\n        size: 6,\r\n        colors: [\"#0063F7\", \"#1BE7FF\"],\r\n        hover: {\r\n          sizeOffset: 1,\r\n        },\r\n      },\r\n      xaxis: {\r\n        axisTicks: {\r\n          show: false,\r\n          borderType: \"solid\",\r\n          color: \"#78909C\",\r\n          height: 6,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n        },\r\n\r\n        tickPlacement: \"between\",\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"14px\",\r\n          },\r\n        },\r\n        categories: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\",\r\n          \"Oct\",\r\n          \"Nov\",\r\n          \"Dec\",\r\n        ],\r\n      },\r\n      legend: {\r\n        horizontalAlign: \"right\",\r\n        offsetX: 40,\r\n        position: \"top\",\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"14px\",\r\n          },\r\n          formatter: (value) => {\r\n            return value / 1000 + \"K\";\r\n          },\r\n        },\r\n\r\n        min: 0,\r\n        max: 40000,\r\n        tickAmount: 4,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row justify=\"space-between\">\r\n            <Row align=\"bottom\" className=\"hp-pb-16\">\r\n              <h4 className=\"hp-mr-8\">Number Of Comments</h4>\r\n            </Row>\r\n\r\n            <Col>\r\n              <DatePicker\r\n                onChange={onChange}\r\n                picker=\"year\"\r\n                defaultValue={moment(\"2019\", \"YYYY\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <div id=\"chart\">\r\n            <Chart\r\n              options={data.options}\r\n              series={data.series}\r\n              type=\"line\"\r\n              height={350}\r\n              legend=\"legend\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Card, Row, Col, DatePicker } from \"antd\";\r\nimport Chart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\nexport default function ColumnChart({ inputData, documents,completed,remaining}) {\r\n  // console.log(documents,completed,remaining,\"getting \");\r\n  console.log(inputData,\"getting \");\r\n\r\n  const [informtion, setInformation] = useState([]);\r\n  const [documentss, setDocuments] = useState([documents]);\r\n  const [remain, setRemaining] = useState([]);\r\n  const [complete, setCompleted] = useState([]);\r\n  const [inHouse, setInHouse] = useState([]);\r\n  const [sendToClient, setSendToClient] = useState([]);\r\n\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  \r\n\r\n\r\nuseEffect(() => {\r\n  if (inputData && inputData.length > 0) {\r\n    // Extract titles from inputData\r\n    const titlesArray = inputData.map(obj => obj.title);\r\n  \r\n    // Update state with titlesArray\r\n    console.log(titlesArray,'titlesArray');\r\n    setInformation(titlesArray);    \r\n  }\r\n}, [inputData]);\r\n\r\n\r\nuseEffect(() => {\r\n\r\n  if (documents && documents.length > 0) {\r\n\r\n      const completedCounts = [];\r\n      const inHouseCounts = [];\r\n      const remainingCounts = [];\r\n      const sendToClinetCounts = [];\r\n\r\n    for (const document of documents) {\r\n      let completedCount = 0;\r\n      let remainingCount = 0;\r\n      let inHouseCount = 0;\r\n      let sendToClinetCount = 0;\r\n\r\n      for (const statusArray of document.map(doc => doc.status)) {\r\n        console.log(statusArray,\"array\");\r\n        switch (statusArray) {\r\n          case \"Completed\":\r\n            completedCount++;\r\n            break;\r\n          case \"Approved(in-house)\":\r\n            inHouseCount++;\r\n            break;\r\n          case \"Send To Client\":\r\n              sendToClinetCount++;\r\n              break;\r\n          default:\r\n            remainingCount++;\r\n            break;\r\n        }\r\n        }\r\n      inHouseCounts.push(inHouseCount);\r\n      completedCounts.push(completedCount);\r\n      remainingCounts.push(remainingCount);\r\n      sendToClinetCounts.push(sendToClinetCount);\r\n\r\n    }\r\n\r\n    console.log(\"Completed Counts:\", completedCounts);\r\n    console.log(\"Remaining Counts:\", remainingCounts);\r\n\r\n    setCompleted(completedCounts);\r\n    setInHouse(inHouseCounts);\r\n\r\n    setRemaining(remainingCounts);\r\n  }\r\n  setDocuments(documents)\r\n}, [documents]);\r\n\r\n// console.log(inputData, \"inputData\");\r\n// console.log(informtion, \"information\");\r\n\r\n// Function to filter data based on year\r\nconst filterDataByYear = (dateString) => {\r\n\r\n  if (dateString === '') {\r\n    setDocuments(documents)\r\n    update(documents)\r\n    return;\r\n  }\r\n\r\n  console.log(documentss,'documentss');\r\n  console.log(dateString, 'dateString');\r\n  const filtered = documentss.map(subArray => {\r\n    return subArray.filter(item => {\r\n      console.log(item,'item',item.id);\r\n      const startingYear = item.startedDate.substring(0, 4); // Extracting the year from the date string\r\n      return startingYear === dateString;\r\n    });\r\n  });\r\n\r\n  console.log(filtered,\"filtered\");\r\n\r\n  console.log(complete,remain);\r\n  setFilteredData(filtered);\r\n  update(filtered)\r\n};\r\n\r\n  function update(filtered){\r\n    const filteredArray = []\r\n    if (filtered && filtered.length > 0) {\r\n      console.log(filtered,'filtered');\r\n      const completedCounts = [];\r\n      const inHouseCounts = [];\r\n      const sendToClinetCounts = [];\r\n\r\n      const remainingCounts = [];\r\n    for (const document of filtered) {\r\n      console.log(document,'document');\r\n      let completedCount = 0;\r\n      let remainingCount = 0;\r\n      let inHouseCount = 0;\r\n      let sendToClinetCount = 0;\r\n\r\n      for (const statusArray of document.map(doc => doc.status)) {\r\n        console.log(statusArray,\"array\");\r\n        switch (statusArray) {\r\n          case \"Completed\":\r\n            completedCount++;\r\n            break;\r\n          case \"Approved(In-house)\":\r\n            inHouseCount++;\r\n            break;\r\n            case \"Send To Client\":\r\n            sendToClinetCount++;\r\n            break;\r\n          default:\r\n            remainingCount++;\r\n            break;\r\n        }\r\n        }\r\n      inHouseCounts.push(inHouseCount);\r\n\r\n      completedCounts.push(completedCount);\r\n      remainingCounts.push(remainingCount);\r\n      sendToClinetCounts.push(sendToClinetCount);\r\n\r\n    }\r\n\r\n    console.log(\"Completed Counts:\", completedCounts);\r\n    console.log(\"Remaining Counts:\", remainingCounts);\r\n\r\n    setCompleted(completedCounts);\r\n    setInHouse(inHouseCounts);\r\n    setSendToClient(sendToClinetCounts);\r\n\r\n    setRemaining(remainingCounts);\r\n  }\r\n    // updateInfo(filteredArray)\r\n  }\r\n\r\n  // const updateInfo=(filteredArray)=>{\r\n  //   console.log(filteredArray,'array');\r\n  //   const info = inputData.filter(item => filteredArray.includes(item.id));\r\n  //   console.log(info,'info');\r\n  // }\r\n\r\n  function onChange(date, dateString) {\r\n    console.log(date, dateString,'isko peecha bhej');\r\n    filterDataByYear(dateString);\r\n  }\r\n\r\n  console.log(complete,remain);\r\n  const [data] = useState({\r\n    series: [\r\n      {\r\n        name: \"Complete Documents\",\r\n        data: complete,\r\n      },\r\n\r\n      {\r\n        name: \"Approved(In-house) Documents\",\r\n        data: inHouse,\r\n      },\r\n\r\n      {\r\n        name: \"Documents send For Client's approval\",\r\n        data: sendToClient,\r\n      },\r\n      \r\n      {\r\n        name: \"Remaining Documents\",\r\n        data: remain,\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        fontFamily: \"Manrope, sans-serif\",\r\n        type: \"bar\",\r\n\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      labels: {\r\n        style: {\r\n          fontSize: \"14px\",\r\n        },\r\n      },\r\n\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n\r\n      grid: {\r\n        borderColor: \"#DFE6E9\",\r\n        row: {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          borderRadius: 2,\r\n          columnWidth: \"45%\",\r\n          endingShape: \"rounded\",\r\n        },\r\n        colors: {\r\n          backgroundBarColors: [\"#0063F7\",\"#00F7BF\" ,\"#00F7BF\",\"#00F7BF\"],\r\n        },\r\n      },\r\n\r\n      stroke: {\r\n        show: true,\r\n        width: 3,\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n        axisTicks: {\r\n          show: true,\r\n          borderType: \"solid\",\r\n          color: \"#78909C\",\r\n          height: 6,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n        },\r\n\r\n        tickPlacement: \"between\",\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"14px\",\r\n          },\r\n        },\r\n        categories: informtion,        \r\n      },\r\n      legend: {\r\n        horizontalAlign: \"right\",\r\n        offsetX: 40,\r\n        position: \"top\",\r\n        markers: {\r\n          radius: 12,\r\n        },\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"14px\",\r\n          },\r\n          formatter: (value) => {\r\n            return value;\r\n          },\r\n        },\r\n\r\n        min: 0,\r\n        max: 12,\r\n        tickAmount: 4,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row justify=\"space-between\">\r\n            <Row align=\"bottom\" className=\"hp-pb-16\">\r\n              <h4 className=\"hp-mr-8\">Document Assessment</h4>\r\n            </Row>\r\n            \r\n            <Col>\r\n              <DatePicker\r\n                onChange={onChange}\r\n                picker=\"year\"\r\n                defaultValue={moment(\"2020\", \"YYYY\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <div id=\"chart\">\r\n          <Chart\r\n            options={{\r\n              ...data.options,\r\n              xaxis: {\r\n                ...data.options.xaxis,\r\n                categories: informtion,\r\n              },\r\n            }}\r\n            series={[\r\n              { name: \"Complete Documents\", data: complete },\r\n              { name: \"Approved(In-house) Documents\", data: inHouse },\r\n              { name: \"Documents send for Client's approval\", data: sendToClient},\r\n              { name: \"Remaining Documents\", data: remain },\r\n            ]}            \r\n            type=\"bar\"\r\n            height={350}\r\n            legend=\"legend\"\r\n          />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Card, Row, Col, DatePicker } from \"antd\";\r\nimport Chart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\n\r\nexport default function BarChart({departments,departmentsMembers}) {\r\n  function onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n  }\r\n\r\n  const [data] = useState({\r\n    series: [\r\n      {\r\n        name: \"Department Size\",\r\n        data: departmentsMembers,\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        fontFamily: \"Manrope, sans-serif\",\r\n        type: \"bar\",\r\n\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 8,\r\n          horizontal: true,\r\n        },\r\n      },\r\n      labels: {\r\n        style: {\r\n          fontSize: \"14px\",\r\n        },\r\n      },\r\n\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n\r\n      grid: {\r\n        borderColor: \"#DFE6E9\",\r\n        row: {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n        type: \"solid\",\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 4,\r\n        curve: \"straight\",\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n       axisTicks: {\r\n           show: false,\r\n        },\r\n\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"12px\",\r\n          },\r\n        },\r\n        categories:departments\r\n      },\r\n      legend: {\r\n        horizontalAlign: \"right\",\r\n        offsetX: 40,\r\n        position: \"top\",\r\n        markers: {\r\n          radius: 12,\r\n        },\r\n      },\r\n      colors: [\"#0063F7\"],\r\n\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: [\"636E72\"],\r\n            fontSize: \"14px\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify=\"space-between\" align=\"top\">\r\n            <Col className=\"hp-pb-16\">\r\n              <h4 className=\"hp-mr-8\">Department Strengths</h4>\r\n            </Col>\r\n            \r\n            {/* <Col>\r\n              <DatePicker\r\n                onChange={onChange}\r\n                picker=\"week\"\r\n                defaultValue={moment(\"2019-06-03\", \"YYYY-MM-DD\")}\r\n              />\r\n            </Col> */}\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <div id=\"chart\">\r\n            <Chart\r\n              options={data.options}\r\n              series={[\r\n                {  data: departmentsMembers }\r\n              ]} \r\n              options={{\r\n              ...data.options,\r\n              xaxis: {\r\n                ...data.options.xaxis,\r\n                categories: departments,\r\n              },\r\n            }}\r\n              type=\"bar\"\r\n              height={350}\r\n              legend=\"legend\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Card, Row, Col, Dropdown, Menu } from \"antd\";\r\nimport { RiMoreFill } from \"react-icons/ri\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport default function RadialbarChart({inputData}) {\r\n  console.log(inputData,\"inputData\");\r\n  let total = inputData.reduce((acc, val) => acc + val, 0);\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>Last 7 Days</Menu.Item>\r\n      <Menu.Item>Last Month</Menu.Item>\r\n      <Menu.Item>Last Year</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const [data] = useState({\r\n    series: inputData,\r\n    options: {\r\n      chart: {\r\n        fontFamily: \"Manrope, sans-serif\",\r\n        type: \"radialBar\",\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      colors: [\"#00F7BF\", \"#0010F7\", \"#CC6CE7\",\"#7DDA58\"],\r\n\r\n      labels: [\"Reviewed Pending\", \"Approved Pending\", \"Reviewed\",\"Approved\"],\r\n\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n      stroke: {\r\n        lineCap: \"round\",\r\n      },\r\n\r\n      plotOptions: {\r\n        radialBar: {\r\n          size: 50,\r\n          hollow: {\r\n            size: \"20%\",\r\n          },\r\n\r\n          track: {\r\n            margin: 16,\r\n          },\r\n          dataLabels: {\r\n            show: true,\r\n            name: {\r\n              fontSize: \"16px\",\r\n            },\r\n            value: {\r\n              fontSize: \"16px\",\r\n            },\r\n            total: {\r\n              show: true,\r\n              fontSize: \"16px\",\r\n              label: \"Total\",\r\n              value : total\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      legend: {\r\n        show: true,\r\n        itemMargin: {\r\n          horizontal: 24,\r\n          vertical: 0,\r\n        },\r\n        horizontalAlign: \"center\",\r\n        position: \"bottom\",\r\n        fontSize: \"16px\",\r\n\r\n        markers: {\r\n          radius: 12,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify=\"space-between\" align=\"top\">\r\n            <Col>\r\n            <h4 className=\"hp-mr-8\">Action Items</h4>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n                <RiMoreFill className=\"hp-text-color-dark-0\" size={24} onClick={(e) => e.preventDefault()} />\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <div id=\"chart\" className=\"hp-donut-chart\">\r\n            <Chart\r\n              options={data.options}\r\n              series={inputData}\r\n              type=\"radialBar\"\r\n              height={400}\r\n              legend=\"legend\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect,useState } from \"react\";\r\nimport { Row, Col,Card,Breadcrumb } from \"antd\";\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport LineChart from \"./lineChart\";\r\nimport ColumnChart from \"./columnChart\";\r\nimport AreaChart from \"./areaChart\";\r\nimport ScatterChart from \"./scatterChart\";\r\nimport BarChart from \"./barChart\";\r\nimport CandlestickChart from \"./candlestickChart\";\r\nimport HeatmapChart from \"./heatmapChart\";\r\nimport DonutChart from \"./donutChart\";\r\nimport RadarChart from \"./radarChart\";\r\nimport RadialbarChart from \"./radialbarChart\";\r\nimport axios from \"axios\";\r\nimport Carousal from \"./Carousal\";\r\n\r\n\r\n\r\nexport default function Charts() {\r\n  const [user,setUser] = useState(JSON.parse(localStorage.getItem(\"user\")))\r\n  const [data,setData] = useState([])\r\n  const [remaining,setRemaining] = useState([])\r\n  const [completed,setCompleted] = useState([])\r\n  const [inHouse,setInHouse] = useState([])\r\n\r\n  const [departments,setDepartments]= useState([])\r\n  const [departmentsMembers,setDepartmentsMembers] = useState([])\r\n  const [documents,setDocuments] = useState([])\r\n  const [projectsTitles,setProjectTitles] = useState([])\r\n  const [departmentUsers,setDepartmentUsers] = useState([])\r\n  \r\n  const [reviewCount_00,setReviewCount_0]= useState()\r\n  const [reviewCount_01,setReviewCount_1]= useState()\r\n  const [approverCount_00,setApproverCount_0] = useState()\r\n  const [approverCount_01,setApproverCount_1] = useState()\r\n  const [reviewApproveCount,setReviewApproveCount] = useState([])\r\n\r\n  const fetchData= async(req,res)=>{\r\n    try {\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/projects/info?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Response:\", response.data); \r\n      setData(response.data)\r\n      const titlesArray = response.data.projects.map(obj => obj.title);\r\n      const departments = response.data.departments.map(obj => obj.title);\r\n      console.log(departments,'departments');\r\n      \r\n      const departmentMember = response.data.departments.map(obj => obj.noOfUsers);\r\n      console.log(departmentMember,'departmentMember');\r\n\r\n      const establishment_reviewer = response.data.establishments.map(obj => obj.reviewerId);\r\n      \r\n      const establishment_approver = response.data.establishments.map(obj => obj.approverId);\r\n      const establishment_reviewer_status = response.data.establishments.map(obj => obj.reviewerStatus);\r\n      const establishment_approver_status = response.data.establishments.map(obj => obj.approverStatus);\r\n      const userReviewStatus = establishment_reviewer.map((reviewers, index) => {\r\n        const userIndex = reviewers.indexOf(user?.user?.id.toString());\r\n        return userIndex !== -1 ? establishment_reviewer_status[index][userIndex] : null;\r\n      });\r\n      \r\n      const userApproverStatus = establishment_approver.map((approvers, index) => {\r\n        const userIndex = approvers.indexOf(user?.user?.id.toString());\r\n        return userIndex !== -1 ? establishment_approver_status[index][userIndex] : null;\r\n      });\r\n      // Count the number of 1s in userReviewStatus\r\n      const reviewCount_1 = userReviewStatus.reduce((count, status) => count + (status === '1' ? 1 : 0), 0);\r\n      const reviewCount_0 = userReviewStatus.reduce((count, status) => count + (status === '0' ? 1 : 0), 0);\r\n\r\n      // Count the number of 1s in userApproverStatus\r\n      const approverCount_1 = userApproverStatus.reduce((count, status) => count + (status === '1' ? 1 : 0), 0);\r\n      const approverCount_0 = userApproverStatus.reduce((count, status) => count + (status === '0' ? 1 : 0), 0);\r\n\r\n      console.log(\"Review Count:\", reviewCount_0,reviewCount_1);\r\n      console.log(\"Approver Count:\", approverCount_0,approverCount_1);\r\n\r\n      setReviewApproveCount([reviewCount_0,approverCount_0,reviewCount_1,approverCount_1])\r\n\r\n      setReviewCount_0(reviewCount_0)\r\n      setReviewCount_1(reviewCount_1)\r\n      setApproverCount_0(approverCount_0)\r\n      setApproverCount_1(approverCount_1)\r\n\r\n\r\n      // console.log(establishment_approver,establishment_reviewer,\"id\");\r\n      // console.log(establishment_approver_status,establishment_reviewer_status,\"status\");\r\n      setDepartments(departments)\r\n      setDepartmentsMembers(departmentMember)\r\n      const completedCounts = [];\r\n      const inHouseCounts = [];\r\n\r\n      const remainingCounts = [];\r\n\r\n    for (const documents of response.data.documents) {\r\n      let completedCount = 0;\r\n      let inHouseCount = 0;\r\n\r\n      let remainingCount = 0;\r\n\r\n      for (const statusArray of documents.map(doc => doc.status)) {\r\n        console.log(statusArray,\"array\");\r\n          // if (statusArray === \"Completed\") {\r\n          //   completedCount++;\r\n          // } \r\n          \r\n          // else {\r\n          //   remainingCount++;\r\n          // }\r\n          switch (statusArray) {\r\n            case \"Completed\":\r\n              completedCount++;\r\n              break;\r\n            case \"Approved(in-house)\":\r\n              inHouseCount++;\r\n              break;\r\n            default:\r\n              remainingCount++;\r\n              break;\r\n          }\r\n        }\r\n\r\n      completedCounts.push(completedCount);\r\n      inHouseCounts.push(inHouseCount);\r\n\r\n      remainingCounts.push(remainingCount);\r\n    }\r\n\r\n    console.log(\"Completed Counts:\", completedCounts);\r\n    console.log(\"Remaining Counts:\", remainingCounts);\r\n      setCompleted(completedCounts)\r\n      setInHouse(inHouseCounts)\r\n      setRemaining(remainingCounts)\r\n\r\n      setProjectTitles(titlesArray)\r\n\r\n     } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n \r\n  useEffect(()=>{\r\n    fetchData()\r\n  },[])\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n      {/* <Card title={`Hello! ${user.user.firstName} ${user.user.lastName}`} style={{fontSize:\"32px\" ,fontWeight:\"bolder\", width: '100%', margin: '0 auto',alignItems:\"center\",textAlign:\"center\" }}>\r\n  <Breadcrumb>\r\n    <Breadcrumb.Item>Main</Breadcrumb.Item>\r\n    <Breadcrumb.Item>Widgets</Breadcrumb.Item>\r\n    <Breadcrumb.Item>Charts</Breadcrumb.Item>\r\n  </Breadcrumb> \r\n   Add additional content here if needed\r\n</Card> */}\r\n\r\n      </Col>\r\n      {user && user?.user.roleId === 1 &&(\r\n  <Col xl={12} lg={24}>\r\n    <DonutChart projects={data.projects} projectCount={data.projectCount} projectsStatusCounts={data.projectsStatusCounts}/>\r\n  </Col>\r\n)}\r\n\r\n{user && user?.user.roleId === 1 && (\r\n  <Col xl={12} lg={24}>\r\n    <DonutChart projects={data.mdrs} projectCount={data.mdrCount} projectsStatusCounts={data.mdrsStatusCounts}/>\r\n  </Col>\r\n)}\r\n\r\n{user && user?.user.roleId === 1 &&(\r\n  <Col span={24}>\r\n    <ColumnChart inputData={data.projects} documents={data.documents} completed={completed} remaining={remaining} />\r\n  </Col>\r\n)}\r\n\r\n{(user && user?.user.roleId === 1)|(user && user?.user.roleId === 2) &&(\r\n  <Col xl={12} lg={24}>\r\n    <RadialbarChart inputData={reviewApproveCount}/>\r\n  </Col>\r\n)}\r\n\r\n{(user && user?.user.roleId === 1 )&& (\r\n  <Col xl={12} lg={24}>\r\n    <BarChart departments={departments} departmentsMembers={departmentsMembers}/>\r\n  </Col>\r\n)}\r\n\r\n      <Col span={24}>\r\n        <LineChart />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <AreaChart />\r\n      </Col> \r\n\r\n      {/* <Col span={24}>\r\n        <ScatterChart />\r\n      </Col>  */}\r\n\r\n      {/* <Col xl={12} lg={24}>\r\n        <HeatmapChart />\r\n      </Col> */}\r\n      \r\n      {/* <Col xl={12} lg={24}>\r\n        <RadarChart />\r\n      </Col>\r\n      \r\n      <Col xl={12} lg={24}>\r\n        <CandlestickChart />\r\n      </Col> */}\r\n    </Row>\r\n  );\r\n}\r\n"],"names":["AreaChart","data","useState","series","name","options","chart","fontFamily","type","toolbar","show","zoom","enabled","labels","style","fontSize","dataLabels","grid","borderColor","row","opacity","fill","stroke","width","curve","colors","xaxis","axisTicks","borderType","color","height","offsetX","offsetY","categories","legend","horizontalAlign","position","markers","radius","yaxis","formatter","value","min","max","tickAmount","_jsx","Card","className","children","_jsxs","Row","Col","span","justify","align","DatePicker","onChange","date","dateString","console","log","picker","defaultValue","moment","id","Chart","DonutChart","_ref","projects","projectCount","projectsStatusCounts","statusCounts","setStatusCounts","progress","setProgress","useEffect","length","initializedCount","completedCount","ongoingCount","forEach","project","status","projectId","Menu","Item","dropShadow","top","left","blur","plotOptions","pie","donut","size","val","concat","total","label","w","globals","seriesTotals","reduce","a","b","itemMargin","horizontal","vertical","LineChart","strokeWidth","hover","sizeOffset","tickPlacement","ColumnChart","inputData","documents","completed","remaining","informtion","setInformation","documentss","setDocuments","remain","setRemaining","complete","setCompleted","inHouse","setInHouse","sendToClient","setSendToClient","filteredData","setFilteredData","titlesArray","map","obj","title","completedCounts","inHouseCounts","remainingCounts","sendToClinetCounts","document","remainingCount","inHouseCount","sendToClinetCount","statusArray","doc","push","update","filtered","bar","borderRadius","columnWidth","endingShape","backgroundBarColors","subArray","filter","item","startedDate","substring","filterDataByYear","BarChart","departments","departmentsMembers","RadialbarChart","acc","menu","lineCap","radialBar","hollow","track","margin","Dropdown","overlay","trigger","RiMoreFill","onClick","e","preventDefault","Charts","user","setUser","JSON","parse","localStorage","getItem","setData","setDepartments","setDepartmentsMembers","projectsTitles","setProjectTitles","departmentUsers","setDepartmentUsers","reviewCount_00","setReviewCount_0","reviewCount_01","setReviewCount_1","approverCount_00","setApproverCount_0","approverCount_01","setApproverCount_1","reviewApproveCount","setReviewApproveCount","async","req","res","_user$user","response","axios","companyId","headers","Authorization","accessToken","departmentMember","noOfUsers","establishment_reviewer","establishments","reviewerId","establishment_approver","approverId","establishment_reviewer_status","reviewerStatus","establishment_approver_status","approverStatus","userReviewStatus","reviewers","index","_user$user2","userIndex","indexOf","toString","userApproverStatus","approvers","_user$user3","reviewCount_1","count","reviewCount_0","approverCount_1","approverCount_0","error","fetchData","gutter","roleId","xl","lg","mdrs","mdrCount","mdrsStatusCounts"],"sourceRoot":""}