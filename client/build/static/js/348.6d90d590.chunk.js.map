{"version":3,"file":"static/js/348.6d90d590.chunk.js","mappings":"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","sources":["view/pages/Protected.jsx","view/pages/mdr/index.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst ProtectedAppPage = () => {\r\n  const isLogIn = localStorage?.getItem(\"user\");\r\n  console.log(isLogIn, \"loggin\");\r\n  if (!isLogIn) {\r\n    return <Redirect to=\"/pages/authentication/login\" />;\r\n  }\r\n\r\n  return null;\r\n};\r\nexport default ProtectedAppPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useHistory } from 'react-router-dom'; \r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Space,\r\n  Table,\r\n  Select,\r\n  Tag,\r\n  Input,\r\n  DatePicker,\r\n  TimePicker,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Upload,\r\n  Checkbox\r\n} from \"antd\";\r\nimport { Radio } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { RiCloseFill, RiCalendarLine } from \"react-icons/ri\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ProtectedAppPage from \"../Protected\";\r\nconst uploadProps = {\r\n  name: \"file\",\r\n  action: \"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\",\r\n  headers: {\r\n    authorization: \"authorization-text\",\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nexport default function MDR() {\r\n  const [documentModalVisible, setDocumentModalVisible] = useState(false);\r\n  const [assignModalVisible, setAssignModalVisible] = useState(false);\r\n  const [createModalVisible, setCreateModalVisible] = useState(false);\r\n  const [showModalVisible, setShowModalVisible] = useState(false);\r\n\r\n\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [projectId, setProjectId] = useState(\"\");\r\n  const [departmentId, setDepartmentId] = useState(\"\");\r\n  const [mdrCode, setMdrCode] = useState(\"\");\r\n  const [noOfDocuments, setNoOfDocuments] = useState(\"\");\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [projectOptions, setProjects] = useState([]);\r\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n  const [data, setData] = useState([]);\r\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\r\n  const [selectedReviewer, setSelectedReviewer] = useState([]);\r\n  const [docData, setDocData] = useState([]);\r\n\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [selectedApprover, setSelectedApprover] = useState([]);\r\n  const[allUsers,setAllUsers] = useState([])\r\n  const [mdrTemplateVisible, setMdrTemplateVisible] = useState(false);\r\n  const [departmentOptions,setDepartmentOptions] = useState([])\r\n\r\n  const [departmentOption,setDepartmentOption] = useState([])\r\n  const [userOptions, setUserData] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [userOption, setUserDatalist] = useState([]);\r\n  const [record,setRecord] = useState()\r\n  const [projectCode,setProjectCode] = useState()\r\n  \r\n\r\n  const showMdrTemplate = () => {\r\n    setMdrTemplateVisible(true);\r\n  };\r\n\r\n  const hideMdrTemplate = () => {\r\n    setMdrTemplateVisible(false);\r\n  };\r\n\r\n  const serializedDepartmentOption = JSON.stringify(departmentOption);\r\n  console.log(\"serialized\",serializedDepartmentOption)\r\n\r\n  const history = useHistory();\r\n  const navigateToMdrTemplate = () => {\r\n    const project = projectOptions.find((item) => item?.value == projectId);\r\n    console.log('departmentOptions',departmentOptions);\r\n    const serializedDepartmentOptions = JSON.stringify(departmentOptions);\r\n    const serializedDepartmentOption = JSON.stringify(departmentOption);\r\n    console.log(\"serialized\",serializedDepartmentOption)\r\n    const serializedProjectOptions = JSON.stringify(projectOptions);\r\n    const serializedSelectedApprover = JSON.stringify(selectedApprover);\r\n    const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\r\n    history.push(`/pages/initialMDR?projectCode=${project.code}&mdrCode=${mdrCode}\r\n    &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\r\n    &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\r\n    &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}&reviewer=${serializedSelectedReviewer}`)};\r\n\r\n\r\n \r\n  const navigate = () => {\r\n    const project = record.projectId;\r\n    const serializedDepartmentOptions = JSON.stringify(departmentOptions);\r\n    const serializedDepartmentOption = JSON.stringify(departmentOption);\r\n    const serializedProjectOptions = JSON.stringify(projectOptions);\r\n    const serializedSelectedApprover = JSON.stringify(selectedApprover);\r\n    const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\r\n\r\n    history.push(`/pages/initialMDR?projectCode=${record.projectCode}&mdrCode=${record.mdrCode}\r\n    &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\r\n    &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\r\n    &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}&reviewer=${serializedSelectedReviewer}`)};\r\n    \r\n  const documentModalShow = () => {\r\n    setDocumentModalVisible(true);\r\n    // setProjectCode(record.projectCode)\r\n\r\n  };\r\n\r\n  const documentModalShowing = (record) => {\r\n    console.log(\"record\",record);\r\n\r\n    setRecord(record);\r\n    setDocumentModalVisible(true);\r\n    // setProjectId()\r\n  };\r\n  const documentModalCancel = () => {\r\n    setTitle(\"\");\r\n    setProjectId(\"\");\r\n    setDepartmentId(\"\");\r\n    setDocumentModalVisible(false);\r\n  };\r\n\r\n\r\n  const assignModalShow = () => {\r\n    setAssignModalVisible(true);\r\n  };\r\n\r\n  const assignModalCancel = () => {\r\n    setAssignModalVisible(false);\r\n  };\r\nlet count=0;\r\n  const createModalShow = (record) => {\r\n    console.log(\"record\",record)\r\n    setRecord(record)\r\n    setDocumentModalVisible(true);\r\n    // setCreateModalVisible(true);\r\n  };\r\n\r\n  const showModalShow = (record) => {\r\n    console.log(record)\r\n    setRecord(record)\r\n    showDocs(record)\r\n    setShowModalVisible(true);\r\n  };\r\n\r\n  const showModalCancel = () => {\r\n    setShowModalVisible(false);\r\n  };\r\n  const createModalCancel = () => {\r\n    setCreateModalVisible(false);\r\n  };\r\nconst showDocs = async(record)=>{\r\n  console.log(\"record\",record);\r\n\r\n  fetchDepartmentDocs(record)\r\n\r\n\r\n}\r\nconst convertToCSV = (data) => {\r\n  const csvRows = [];\r\n  \r\n  const headers = Object.keys(data[0]);\r\n  csvRows.push(headers.join(','));\r\n\r\n  data.forEach((object) => {\r\n    const values = headers.map(header => {\r\n      const needsQuotes = typeof object[header] === 'string' && object[header].includes(',');\r\n      if (needsQuotes) {\r\n        return `\"${object[header].replace(/\"/g, '\"\"')}\"`;\r\n      }\r\n      return object[header];\r\n    });\r\n    csvRows.push(values.join(','));\r\n  });\r\n\r\n  return csvRows.join('\\n');\r\n};\r\n\r\nconst handleExport = async (record) => {\r\n  await fetchDepartmentDocs(record);\r\n  console.log(count,'counttt');\r\n  if (docData.length > 0) {\r\n    const csvData = convertToCSV(docData);\r\n    const blob = new Blob([csvData], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', `MDR ${docData[0].masterDocumentId}.csv`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n};\r\n\r\nconst fetchDepartmentDocs = async (record) => {\r\n  try {\r\n    console.log('recorddd',record);\r\n    const response = await axios.get(\r\n      `http://127.0.0.1:8083/api/documents?masterDocumentId=${record.mdrCode}&projectId=${record.projectId}&companyId=${record.companyId}`,\r\n      {\r\n        headers: {\r\n          Authorization: user?.accessToken,\r\n          // Add other headers if needed\r\n        },\r\n      }\r\n    );\r\n      setDocData(response.data);\r\n      console.log(docData,'hiiiiiiiii');\r\n    console.log(response.data,\"received\");\r\n    // Check if response.data is an array before including it in the setData call\r\n    // const newData = Array.isArray(response.data) ? response.data : [];\r\n    // setData([...newData]);\r\n  } catch (error) {\r\n    console.error(\"Error fetching documents:\", error?.message);\r\n  }\r\n};\r\nuseEffect(() => {\r\n  \r\n}, [docData]);\r\n  const assignMDR = async(assignedEmployees,allUsers)=>{\r\n    try {\r\n      // console.log(allUsers);\r\n      const assignedUser = allUsers.find(user => user.id == assignedEmployees)      \r\n      const project = projectOptions.find((item) => item?.value == projectId);\r\n      const department = departmentOptions.find(\r\n        (item) => item?.value == departmentId\r\n      );\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8083/api/documents/mdr\",\r\n        {\r\n          departmentId:assignedUser.departmentId,\r\n          projectId,\r\n          companyId: assignedUser?.companyId,\r\n          authorId: assignedUser?.id,\r\n          authorName: assignedUser?.firstName,\r\n          mdrCode,\r\n          projectCode: project?.code,\r\n          departmentName: assignedUser.department,\r\n          status:\"Assigned\",\r\n          noOfDocuments:0\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      setAssignModalVisible(false)\r\n      fetchData()\r\n    } catch (error) {\r\n      console.error(\"Error assigning documents:\", error);\r\n    }\r\n  }\r\n  const addDocument = async () => {\r\n    try {\r\n      const project = projectOptions.find((item) => item?.value == projectId);\r\n      const department = departmentOptions.find(\r\n        (item) => item?.value == departmentId\r\n      );\r\n\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8083/api/documents/mdr\",\r\n        {\r\n          title,\r\n          selectedDepartments,\r\n          projectId,\r\n          noOfDocuments,\r\n          companyId: user?.user?.companyId,\r\n          authorId: user?.user?.id,\r\n          authorName: `${user?.user?.firstName} ${user?.user?.lastName}`,\r\n          mdrCode,\r\n          projectCode: project?.code,\r\n          departmentName: department?.label,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      // Handle the response as needed\r\n      console.log(response);\r\n      message.success(response?.data?.message);\r\n      fetchData();\r\n      documentModalCancel();\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error(\"Error adding documents:\", error);\r\n    }\r\n  };\r\n  const exportCSV = async (record) => {\r\n    try {\r\n      console.log(record);\r\n      const response = await axios.post(\r\n        `http://127.0.0.1:8083/api/documents/export/${record?.id}?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n\r\n      message.success(response?.data?.message);\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  const mdr = async() =>{\r\n    console.log(record)\r\n      try {\r\n        // console.log(allUsers);\r\n        const projectId = record.projectId\r\n        const projectCode = record.projectCode\r\n        console.log(projectId,projectCode);\r\n        const response = await axios.put(\r\n          `http://127.0.0.1:8083/api/documents/mdr?projectId=${projectId}&projectCode=${projectCode}`,\r\n          {\r\n                title,\r\n                mdrCode,\r\n                status:\"Ongoing\"\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: user?.accessToken,\r\n              // Add other headers if needed\r\n            },\r\n          }\r\n        );\r\n        setCreateModalVisible(false)\r\n        fetchData()\r\n      } catch (error) {\r\n        console.error(\"Error Updating MDR:\", error);\r\n      }\r\n  }\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8083/api/documents/mdr?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log('mdr data',response.data);\r\n      setProjectCode(response.data.projectCode)\r\n      if (user?.user?.roleId===3 || user?.user?.roleId ===4) {\r\n        const data = response.data.filter(item => item.authorId === user?.user?.id);\r\n        console.log(\"data\",data);\r\n        setData(data);\r\n      }else if(user?.user?.roleId ===2){\r\n        const data = response.data.filter(item => item.authorId === user?.user?.id);\r\n        setData(data);\r\n      }\r\n      else{\r\n        setData(response.data)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8083/api/departments?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      const options = [];\r\n      const option = [];\r\n      for (const item of response?.data) {\r\n        options.push({ value: item?.id, label: item?.title });\r\n        option.push({ value: item?.suffix, label: item?.title });\r\n\r\n      }\r\n      console.log(\"option\",option);\r\n      console.log(\"options\",options);\r\n\r\n      setDepartmentOptions(options); \r\n      setDepartmentOption(option); \r\n      console.log(\"option\",option);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8083/api/projects?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n  \r\n      // Use Set to store unique titles\r\n      const uniqueTitlesSet = new Set();\r\n  \r\n      const options = response?.data.reduce((acc, item) => {\r\n        // Check if the title is not in the Set\r\n        if (!uniqueTitlesSet.has(item.title)) {\r\n          // Add title to the Set\r\n          uniqueTitlesSet.add(item.title);\r\n  \r\n          // Push the option to the result array\r\n          acc.push({ value: item.id, label: item.title, code: item.code });\r\n        }\r\n  \r\n        return acc;\r\n      }, []);\r\n  \r\n      console.log(response.data);\r\n      setProjects(options); // Assuming the response.data is an array of projects\r\n      console.log(projectOptions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8083/api/users?companyId=${user?.user?.companyId}&roleId=2`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      setAllUsers(response.data)\r\n      console.log(response?.data, \"Users\");\r\n      const options = [];\r\n      const option = [];\r\n\r\n      for (const item of response?.data) {\r\n        var role='Engineer'\r\n        if(item.roleId==1){\r\n           role ='CEO'\r\n\r\n           options.push({\r\n            value: {id:item?.id,name:item.firstName,departmentId:item?.departmentId,department:item.department},\r\n            label: `${item?.firstName} ${role} `,\r\n          });\r\n        \r\n        } if(item.roleId==2){\r\n          role =`HEAD of ${item.department}`\r\n          options.push({\r\n            value: {id:item?.id,name:item.firstName},\r\n            label: `${item?.firstName} ${role} `,\r\n          });\r\n          option.push({\r\n            value:item?.id,\r\n            label: `${item?.firstName} ${role} `,\r\n          });\r\n       }\r\n       if(item.roleId==3){\r\n        role =`Senior Engineer ${item.department}`\r\n        options.push({\r\n          value: {id:item?.id,name:item.firstName},\r\n          label: `${item?.firstName} ${role} `,\r\n        });\r\n        option.push({\r\n          value:item?.id,\r\n          label: `${item?.firstName} ${role} `,\r\n        });\r\n     } if(item.roleId==4){\r\n       role ='Junior'\r\n    }\r\n    if(item.roleId==5){\r\n      role ='Designer/Draughtsmen'\r\n   } \r\n\r\n      }\r\n      const filteredArray = options.filter(item => item.roleId !== 1);\r\n\r\n      setFilteredUsers(filteredArray)\r\n\r\n      setUserData(options);\r\n      setUserDatalist(option);\r\n\r\n      console.log('my options',options);\r\n\r\n      console.log('my users',userOptions);\r\n       // Assuming the response.data is an array of DocumentPermissions\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n  // const handleCheckboxChange = (checkedValues) => {\r\n  //   // Concatenate all selected checkboxes into an array\r\n  //   const concatenatedString = checkedValues.join(' ')\r\n  //   setSelectedDepartments(concatenatedString);\r\n  //   console.log(selectedDepartments);\r\n  // };\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage?.getItem(\"user\")));\r\n    // Fetch data when the component mounts\r\n    fetchDepartments();\r\n    fetchProjects();\r\n    fetchUsers();\r\n    fetchData();\r\n    console.log(data);\r\n    // console.log(user);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Upload Document\"\r\n        width={400}\r\n        centered\r\n        visible={documentModalVisible}\r\n        onCancel={documentModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Row justify=\"space-between\" align=\"center\">\r\n          <Col span={20}>\r\n            <Form layout=\"vertical\" name=\"basic\">\r\n              <Form.Item\r\n                label=\"MDR Title\"\r\n                name=\"docTitle\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your title\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"MDR Code\"\r\n                name=\"docCode\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your code\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  value={title}\r\n                  onChange={(e) => setMdrCode(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n        label=\"Departments\"\r\n        name=\"departmentIds\"\r\n        rules={[{ required: true, message: 'Please select at least one department' }]}\r\n      >\r\n        <Checkbox.Group options={departmentOptions} value={selectedDepartments} onChange={setSelectedDepartments} />\r\n      </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Project Name\"\r\n                name=\"projectName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Project Name\",\r\n                  },\r\n                ]}\r\n              >\r\n <Select\r\n                  options={projectOptions}\r\n                  value={projectId}\r\n                  onChange={(value) => setProjectId(value)}\r\n                />              </Form.Item>\r\n              <Form.Item\r\n                label=\"Add Reviewers\"\r\n                name=\"reviewers\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Reviewers Name\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Checkbox.Group options={userOptions} value={selectedReviewer} onChange={setSelectedReviewer} />\r\n\r\n              </Form.Item> <Form.Item\r\n                label=\"Add Approvers\"\r\n                name=\"approvers\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Approvers Name\",\r\n                  },\r\n                ]}\r\n              >\r\n               <Checkbox.Group options={userOptions} value={selectedApprover} onChange={setSelectedApprover} />\r\n              </Form.Item>\r\n              <Row>           \r\n              <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n                  <Button block onClick={navigateToMdrTemplate} type=\"primary\"htmlType=\"submit\">MDR template</Button>\r\n                </Col>\r\n                <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n                  <Button block onClick={navigateToMdrTemplate} type=\"primary\"htmlType=\"submit\">Create Custom</Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"Assign Document\"\r\n        width={400}\r\n        centered\r\n        visible={assignModalVisible}\r\n        onCancel={assignModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Row justify=\"space-between\" align=\"center\">\r\n          <Col span={20}>\r\n            <Form layout=\"vertical\" name=\"basic\">\r\n              <Form.Item\r\n                label=\"Project Name\"\r\n                name=\"projectName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select Project Name\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Select\r\n                  options={projectOptions}\r\n                  value={projectId}\r\n                  onChange={(value) => setProjectId(value)}\r\n                />\r\n                </Form.Item>\r\n                <Form.Item\r\n                label=\"Assigned MDR to\"\r\n                name=\"assignMDR\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please Assign MDR\",\r\n                  },\r\n                ]}\r\n              >\r\n              <Select\r\n                  options={userOption}\r\n                  value={assignedEmployees}\r\n                  onChange={(value) => setAssignedEmployees(value)}\r\n                />\r\n                </Form.Item>\r\n              <Row>           \r\n              <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n                  <Button block onClick={()=>assignMDR(assignedEmployees,allUsers)} type=\"primary\"htmlType=\"submit\">Assigned</Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"Show MDR Documents \"\r\n        width={400}\r\n        centered\r\n        visible={showModalVisible}\r\n        onCancel={showModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Row justify=\"space-between\" align=\"center\">\r\n          <Col span={20}>\r\n          <div>\r\n          <h3>MDR Documents</h3>\r\n          {/* <ul>\r\n            {selectedRows.map((row, index) => (\r\n              <li key={index}>{row+1}</li>\r\n            ))}\r\n          </ul> */}\r\n    <ul>\r\n      {docData.map((doc,index) => (\r\n        <li key={index}>\r\n          {/* <strong>Category:</strong> {data[index].category} <br /> */}\r\n          {/* <strong>Code:</strong> {data[index].code} <br /> */}\r\n          <strong>Document Title:</strong> {doc.title} <br />\r\n          {/* <strong>Document Number:</strong> {data[index].document} <br /> */}\r\n          {/* Add other properties as needed */}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n        </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={documentModalShow}\r\n          disabled={user?.user?.roleId != 1}\r\n          style={{ marginRight: '10px' }}\r\n        >\r\n          Create MDR Yourself\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={assignModalShow}\r\n          disabled={user?.user?.roleId != 1}\r\n        >\r\n          Assign MDR \r\n        </Button>\r\n\r\n      {mdrTemplateVisible && <MdrTemplate />}\r\n      </div>\r\n      <div style={{ overflowX: \"auto\" }}>\r\n      <Table\r\n        columns={[\r\n          {\r\n            title: \"Document Title\",\r\n            dataIndex: \"title\",\r\n            key: \"title\",\r\n          },\r\n          {\r\n            title: \"Project Code\",\r\n            dataIndex: \"projectCode\",\r\n            key: \"projectCode\",\r\n          },\r\n          {\r\n            title: \"Dept Name\",\r\n            dataIndex: \"departmentName\",\r\n            key: \"departmentName\",\r\n          },\r\n\r\n          {\r\n            title: \"Author Name\",\r\n            dataIndex: \"authorName\",\r\n            key: \"authorName\",\r\n          },\r\n          {\r\n            title: \"No of Documents\",\r\n            dataIndex: \"noOfDocuments\",\r\n            key: \"noOfDocuments\",\r\n          },\r\n          {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            key: \"status\",\r\n          },\r\n          {\r\n            title: \"Action\",\r\n            key: \"action\",\r\n            render: (_, record) => (\r\n              <>\r\n                <Space size=\"middle\">\r\n\r\n                  <Button\r\n                    key={record?.id}\r\n                    onClick={() => handleExport(record)}\r\n                    disabled={user?.user?.roleId != 1}\r\n                  >\r\n                    Export\r\n                  </Button>\r\n                  {user.user.roleId!==1 &&       \r\n                  <>\r\n                  <Button\r\n                    key={record?.id}\r\n                    onClick={() => {createModalShow(record)                      \r\n                    }}\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                  </>\r\n                  }      \r\n                  {user.user.roleId==1 &&       \r\n                  <>\r\n                  <Button\r\n                    key={record?.id}\r\n                    onClick={() => {showModalShow(record)                      \r\n                    }}\r\n                  >\r\n                    Open\r\n                  </Button>\r\n                  </>\r\n                  }       \r\n                </Space>\r\n              </>\r\n            ),\r\n          },\r\n        ]}\r\n        dataSource={data}\r\n      /></div>\r\n      <ProtectedAppPage />\r\n    </>\r\n  );\r\n}"],"names":["ProtectedAppPage","_localStorage","isLogIn","localStorage","getItem","console","log","_jsx","Redirect","to","MDR","_user$user15","_user$user16","documentModalVisible","setDocumentModalVisible","useState","assignModalVisible","setAssignModalVisible","createModalVisible","setCreateModalVisible","showModalVisible","setShowModalVisible","title","setTitle","projectId","setProjectId","departmentId","setDepartmentId","mdrCode","setMdrCode","noOfDocuments","setNoOfDocuments","status","setStatus","projectOptions","setProjects","user","setUser","JSON","parse","data","setData","selectedDepartments","setSelectedDepartments","selectedReviewer","setSelectedReviewer","docData","setDocData","assignedEmployees","setAssignedEmployees","selectedApprover","setSelectedApprover","allUsers","setAllUsers","mdrTemplateVisible","setMdrTemplateVisible","departmentOptions","setDepartmentOptions","departmentOption","setDepartmentOption","userOptions","setUserData","filteredUsers","setFilteredUsers","userOption","setUserDatalist","record","setRecord","projectCode","setProjectCode","serializedDepartmentOption","stringify","history","useHistory","navigateToMdrTemplate","project","find","item","value","serializedDepartmentOptions","serializedProjectOptions","serializedSelectedApprover","serializedSelectedReviewer","push","concat","code","documentModalCancel","showDocs","async","fetchDepartmentDocs","handleExport","length","csvData","csvRows","headers","Object","keys","join","forEach","object","values","map","header","includes","replace","convertToCSV","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","masterDocumentId","body","appendChild","click","removeChild","response","axios","companyId","Authorization","accessToken","error","message","useEffect","fetchData","_user$user6","_user$user7","_user$user8","_user$user10","roleId","filter","_user$user9","authorId","id","_user$user11","_localStorage2","_user$user12","options","option","label","suffix","fetchDepartments","_user$user13","uniqueTitlesSet","Set","reduce","acc","has","add","fetchProjects","_user$user14","role","name","firstName","department","filteredArray","fetchUsers","_jsxs","_Fragment","children","Modal","width","centered","visible","onCancel","footer","closeIcon","RiCloseFill","className","size","Row","justify","align","Col","span","Form","layout","Item","rules","required","Input","onChange","e","target","Checkbox","Group","Select","md","Button","block","onClick","htmlType","assignModalCancel","assignedUser","authorName","departmentName","assignMDR","showModalCancel","doc","index","style","textAlign","marginBottom","documentModalShow","disabled","marginRight","assignModalShow","MdrTemplate","overflowX","Table","columns","dataIndex","key","render","_","_user$user17","Space","createModalShow","showModalShow","dataSource"],"sourceRoot":""}