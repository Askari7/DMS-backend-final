{"version":3,"file":"static/js/2151.2ac3c741.chunk.js","mappings":"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","sources":["view/pages/Protected.jsx","view/pages/mdr/Progress.jsx","view/pages/mdr/index.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nconst ProtectedAppPage = () => {\n  const isLogIn = localStorage?.getItem(\"user\");\n  console.log(isLogIn, \"loggin\");\n  if (!isLogIn) {\n    return <Redirect to=\"/pages/authentication/login\" />;\n  }\n\n  return null;\n};\nexport default ProtectedAppPage;\n","import React from 'react';\nimport { Progress, Row } from 'antd';\n\nconst ProgressComp = ({ percentage }) => {\n  let strokeColor = '#ff0000'; // Default color is red\n  if (percentage > 75) {\n    strokeColor = '#1890ff'; // Blue for percent > 75\n  } else if (percentage > 50) {\n    strokeColor = '#fadb14'; // Yellow for percent > 50\n  }\n\n  return (\n    <Row justify=\"center\" align=\"middle\" style={{ width: 180 }}>\n      <Progress percent={percentage} steps={5} strokeColor={strokeColor} />\n    </Row>\n  );\n};\n\nexport default ProgressComp;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory } from 'react-router-dom'; \nimport { DownOutlined } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Highlighter from 'react-highlight-words';\nimport {\n  Row,\n  Col,\n  Divider,\n  Dropdown,\n  Form,\n  Space,\n  Table,\n  Menu,\n  Select,\n  Tag,\n  Input,\n  DatePicker,\n  TimePicker,\n  Button,\n  Modal,\n  message,\n  Upload,\n  Checkbox,\n  Typography\n} from \"antd\";\nconst { Title, Text } = Typography;\nconst imageUrl = '..//..//..//assets/images/logo/novacon.png'\nimport { Radio } from \"antd\";\nimport axios from \"axios\";\nimport { RiCloseFill, RiCalendarLine } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ProtectedAppPage from \"../Protected\";\nimport { useLocation } from 'react-router-dom';\nimport { string } from \"prop-types\";\nimport ProgressComp from \"./Progress\";\n\n\n\nconst uploadProps = {\n  name: \"file\",\n  action: \"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\",\n  headers: {\n    authorization: \"authorization-text\",\n  },\n  onChange(info) {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\nexport default function MDR() {\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const searchInput = useRef(null);\n\n  const [documentModalVisible, setDocumentModalVisible] = useState(false);\n  const [assignModalVisible, setAssignModalVisible] = useState(false);\n  const [createModalVisible, setCreateModalVisible] = useState(false);\n  const [showModalVisible, setShowModalVisible] = useState(false);\n  const [editModalVisible, setEditModalVisible] = useState(false);\n\n  const [params,setParams] = useState()\n\n\n  const [title, setTitle] = useState(\"\");\n  const [projectId, setProjectId] = useState(\"\");\n  const [departmentId, setDepartmentId] = useState(\"\");\n  const [mdrCode, setMdrCode] = useState(\"\");\n  const [noOfDocuments, setNoOfDocuments] = useState(\"\");\n  const [pro, setPro] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [projectOptions, setProjects] = useState([]);\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\n  const [data, setData] = useState([]);\n  const [dataArray, setDataArray] = useState([]);\n\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [selectedReviewer, setSelectedReviewer] = useState([]);\n  const [docData, setDocData] = useState([]);\n\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\n  const [selectedApprover, setSelectedApprover] = useState([]);\n  const[allUsers,setAllUsers] = useState([])\n  const [mdrTemplateVisible, setMdrTemplateVisible] = useState(false);\n  const [departmentOptions,setDepartmentOptions] = useState([])\n\n  const [departmentOption,setDepartmentOption] = useState([])\n  const [userOptions, setUserData] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [userOption, setUserDatalist] = useState([]);\n  const [record,setRecord] = useState()\n  const [recordMdr,setRecordMdr] = useState()\n\n  const [projectCode,setProjectCode] = useState()\n  const location = useLocation();\n  const { matchingRecord } = location.state || {}\n  // console.log(matchingRecord,\"recordinggggg\");\n  // console.log(location,\"location\");\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const handleAll=()=>{\n    setData(dataArray)\n  }\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={searchInput}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => clearFilters && handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? '#1677ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current?.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{\n            backgroundColor: '#ffc069',\n            padding: 0,\n          }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleCompleted=()=>{\n    const completedData = dataArray.filter(item => item.status === 'completed');\n    setData(completedData)\n  }\n  const handleOnGoing=()=>{\n    const ongoingData = dataArray.filter(item => item.status === 'Ongoing');\n    setData(ongoingData)\n\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item onClick={() => handleAll()}>All</Menu.Item>\n    <Menu.Item onClick={() => handleCompleted()}>Completed</Menu.Item>\n    <Menu.Item onClick={() => handleOnGoing()}>Ongoing</Menu.Item>\n  </Menu>\n);\n  const showMdrTemplate = () => {\n    setMdrTemplateVisible(true);\n  };\n\n  const hideMdrTemplate = () => {\n    setMdrTemplateVisible(false);\n  };\n\n  const serializedDepartmentOption = JSON.stringify(departmentOption);\n  // console.log(\"serialized\",serializedDepartmentOption)\n\n  const history = useHistory();\n  const navigateToMdrTemplate = () => {\n    const project = projectOptions.find((item) => item?.value == projectId);\n    // console.log('departmentOptions',departmentOptions);\n    const serializedDepartmentOptions = JSON.stringify(departmentOptions);\n    const serializedDepartmentOption = JSON.stringify(departmentOption);\n    // console.log(\"serialized\",serializedDepartmentOption)\n    const serializedProjectOptions = JSON.stringify(projectOptions);\n    const serializedSelectedApprover = JSON.stringify(selectedApprover);\n    const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\n    history.push(`/pages/initialMDR?projectCode=${project.code}&mdrCode=${mdrCode}\n    &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\n    &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\n    &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}&reviewer=${serializedSelectedReviewer}`)};\n    \n    const navigateToMdrTemplateForUpdate = () => {\n      const project = projectOptions.find((item) => item?.value == projectId);\n      // console.log('departmentOptions',departmentOptions);\n      const serializedDepartmentOptions = JSON.stringify(departmentOptions);\n      const serializedDepartmentOption = JSON.stringify(departmentOption);\n      const serializedRecord = JSON.stringify(record);\n      // console.log(serializedRecord,\"serializedRecord\");\n      // console.log(\"serialized\",serializedDepartmentOption)\n      const serializedProjectOptions = JSON.stringify(projectOptions);\n      const serializedSelectedApprover = JSON.stringify(selectedApprover);\n      const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\n      history.push(`/pages/initialMDR?projectCode=${project.code}&mdrCode=${mdrCode}\n      &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\n      &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\n      &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}\n      &reviewer=${serializedSelectedReviewer}&record=${serializedRecord}`)};\n  \n\n    const navigate = () => {\n    const project = record.projectId;\n    const serializedDepartmentOptions = JSON.stringify(departmentOptions);\n    const serializedDepartmentOption = JSON.stringify(departmentOption);\n    const serializedProjectOptions = JSON.stringify(projectOptions);\n    const serializedSelectedApprover = JSON.stringify(selectedApprover);\n    const serializedSelectedReviewer = JSON.stringify(selectedReviewer);\n\n    history.push(`/pages/initialMDR?projectCode=${record.projectCode}&mdrCode=${record.mdrCode}\n    &departmentOption=${serializedDepartmentOption}&departmentOptions=${serializedDepartmentOptions}\n    &projectOptions=${serializedProjectOptions}&projectId=${projectId}&projectCode=${projectCode}\n    &departmentId=${selectedDepartments}&title=${title}&approver=${serializedSelectedApprover}&reviewer=${serializedSelectedReviewer}`)};\n    \n  const documentModalShow = () => {\n    setDocumentModalVisible(true);\n  };\n\n  const documentModalShowing = (record) => {\n    // console.log(\"record\",record);\n    setRecord(record);\n    setDocumentModalVisible(true);\n  };\n  const documentModalCancel = () => {\n    setTitle(\"\");\n    setProjectId(\"\");\n    setDepartmentId(\"\");\n    setDocumentModalVisible(false);\n  };\n\n\n  const assignModalShow = () => {\n    setAssignModalVisible(true);\n  };\n\n  const assignModalCancel = () => {\n    setAssignModalVisible(false);\n  };\nlet count=0;\n  const createModalShow = (record) => {\n     console.log(\"record\",record)\n    setRecord(record)\n    setDocumentModalVisible(true);\n  };\n\n  const showModalShow = (record) => {\n     console.log('record',record)\n    setRecord(record)\n    showDocs(record)\n    setShowModalVisible(true);\n  };\n\n  const editModalShow = (record) => {\n    console.log(recordMdr,\"record1\");\n    setRecordMdr(record)\n    setEditModalVisible(true);\n    console.log(recordMdr,\"record2\");\n\n  };\n\n  const editModalCancel = () => {\n\n    setEditModalVisible(false);\n  };\n  const showModalCancel = () => {\n    setShowModalVisible(false);\n  };\n  const createModalCancel = () => {\n    setCreateModalVisible(false);\n  };\nconst showDocs = async(record)=>{\n  // console.log(\"record\",record);\n\n  fetchDepartmentDocs(record)\n}\n\n\n\n// const convertToCSV = (data) => {\n//   // console.log('data',data);\n//   const csvRows = [];\n//   data.forEach((obj) => {\n//     const key = Object.keys(obj)[0]; // Extract the key\n//     // console.log(\"key\",key);\n//     const documents = obj[key]; // Extract the array of documents\n//     // console.log(\"objKeys\",documents);\n\n//     csvRows.push(`Key,${key}`);\n    \n//     const headers = Object.keys(documents[0]);\n//     csvRows.push(`\"${headers.join('\",\"')}\"`);\n\n//     documents.forEach((document) => {\n//       const values = headers.map((header) => {\n//         const cellValue = document[header];\n//         return Array.isArray(cellValue) ? `\"${cellValue.join(',')}\"` : `\"${cellValue}\"`;\n//       });\n//       csvRows.push(values.join(','));\n//     });\n\n//     csvRows.push('');\n//   });\n\n//   return csvRows.join('\\n');\n// };\n\n\n\n// const handleExport = async (record) => {\n//   await fetchDepartmentDocs(record);\n\n//   if (docData.length > 0) {\n//     // console.log(docData,\"docData\");\n//     const csvData = convertToCSV(docData);\n\n//     // console.log(csvData,\"data for csv\");\n//     const blob = new Blob([csvData], { type: 'text/csv' });\n//     const url = window.URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.href = url;\n//     link.setAttribute('download', `MDR ${docData[0].masterDocumentId}.csv`);\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   }\n// };\n\n\nconst convertToCSV = (data, imageUrl) => {\n  const csvRows = [];\n\n  // Add image URL as the first row\n  csvRows.push(`Image,${imageUrl}`);\n\n  data.forEach((obj) => {\n    const key = Object.keys(obj)[0];\n    const documents = obj[key];\n\n    csvRows.push(`Key,${key}`);\n\n    const headers = Object.keys(documents[0]);\n    csvRows.push(`\"${headers.join('\",\"')}\"`);\n\n    documents.forEach((document) => {\n      const values = headers.map((header) => {\n        const cellValue = document[header];\n        return Array.isArray(cellValue) ? `\"${cellValue.join(',')}\"` : `\"${cellValue}\"`;\n      });\n      csvRows.push(values.join(','));\n    });\n\n    csvRows.push('');\n  });\n\n  return csvRows.join('\\n');\n};\n\n// const handleExport = async (record, imageUrl) => {\n//   await fetchDepartmentDocs(record);\n\n//   if (docData.length > 0) {\n//     const csvData = convertToCSV(docData, imageUrl);\n\n//     const blob = new Blob([csvData], { type: 'text/csv' });\n//     const url = window.URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.href = url;\n//     link.setAttribute('download', `MDR ${docData[0].masterDocumentId}.csv`);\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   }\n// };\n\nconst generateHTML = (data, logoBase64) => {\n  const csvContent = convertToCSV(data,logoBase64);\n\n  // Construct HTML content\n  const htmlContent = `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>CSV Export</title>\n    </head>\n    <body>\n      <img src=\"${logoBase64}\" alt=\"Logo\">\n      <h1>CSV Data</h1>\n      <pre>${csvContent}</pre>\n    </body>\n    </html>\n  `;\n\n  return htmlContent;\n};\nconst getImageBase64FromUrl = async (url) => {\n  try {\n    // Fetch the image as a Blob\n    const response = await fetch(url);\n    const blob = await response.blob();\n\n    // Convert the Blob to base64\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onloadend = () => {\n        const base64String = reader.result.split(',')[1];\n        resolve(base64String);\n      };\n      reader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  } catch (error) {\n    console.error('Error fetching or converting image:', error);\n    return null;\n  }\n};\n\nconst handleExport = async (record, imageUrl) => {\n  await fetchDepartmentDocs(record);\n  const logoBase = await getImageBase64FromUrl(imageUrl); // Added 'await' here\n  if (docData.length > 0) {\n    const htmlContent = generateHTML(docData, logoBase);\n\n    // Create a Blob from the HTML content\n    const blob = new Blob([htmlContent], { type: 'text/html' });\n\n    // Create a URL for the Blob\n    const url = window.URL.createObjectURL(blob);\n\n    // Create a link element and trigger download\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `MDR ${docData[0].masterDocumentId}.html`);\n    document.body.appendChild(link);\n    link.click();\n\n    // Cleanup\n    document.body.removeChild(link);\n  }\n};\n\n\nconst fetchDepartmentDocs = async (record) => {\n  try {\n    // console.log('recorddd',record);\n    const response = await axios.get(\n      `http://54.81.250.98:8083/api/documents?masterDocumentId=${record.mdrCode}&projectId=${record.projectId}&companyId=${record.companyId}`,\n      {\n        headers: {\n          Authorization: user?.accessToken,\n          // Add other headers if needed\n        },\n      }\n    );\n//     const organizedData = {};\n\n// response.data.forEach(item => {\n//   const key = item.title.split('-')[2]; // Extract the third part of the title (e.g., 'PM')\n  \n//   if (!organizedData[key]) {\n//     organizedData[key] = [];\n//   }\n  \n//   organizedData[key].push(item.docTitle);\n// });\n\n// const resultArray = Object.keys(organizedData).map(key => ({ [key]: organizedData[key] }));\n\n// console.log(resultArray,\"result\");\nconsole.log(\"response\",response.data);\nconst fieldsToRemove = ['version', 'companyId','departmentId','projectId','masterDocumentId','masterDocumentName','content','extension','fileName'];\nconst modified = response.data.map((obj) => {\n  const { version, companyId, departmentId, projectId, masterDocumentId, masterDocumentName, content, extension, fileName, ...newObj } = obj;\n  return newObj;\n});\n\nconst modifiedData = {};\n\n// Iterate through the data\nmodified.forEach(item => {\n  // Extract the key (third part of the title)\n  const key = item.title.split('-')[2];\n  \n  // If the key doesn't exist in modifiedData, create an array for it\n  if (!modifiedData[key]) {\n    modifiedData[key] = [];\n  }\n  \n  // Add the current item to the array of the corresponding key\n  modifiedData[key].push(item);\n});\n\n// Convert the modifiedData object to an array of objects\nconst result = Object.keys(modifiedData).map(key => ({ [key]: modifiedData[key] }));\n\n// console.log(result);\n\n\n    // console.log(response.data,\"received\");\n    // setDocData(response.data);\n    setDocData(result)\n    // console.log(docData,'hiiiiiiiii');/\n\n  } catch (error) {\n    console.error(\"Error fetching documents:\", error?.message);\n  }\n};\nuseEffect(() => {\n}, [docData]);\n  const assignMDR = async(assignedEmployees,allUsers)=>{\n    try {\n      // console.log(allUsers);\n      const assignedUser = allUsers.find(user => user.id == assignedEmployees)      \n      const project = projectOptions.find((item) => item?.value == projectId);\n      const department = departmentOptions.find(\n        (item) => item?.value == departmentId\n      );\n      const response = await axios.post(\n        \"http://54.81.250.98:8083/api/documents/mdr\",\n        {\n          departmentId:assignedUser.departmentId,\n          projectId,\n          companyId: assignedUser?.companyId,\n          authorId: assignedUser?.id,\n          authorName: assignedUser?.firstName,\n          mdrCode,\n          projectCode: project?.code,\n          departmentName: assignedUser.department,\n          status:\"Assigned\",\n          noOfDocuments:0\n        },\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n      setAssignModalVisible(false)\n      fetchData()\n    } catch (error) {\n      console.error(\"Error assigning documents:\", error);\n    }\n  }\n  const handleEdit = async()=>{\n    try {\n      console.log(recordMdr,\"recordMdr\");\n    } catch (error) {\n      \n    }\n  }\n  const addDocument = async () => {\n    try {\n      const project = projectOptions.find((item) => item?.value == projectId);\n      const department = departmentOptions.find(\n        (item) => item?.value == departmentId\n      );\n\n      const response = await axios.post(\n        \"http://54.81.250.98:8083/api/documents/mdr\",\n        {\n          title,\n          selectedDepartments,\n          projectId,\n          noOfDocuments,\n          companyId: user?.user?.companyId,\n          authorId: user?.user?.id,\n          authorName: `${user?.user?.firstName} ${user?.user?.lastName}`,\n          mdrCode,\n          projectCode: project?.code,\n          departmentName: department?.label,\n        },\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n      // Handle the response as needed\n      console.log(response);\n      message.success(response?.data?.message);\n      fetchData();\n      documentModalCancel();\n    } catch (error) {\n      // Handle errors\n      console.error(\"Error adding documents:\", error);\n    }\n  };\n  const exportCSV = async (record) => {\n    try {\n      console.log(record);\n      const response = await axios.post(\n        `http://54.81.250.98:8083/api/documents/export/${record?.id}?companyId=${user?.user?.companyId}`,\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n\n      message.success(response?.data?.message);\n    } catch (error) {\n      console.error(\"Error fetching documents:\", error?.message);\n    }\n  };\n  const mdr = async() =>{\n    console.log(record)\n      try {\n        // console.log(allUsers);\n        const projectId = record.projectId\n        const projectCode = record.projectCode\n        console.log(projectId,projectCode);\n        const response = await axios.put(\n          `http://54.81.250.98:8083/api/documents/mdr?projectId=${projectId}&projectCode=${projectCode}`,\n          {\n                title,\n                mdrCode,\n                status:\"Ongoing\"\n          },\n          {\n            headers: {\n              Authorization: user?.accessToken,\n              // Add other headers if needed\n            },\n          }\n        );\n        setCreateModalVisible(false)\n        fetchData()\n      } catch (error) {\n        console.error(\"Error Updating MDR:\", error);\n      }\n  }\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\n        `http://54.81.250.98:8083/api/documents/mdr?companyId=${user?.user?.companyId}`,\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n\n      console.log(response.data,\"response aya\");\n      // console.log('mdr data',response.data);\n      setProjectCode(response.data.projectCode)\n      if (user?.user?.roleId===3 || user?.user?.roleId ===4) {\n        const data = response.data.filter(item => item.authorId === user?.user?.id);\n        // console.log(\"data\",data);\n        setData(data);\n        setDataArray(data);\n\n      }else if(user?.user?.roleId ===2){\n        \n        console.log(user?.user?.departmentId,'departmentId')\n        const data = response.data.filter(item => \n          item.departmentId.split(\",\").includes((user?.user?.departmentId))  || item.authorId === user?.user?.id    \n          );       \nconsole.log('dataaaaaa',data);\n        const d =  data.map((d)=>d.projectId)\n\n        setPro(d)\n\n        setData(data);\n        setDataArray(data);\n      }\n      else{\n        setData(response.data)\n        setDataArray(response.data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching documents:\", error?.message);\n    }\n  };\n  \n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get(\n        `http://54.81.250.98:8083/api/departments?companyId=${user?.user?.companyId}`,\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n      const options = [];\n      const option = [];\n      for (const item of response?.data) {\n        options.push({ value: item?.id, label: item?.title });\n        option.push({ value: item?.suffix, label: item?.title });\n\n      }\n\n      setDepartmentOptions(options); \n      setDepartmentOption(option); \n\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error?.message);\n    }\n  };\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(\n        `http://54.81.250.98:8083/api/projects?companyId=${user?.user?.companyId}`,\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n  \n      // Use Set to store unique titles\n      const uniqueTitlesSet = new Set();\n  \n      const options = response?.data.reduce((acc, item) => {\n        // Check if the title is not in the Set\n        if (!uniqueTitlesSet.has(item.title)) {\n          // Add title to the Set\n          uniqueTitlesSet.add(item.title);\n  \n          // Push the option to the result array\n          acc.push({ value: item.id, label: item.title, code: item.code });\n        }\n  \n        return acc;\n      }, []);\n  \n      console.log(response.data);\n      setProjects(options); // Assuming the response.data is an array of projects\n      console.log(projectOptions);\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error?.message);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(\n        `http://54.81.250.98:8083/api/users?companyId=${user?.user?.companyId}&roleId=2`,\n        {\n          headers: {\n            Authorization: user?.accessToken,\n            // Add other headers if needed\n          },\n        }\n      );\n      setAllUsers(response.data)\n      console.log(response?.data, \"Users\");\n      const options = [];\n      const option = [];\n\n      for (const item of response?.data) {\n        var role='Engineer'\n        if(item.roleId==1){\n           role ='CEO'\n\n           options.push({\n            value: {id:item?.id,name:item.firstName,departmentId:item?.departmentId,department:item.department},\n            label: `${item?.firstName} ${role} `,\n          });\n        \n        } if(item.roleId==2){\n          role =`HEAD of ${item.department}`\n          options.push({\n            value: {id:item?.id,name:item.firstName},\n            label: `${item?.firstName} ${role} `,\n          });\n          option.push({\n            value:item?.id,\n            label: `${item?.firstName} ${role} `,\n          });\n       }\n       if(item.roleId==3){\n        role =`Senior Engineer ${item.department}`\n        options.push({\n          value: {id:item?.id,name:item.firstName},\n          label: `${item?.firstName} ${role} `,\n        });\n        option.push({\n          value:item?.id,\n          label: `${item?.firstName} ${role} `,\n        });\n     } if(item.roleId==4){\n       role ='Junior'\n    }\n    if(item.roleId==5){\n      role ='Designer/Draughtsmen'\n   } \n\n      }\n      const filteredArray = options.filter(item => item.roleId !== 1);\n\n      setFilteredUsers(filteredArray)\n\n      setUserData(options);\n      setUserDatalist(option);\n\n      // console.log('my options',options);\n\n      // console.log('my users',userOptions);\n       // Assuming the response.data is an array of DocumentPermissions\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error?.message);\n    }\n  };\n  // const handleCheckboxChange = (checkedValues) => {\n  //   // Concatenate all selected checkboxes into an array\n  //   const concatenatedString = checkedValues.join(' ')\n  //   setSelectedDepartments(concatenatedString);\n  //   console.log(selectedDepartments);\n  // };\n  useEffect(() => {\n    setUser(JSON.parse(localStorage?.getItem(\"user\")));\n    // Fetch data when the component mounts\n    fetchDepartments();\n    fetchProjects();\n    fetchUsers();\n    fetchData();\n    console.log(data);\n    // console.log(user);\n  }, []);\n  return (\n    <>\n      <Modal\n        title=\"Upload Document\"\n        width={400}\n        centered\n        visible={documentModalVisible}\n        onCancel={documentModalCancel}\n        footer={null}\n        closeIcon={\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n        }\n      >\n        <Row justify=\"space-between\" align=\"center\">\n          <Col span={20}>\n            <Form layout=\"vertical\" name=\"basic\">\n              <Form.Item\n                label=\"MDR Title\"\n                name=\"docTitle\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your title\",\n                  },\n                ]}\n              >\n                <Input\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"MDR Code\"\n                name=\"docCode\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your code\",\n                  },\n                ]}\n              >\n                <Input\n                  value={title}\n                  onChange={(e) => setMdrCode(e.target.value)}\n                />\n              </Form.Item>\n\n\n              <Form.Item\n                label=\"Project Name\"\n                name=\"projectName\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please select Project Name\",\n                  },\n                ]}\n              >\n <Select\n                  options={projectOptions}\n                  value={projectId}\n                  onChange={(value) => setProjectId(value)}\n                />              </Form.Item>\n              <Form.Item\n                label=\"Add Reviewers\"\n                name=\"reviewers\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please select Reviewers Name\",\n                  },\n                ]}\n              >\n                <Checkbox.Group options={userOptions} value={selectedReviewer} onChange={setSelectedReviewer} />\n\n              </Form.Item> <Form.Item\n                label=\"Add Approvers\"\n                name=\"approvers\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please select Approvers Name\",\n                  },\n                ]}\n              >\n               <Checkbox.Group options={userOptions} value={selectedApprover} onChange={setSelectedApprover} />\n              </Form.Item>\n              <Row>           \n              <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                  <Button block onClick={record?navigateToMdrTemplateForUpdate:navigateToMdrTemplate} type=\"primary\"htmlType=\"submit\">MDR template</Button>\n                </Col>\n                {/* <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                  <Button block onClick={navigateToMdrTemplate} type=\"primary\"htmlType=\"submit\">Create Custom</Button>\n                </Col> */}\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n      </Modal>\n\n      <Modal\n        title=\"Assign Document\"\n        width={400}\n        centered\n        visible={assignModalVisible}\n        onCancel={assignModalCancel}\n        footer={null}\n        closeIcon={\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n        }\n      >\n        <Row justify=\"space-between\" align=\"center\">\n          <Col span={20}>\n            <Form layout=\"vertical\" name=\"basic\">\n              <Form.Item\n                label=\"Project Name\"\n                name=\"projectName\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please select Project Name\",\n                  },\n                ]}\n              >\n              <Select\n                  options={projectOptions}\n                  value={projectId}\n                  onChange={(value) => setProjectId(value)}\n                />\n                </Form.Item>\n                <Form.Item\n                label=\"Assigned MDR to\"\n                name=\"assignMDR\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please Assign MDR\",\n                  },\n                ]}\n              >\n              <Select\n                  options={userOption}\n                  value={assignedEmployees}\n                  onChange={(value) => setAssignedEmployees(value)}\n                />\n                </Form.Item>\n              <Row>           \n              <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                  <Button block onClick={()=>assignMDR(assignedEmployees,allUsers)} type=\"primary\"htmlType=\"submit\">Assigned</Button>\n                </Col>\n              </Row>\n\n              <Row>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n      </Modal>\n      \n      <Modal\n  title=\"MDR Information\"\n  width={400}\n  centered\n  visible={editModalVisible}\n  onCancel={editModalCancel}\n  footer={null}\n  closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\n>\n\n  {recordMdr ? (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ textAlign: \"left\" }}>\n    <Title level={3}>Title: {recordMdr.title || null}</Title><br />\n      <Text strong>Author Name: </Text>\n      <Text>{recordMdr.authorName || null}</Text><br />\n      <Text strong>Department ID: </Text>\n      <Text>{recordMdr.departmentId || null}</Text><br />\n      <Text strong>Project Code: </Text>\n      <Text>{recordMdr.projectCode || null}</Text><br />\n      <Text strong>MDR Code: </Text>\n      <Text>{recordMdr.mdrCode || null}</Text><br />\n      <Text strong>No of Documents: </Text>\n      <Text>{recordMdr.noOfDocuments || null}</Text><br />\n      <Text strong>Percentage: </Text>\n      <Text>{recordMdr.percentage || null}</Text><br />\n\n      <Text strong>Status: </Text>\n      <Text>{recordMdr.status}</Text><br />\n      <Text strong>Created At: </Text>\n      <Text>{recordMdr.createdAt}</Text>\n      <br /><br />\n      </div>\n      <Button type=\"primary\" style={{ marginTop: \"16px\" }} onClick={handleEdit}>Add More Documents</Button>\n    </div>\n  ) : null}\n</Modal>\n\n\n\n\n      <Modal\n        title=\"Show MDR Documents \"\n        width={400}\n        centered\n        visible={showModalVisible}\n        onCancel={showModalCancel}\n        footer={null}\n        closeIcon={\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n        }\n      >\n        <Row justify=\"space-between\" align=\"center\">\n          <Col span={20}>\n          <div>\n          <h3>MDR Documents</h3>\n          {/* <ul>\n            {selectedRows.map((row, index) => (\n              <li key={index}>{row+1}</li>\n            ))}\n          </ul> */}\n    <ul>\n      {docData.map((doc, index) => (\n        <li key={index}>\n          {Object.entries(doc).map(([key, values]) => (\n            <div key={key}>\n              <strong>{key}:</strong>\n              <ul>\n                {values.map((item, itemIndex) => (\n                  <li key={itemIndex}>\n                    <strong>Document Title:</strong> {item.docTitle} <br />\n                    {/* Add other properties as needed */}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </li>\n      ))}\n    </ul>        </div>\n          </Col>\n        </Row>\n      </Modal>\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" }}>\n        {\n          user?.user.roleId == 1 &&       \n          <Button\n          type=\"primary\"\n          onClick={documentModalShow}\n          // disabled={user?.user?.roleId != 1}\n          style={{ marginRight: '10px' }}\n        >\n          Create MDR Yourself\n        </Button>\n        }\n\n        {\n                    user?.user.roleId == 1 &&   \n                    <Button\n                    type=\"primary\"\n                    onClick={assignModalShow}\n                    // disabled={user?.user?.roleId != 1}\n                  >\n                    Assign MDR \n                  </Button>\n              \n\n        }\n\n      {mdrTemplateVisible && <MdrTemplate />}\n      </div>\n      <div style={{ overflowX: \"auto\" }}>\n      <Table\n        columns={[\n          {\n            title: \"Document Title\",\n            dataIndex: \"title\",\n            key: \"title\",\n            ...getColumnSearchProps('title'),\n\n          },\n          {\n            title: \"Project Code\",\n            dataIndex: \"projectCode\",\n            key: \"projectCode\",\n            ...getColumnSearchProps('projectCode'),\n\n          },\n          {\n            title: \"Dept Name\",\n            dataIndex: \"departmentName\",\n            key: \"departmentName\",\n            ...getColumnSearchProps('departmentName'),\n\n          },\n\n          {\n            title: \"Author Name\",\n            dataIndex: \"authorName\",\n            key: \"authorName\",\n            ...getColumnSearchProps('authorName'),\n\n          },\n          {\n            title: \"No of Documents\",\n            dataIndex: \"noOfDocuments\",\n            key: \"noOfDocuments\",\n            sorter: (a, b) => a.noOfDocuments - b.noOfDocuments,\n\n          },\n          {\n            title: (\n              \"Status\"\n            ),\n            key: \"status\",\n            dataIndex: \"status\",\n        \n        filters: [\n        \n              {\n                text: 'Initialized',\n                value: 'Initialized',\n              },\n              {\n                text: 'Ongoing',\n                value: 'Ongoing',\n              },\n              {\n                text: 'Completed',\n                value: 'Completed',\n              },\n            ],\n            onFilter:  (value, record) =>record.status === value,\n          },\n          \n          {\n            title: \"Action\",\n            key: \"action\",\n            render: (_, record) => (\n              <>\n                <Space size=\"middle\">\n\n                  <Button\n                    key={record?.id}\n                    onClick={() => handleExport(record,imageUrl)}\n                    disabled={user?.user?.roleId != 1}\n                  >\n                    Export\n                  </Button>\n                  {user.user.roleId !== 1 && record.authorId === user?.user.id  && record.status ==\"Assigned\" &&(\n                    <Button\n                      key={record?.id}\n                      onClick={() => createModalShow(record)}\n                    >\n                      Create\n                    </Button>\n                  )}\n    \n                  {user.user.roleId==1 &&       \n                  <>\n                  <Button\n                    key={record?.id}\n                    onClick={() => {showModalShow(record)                      \n                    }}\n                  >\n                    Open\n                  </Button>\n                  {/* <Button\n                    key={record?.id}\n                    onClick={() => {editModalShow(record)                      \n                    }}\n                  >\n                    Edit\n                  </Button> */}\n                  </>\n                  \n                  }       \n                </Space>\n              </>\n            ),\n          },\n          {\n            title: \"Progress Per Document\",\n            key: \"percentage\",\n            render: (_, record) => (\n              <Space>\n                {record.percentage !== null ? (\n                  <ProgressComp percentage={record.percentage.toFixed(1)} />\n                ) : null}\n              </Space>\n            )\n          },\n             \n        ]}\n        size=\"middle\"\n        bordered\n      title={() => 'All Department Documents'}\n      footer={() => 'You may filter MDR'}\n        dataSource={data}\n        rowClassName={(record) => {\n          if (matchingRecord && record.id === matchingRecord.selectedRecord.id) {\n            return 'highlighted-row'; // Apply CSS class for highlighting\n          }\n          return '';\n        }}\n      /></div>\n      <ProtectedAppPage />\n    </>\n  );\n}"],"names":["ProtectedAppPage","_localStorage","isLogIn","localStorage","getItem","console","log","_jsx","Redirect","to","_ref","percentage","strokeColor","Row","justify","align","style","width","children","Progress","percent","steps","Title","Text","Typography","imageUrl","MDR","searchText","setSearchText","useState","searchedColumn","setSearchedColumn","searchInput","useRef","documentModalVisible","setDocumentModalVisible","assignModalVisible","setAssignModalVisible","createModalVisible","setCreateModalVisible","showModalVisible","setShowModalVisible","editModalVisible","setEditModalVisible","params","setParams","title","setTitle","projectId","setProjectId","departmentId","setDepartmentId","mdrCode","setMdrCode","noOfDocuments","setNoOfDocuments","pro","setPro","status","setStatus","projectOptions","setProjects","user","setUser","JSON","parse","data","setData","dataArray","setDataArray","selectedDepartments","setSelectedDepartments","selectedReviewer","setSelectedReviewer","docData","setDocData","assignedEmployees","setAssignedEmployees","selectedApprover","setSelectedApprover","allUsers","setAllUsers","mdrTemplateVisible","setMdrTemplateVisible","departmentOptions","setDepartmentOptions","departmentOption","setDepartmentOption","userOptions","setUserData","filteredUsers","setFilteredUsers","userOption","setUserDatalist","record","setRecord","recordMdr","setRecordMdr","projectCode","setProjectCode","location","useLocation","matchingRecord","state","handleSearch","selectedKeys","confirm","dataIndex","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","close","_jsxs","padding","Input","ref","placeholder","concat","value","onChange","e","target","onPressEnter","marginBottom","display","Space","Button","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownOpenChange","visible","setTimeout","_searchInput$current","current","select","render","text","Highlighter","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","history","Menu","Item","stringify","useHistory","documentModalCancel","showDocs","async","fetchDepartmentDocs","generateHTML","logoBase64","csvContent","convertToCSV","csvRows","push","forEach","obj","key","Object","keys","documents","headers","join","document","values","map","header","cellValue","Array","isArray","handleExport","logoBase","response","fetch","url","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","base64String","result","split","onerror","error","getImageBase64FromUrl","length","htmlContent","Blob","window","URL","createObjectURL","link","createElement","href","setAttribute","masterDocumentId","body","appendChild","click","removeChild","axios","companyId","Authorization","accessToken","modified","version","masterDocumentName","content","extension","fileName","newObj","modifiedData","item","message","useEffect","fetchData","_user$user6","_user$user7","_user$user8","_user$user10","roleId","filter","_user$user9","authorId","id","_user$user11","_user$user12","_user$user13","d","_localStorage2","_user$user14","options","option","label","suffix","fetchDepartments","_user$user15","uniqueTitlesSet","Set","reduce","acc","has","add","code","fetchProjects","_user$user16","role","name","firstName","department","filteredArray","fetchUsers","_Fragment","Modal","centered","onCancel","footer","closeIcon","RiCloseFill","className","Col","span","Form","layout","rules","required","Select","Checkbox","Group","md","block","navigateToMdrTemplateForUpdate","project","find","serializedDepartmentOptions","serializedDepartmentOption","serializedRecord","serializedProjectOptions","serializedSelectedApprover","serializedSelectedReviewer","navigateToMdrTemplate","htmlType","assignModalCancel","assignedUser","authorName","departmentName","assignMDR","editModalCancel","textAlign","level","strong","createdAt","marginTop","showModalCancel","doc","index","entries","_ref2","itemIndex","docTitle","documentModalShow","marginRight","assignModalShow","MdrTemplate","overflowX","Table","columns","sorter","a","b","filters","_","_user$user17","disabled","createModalShow","showModalShow","ProgressComp","toFixed","bordered","dataSource","rowClassName","selectedRecord"],"sourceRoot":""}