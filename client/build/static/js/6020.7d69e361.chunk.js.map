{"version":3,"file":"static/js/6020.7d69e361.chunk.js","mappings":"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","sources":["view/pages/Protected.jsx","view/pages/organizationChart/index.jsx","view/pages/users/index.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nconst ProtectedAppPage = () => {\n  const isLogIn = localStorage?.getItem(\"user\");\n  console.log(isLogIn, \"loggin\");\n  if (!isLogIn) {\n    return <Redirect to=\"/pages/authentication/login\" />;\n  }\n\n  return null;\n};\nexport default ProtectedAppPage;\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { FaLeaf } from 'react-icons/fa';\r\nimport axios from 'axios'\r\n\r\n\r\nconst OrganizationChart = ({ employees }) => {\r\n  const [user,setUser]  = useState(JSON.parse(localStorage?.getItem(\"user\")))\r\n  const[name,setName] = useState()\r\n  useEffect(()=>{\r\n    fetchName()\r\n    // setUser();\r\n  })\r\n\r\n  const fetchName = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/users/company/?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n  console.log(response.data,\"company name\");\r\n  setName(response.data)\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  console.log(employees,\"employees\");\r\n  const buildTree = (employees) => {\r\n    const employeeMap = new Map();\r\n    employees.forEach((employee) => {\r\n      employeeMap.set(employee.id, { ...employee, children: [] });\r\n    });\r\nconsole.log(employeeMap,\"employeeMap\");\r\n    const tree = [];\r\n    employeeMap.forEach((employee) => {\r\n      const roleId = employee.roleId;\r\n      const department = employee.department;\r\n      if(user.user.roleId == 2){\r\n        if (department && roleId === 2) {\r\n          tree.push(employee);\r\n        } else {\r\n          const parentNode = findParentNode(employeeMap, employee);\r\n          if (parentNode) {\r\n            parentNode.children.push(employee);\r\n          }\r\n        }\r\n      }\r\n      else{\r\n\r\n        if (!department && roleId === 1) {\r\n          tree.push(employee);\r\n        } else {\r\n          const parentNode = findParentNode(employeeMap, employee);\r\n          if (parentNode) {\r\n            parentNode.children.push(employee);\r\n          }\r\n        }\r\n      }\r\n\r\n    });\r\n    console.log(tree,\"tree\");\r\n    return tree;\r\n  };\r\n  const findParentNode = (employeesMap, employee) => {\r\n    return [...employeesMap.values()].find((node) => {\r\n      if (node.department === null && employee.department === null) {\r\n        return node.roleId === employee.roleId - 1;\r\n      } else if (employee.roleId === 5 && node.department === employee.department) {\r\n        return node.roleId === employee.roleId - 1;\r\n      }\r\n       else if (employee.roleId === 5 && employee.department === 'Piping') {\r\n        return node.roleId === 1;\r\n      } \r\n      else if (employee.roleId === 4 && employee.department === 'Process') {\r\n        return node.roleId === 2 && node.department === 'Process';\r\n      }else if (employee.roleId === 2) {\r\n        return node.roleId === employee.roleId - 1;\r\n      } else if (node.department === employee.department) {\r\n        return node.roleId === employee.roleId - 1;\r\n      }\r\n      else if (employee.roleId === 5 && employee.department === 'Instrumentation') {\r\n        return node.roleId === 1;\r\n      } \r\n      return false;\r\n    });\r\n  };\r\n\r\n  const renderChartNode = (node) => {\r\n    const getLayerColor = (layer) => {\r\n      switch (layer) {\r\n        case 1:\r\n          return '#FFD700'; // Layer 1 color (e.g., gold)\r\n        case 2:\r\n          return '#87CEEB'; // Layer 2 color (e.g., sky blue)\r\n        case 3:\r\n          return '#90EE90'; // Layer 3 color (e.g., light green)\r\n        case 4:\r\n          return '#FFA07A'; // Layer 4 color (e.g., light salmon)\r\n        case 5:\r\n          return '#DDA0DD'; // Layer 5 color (e.g., plum)\r\n        default:\r\n          return '#FFFFFF'; // Default color (white)\r\n      }\r\n    };\r\n\r\n    const isLeafNode = node.children.length === 0;\r\n\r\n    return (\r\n      \r\n      <TreeNode\r\n        label={(\r\n          <div\r\n            style={{\r\n              backgroundColor: getLayerColor(node.roleId),\r\n              padding: '4px',\r\n              borderRadius: '16px',\r\n              fontWeight:\"bold\",\r\n              cursor: isLeafNode ? 'default' : 'pointer',\r\n            }}\r\n          >\r\n            {node.lastName}-{node.department}-{node.roleTitle}\r\n            {isLeafNode && (\r\n              <FaLeaf\r\n                style={{\r\n                  marginLeft: '2px',\r\n                  fontSize: '20px',\r\n                  color: '#008000', // Adjust leaf color as needed\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        key={node.id.toString()} // Key to avoid React warning about unique keys\r\n      >\r\n        {node.children.map((child) => renderChartNode(child))} {/* Recursive call for children */}\r\n      </TreeNode>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflowX: 'auto' }}>\r\n      <Tree label={<div style={{ fontSize: '18px', fontWeight: 'bold', color: '#333' }}>{user.user.roleId == 2 ? user.user.department : name}</div>}>\r\n        {buildTree(employees).map((employee) => renderChartNode(employee))}\r\n      </Tree>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrganizationChart;\r\n","import React, { useState, useEffect,useRef } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Skeleton ,\r\n  Table,\r\n  Input,\r\n  Modal,\r\n  message,\r\n  Checkbox,\r\n  Select,\r\n  Upload,\r\n  Avatar,\r\n  Tag \r\n} from \"antd\";\r\nimport { RiCloseFill, RiCalendarLine } from \"react-icons/ri\";\r\nimport axios from \"axios\";\r\n// import InfoProfile from \"./personel-information\";\r\n// import MenuProfile from \"./menu\";\r\n// import PasswordProfile from \"./password-change\";\r\n// import ProtectedAppPage from \"../Protected\";\r\nimport ProtectedAppPage from \"../Protected\";\r\nimport UserTreeView from \"../treeview/UserTreeView\";\r\nimport OrganizationChart from \"../organizationChart\";\r\nimport EmployeeTree from \"../employee_tree\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { Person, Person2 } from \"@mui/icons-material\";\r\n\r\n\r\n\r\n\r\nexport default function Users() {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n  const location = useLocation();\r\n  const [image,setImage] = useState(null)\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [displayNames, setDisplayNames] = useState([]);\r\n  const [selectedDepartments, setSelectedDepartments] = useState(\"\");\r\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n  const [ departmentOptions,setDepartmentOptions]= useState([])\r\n  const [userModalVisible, setUserModalVisible] = useState(false);\r\n  const [departmentWise, setDepartmentWise] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const isEmailValid = /\\S+@\\S+\\.\\S+/.test(email);\r\n  const [user, setUser] = useState(JSON.parse(localStorage?.getItem(\"user\")));\r\n  const [data, setData] = useState([]);\r\n  const [dataArray,setDataArray] = useState([])\r\n  const [showTreeView, setShowTreeView] = useState(false);\r\n  const users = location.state?.users || null; \r\n  const [imageUrl, setImageUrl] = useState(null); // State to hold the uploaded image URL\r\n\r\n  // Function to handle image upload\r\n  const handleImageUpload = info => {\r\n    if (info.file.status === 'done') {\r\n      // Set the uploaded image URL\r\n      setImageUrl(info.file.response.url);\r\n      console.log(imageUrl,\"imageUrl\");\r\n    }\r\n  };\r\n  // const dataArray = location.state?.users ||null\r\n  console.log(users,'users');// Access the users array from location.state\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/departments?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers \r\n          },\r\n        }\r\n      );\r\n      const options = [];\r\n      const option = []\r\n      for (const item of response?.data) {\r\n        options.push({ value:{id:item?.id,title:item?.title}, label: item?.title });\r\n      }\r\n      console.log(\"departments\",options);\r\n      setDepartmentOptions(options); // Assuming the response.data is an array of projects\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error?.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setDisplayNames(departmentOptions.map(option => option.label));\r\n      setLoading(false);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [departmentOptions]);\r\n  const UserModalShow = () => {\r\n    setUserModalVisible(true);\r\n  };\r\n\r\n  const UserModalCancel = () => {\r\n    setUserModalVisible(false);\r\n  };\r\n\r\n  const departmentWiseShow = () => {\r\n    setDepartmentWise(true);\r\n  };\r\n\r\n  const departmentWiseCancel = () => {\r\n    setDepartmentWise(false);\r\n  };\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => clearFilters && handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? '#1677ff' : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"firstName\",\r\n      key: \"firstName\",\r\n      ...getColumnSearchProps('firstName'),\r\n  \r\n    },\r\n  \r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n      ...getColumnSearchProps('department'),\r\n  \r\n    },\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"roleTitle\",\r\n      key: \"roleTitle\",\r\n  \r\n      filters: [\r\n  \r\n        {\r\n          text: 'Lead',\r\n          value: 'Head',\r\n        },\r\n        {\r\n          text: 'Senior Engineer',\r\n          value: 'Senior',\r\n        },\r\n        {\r\n          text: 'Junior Engineer',\r\n          value: 'Junior',\r\n        },\r\n        {\r\n          text: 'Designer',\r\n          value: 'Designer',\r\n        },\r\n      ],\r\n      onFilter:  (value, record) =>record.roleTitle === value,\r\n  \r\n    },\r\n  \r\n    {\r\n      title: \"Reporting To\",\r\n      dataIndex: \"reported_to\",\r\n      key: \"reported_to\",\r\n      ...getColumnSearchProps('reported_to'),\r\n  \r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      ...getColumnSearchProps('email'),\r\n  \r\n    },\r\n  \r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <a>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const addUser = async () => {\r\n    try {\r\n      const roleOptions = {\r\n        \"head\":\"2\",\r\n        \"seniorEngineer\":\"3\",\r\n        \"juniorEngineer\":\"4\",\r\n        \"designer\":\"5\"\r\n      }\r\n      console.log(\"selectedDeparment\",selectedDepartments);\r\n      console.log(\"role\",role);\r\n\r\n      console.log(selectedDepartments.id,selectedDepartments.title,\"checking\");\r\n      const response = await axios.post(\r\n        `http://54.81.250.98:8083/api/users?${image}`,\r\n        {\r\n          roleId:roleOptions[role],\r\n          companyId:user?.user?.companyId,\r\n          departmentId:selectedDepartments[0].id,\r\n          department:selectedDepartments[0].title,\r\n          email,\r\n          firstName,\r\n          lastName,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      // Handle the response as needed\r\n      console.log(response);\r\n      message.success(response?.data?.message);\r\n      fetchData();\r\n      UserModalCancel();\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error(\"Error adding user:\", error);\r\n      // message.error(\"Error adding user\");\r\n    }\r\n  };\r\n  const fetchData = async () => {\r\n    console.log(user.user.roleId,\"roleId\");\r\n    try {\r\n      if(user.user.roleId==2){\r\n        const response = await axios.get(\r\n          `http://54.81.250.98:8083/api/users?companyId=${user?.user?.companyId}&departmentId=${user.user.departmentId}`,\r\n          {\r\n            headers: {\r\n              Authorization: user?.accessToken,\r\n              // Add other headers if needed\r\n            },\r\n          }\r\n        );\r\n        \r\n        setData(response.data)\r\n        setDataArray(response.data)\r\n      }\r\n      else{\r\n      const response = await axios.get(\r\n        `http://54.81.250.98:8083/api/users?companyId=${user?.user?.companyId}`,\r\n        {\r\n          headers: {\r\n            Authorization: user?.accessToken,\r\n            // Add other headers if needed\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      const roleOrder = ['Head of Department', 'Senior Engineer', 'Junior Engineer', 'Designer/Draughtsmen'];\r\n      // Sort the filtered data based on the order of roles\r\n      response.data.sort((a, b) => roleOrder.indexOf(a.roleTitle) - roleOrder.indexOf(b.roleTitle));\r\n      setData(response.data); // Assuming the response.data is an array of projects\r\n      setDataArray(response.data)\r\n      console.log(\"response\",response.data);}\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error?.message);\r\n    }\r\n  };\r\n  const handleDepartmentClick = (name) => {\r\n    setSelectedDepartment(name);\r\n    departmentWiseCancel();\r\n    filterData(name);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    departmentWiseCancel();\r\n    setData(dataArray)\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const file = e.target.files[0];\r\n    console.log(file);\r\n    setImage(file); // Set the selected image file\r\n  };\r\n\r\n  // const onSubmit = async(e)=>{\r\n  //   e.preventDefault()\r\n  //   const formData = new FormData()\r\n  //   formData.append(\"image\",image)\r\n  //   formData.append(\"companyId\",user?.user?.companyId)\r\n\r\n  //   const logo = await axios.put(`http://54.81.250.98:8083/logo`,formData,{\r\n  //     headers:{\r\n  //       \"Content-Type\":\"multipart/form-data\",\r\n  //       Authorization: user?.accessToken,\r\n  //     }\r\n  //   })\r\n\r\n  //   console.log(logo.data,\"result\");\r\n  // }\r\n  const handleUserTreeViewClick = () => {\r\n    setShowTreeView(true);\r\n  };\r\n  const handleDoubleClick = () => {\r\n    setShowTreeView(false);\r\n  };\r\n  const filterData = (selectedDepartment) => {\r\n    // Assuming data is an array of users with each object having a 'department' and 'roleTitle' property\r\n    const filteredData = dataArray.filter(user => user.department === selectedDepartment);\r\n  \r\n    // Define the order of roles\r\n    const roleOrder = ['Head of Department', 'Senior Engineer', 'Junior Engineer', 'Designer/Draugthsmen'];\r\n  \r\n    // Sort the filtered data based on the order of roles\r\n    filteredData.sort((a, b) => roleOrder.indexOf(a.roleTitle) - roleOrder.indexOf(b.roleTitle));\r\n\r\n    console.log(\"filter\",filteredData);\r\n    setData(filteredData);\r\n  };\r\n  useEffect(() => {\r\n    setUser(JSON.parse(localStorage?.getItem(\"user\")));\r\n    if (users) {\r\n      setData(users)\r\n    }\r\n    else{\r\n      fetchDepartments();\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Add User\"\r\n        width={416}\r\n        centered\r\n        visible={userModalVisible}\r\n        onCancel={UserModalCancel}\r\n        footer={null}\r\n        closeIcon={\r\n          <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n        }\r\n      >\r\n        <Form layout=\"vertical\" name=\"basic\" encType=\"multipart/form-data\">\r\n        \r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your firstName!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your lastName!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"E-mail :\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Role\"  name=\"role\">\r\n            <Select\r\n              defaultValue=\"\"\r\n              options={[\r\n                { value: \"head\", label: \"Head\" },\r\n                { value: \"seniorEngineer\", label: \"Senior Engineer\" },\r\n                { value: \"juniorEngineer\", label: \"Junior Engineer\" },\r\n                { value: \"designer\", label: \"Designer/Draftsmen\" },\r\n              ]}\r\n              value={role}\r\n              onChange={(e) => setRole(e)}\r\n            /></Form.Item>\r\n          <Form.Item\r\n          label=\"Select Department\"\r\n          rules={[\r\n           \r\n            {\r\n              required: true,\r\n              message: \"Please select one department!\",\r\n            },\r\n          ]}>\r\n          <Checkbox.Group options={departmentOptions} value={selectedDepartments} onChange={setSelectedDepartments} />\r\n   </Form.Item>\r\n          <Row>\r\n            <Col md={12} span={24} className=\"hp-pr-sm-0 hp-pr-12\">\r\n              <Button\r\n                block\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onClick={() => addUser()}\r\n                disabled={\r\n                  !(\r\n                    email.length &&\r\n                    firstName.length &&\r\n                    lastName.length &&\r\n                    isEmailValid\r\n                  )\r\n                }\r\n                className={\r\n                  !(\r\n                    email.length &&\r\n                    firstName.length &&\r\n                    lastName.length &&\r\n                    isEmailValid\r\n                  )\r\n                    ? \"disabled-button\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                Add\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col md={12} span={24} className=\"hp-mt-sm-12 hp-pl-sm-0 hp-pl-12\">\r\n              <Button block onClick={UserModalCancel}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n      title=\"Departments\"\r\n      width={416}\r\n      centered\r\n      visible={departmentWise}\r\n      onCancel={departmentWiseCancel}\r\n      footer={null}\r\n      closeIcon={<RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />}\r\n    >\r\n            <Button\r\n            size=\"default\"\r\n            type=\"primary\"\r\n            onClick={()=>handleClick()}\r\n\r\n            style={{ margin: '8px' }}\r\n          >\r\n            All Departments\r\n          </Button>\r\n      {loading ? (\r\n        \r\n        departmentOptions.map(option => (\r\n          <Button\r\n            key={option.label}\r\n            loading\r\n            size=\"default\"\r\n            style={{ margin: '8px' }}\r\n          >\r\n            {option.label}\r\n          </Button>\r\n        ))\r\n      ) : (\r\n        displayNames.map(name => (\r\n          <Button\r\n            key={name}\r\n            size=\"default\"\r\n            style={{ margin: '8px' }}\r\n            onClick={() => handleDepartmentClick(name)}\r\n            type={selectedDepartment === name ? 'primary' : 'default'}\r\n          >\r\n            {name}\r\n          </Button>\r\n        ))\r\n      )}\r\n    </Modal>\r\n      <div style={{ textAlign: \"right\", marginBottom: \"16px\" }}>\r\n      {user?.user?.roleId == 1 && (\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={UserModalShow}\r\n        >\r\n          Add User\r\n        </Button>\r\n      )}\r\n\r\n        {/* <Button\r\n          type=\"primary\"\r\n          onClick={departmentWiseShow}\r\n          style={{margin:\"4px\"}}\r\n        >\r\n          Department Wise\r\n        </Button> */}\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleUserTreeViewClick}\r\n          onDoubleClick={handleDoubleClick}\r\n          // disabled={user?.user?.roleId != 1}\r\n          style={{margin:\"4px\"}}\r\n        >\r\n          User Tree\r\n        </Button>\r\n        \r\n      </div>\r\n      \r\n      {\r\n  showTreeView ?\r\n  <div style={{ overflowX: 'auto', width: '1300px' }}>\r\n        {user?.user?.roleId === 2 && users ? (\r\n          <OrganizationChart employees={users} />\r\n        ) : (\r\n          <OrganizationChart employees={dataArray} />\r\n        )}\r\n\r\n      </div> :\r\n      <div style={{ overflowX: \"auto\" }}>\r\n    {/* <Table dataSource={data} title={() => 'All Users'} footer={() => 'You may filter users based on department and roles'}>\r\n      <ColumnGroup title=\"Name\">\r\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\"/>\r\n        <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\r\n      </ColumnGroup>\r\n      <Column title=\"Department\" dataIndex=\"department\" key=\"department\" \r\n      filters={[\r\n        { text: 'Project Management', value: 'Project Management' },\r\n        { text: 'Mechanical', value: 'Mechanical' },\r\n        { text: 'Electrical', value: 'Electrical' },\r\n        { text: 'Process', value: 'Process' },\r\n        { text: 'Piping', value: 'Piping' },\r\n        { text: 'Instrumentation', value: 'Instrumentation' },\r\n        { text: 'Civil/Structure', value: 'Civil/Structure' },\r\n      ]}\r\n      onFilter={(value, record) => record.department === value}\r\n      />\r\n      <Column\r\n        title=\"Role\"\r\n        dataIndex=\"roleTitle\"\r\n        key=\"roleTitle\"\r\n        filters={[\r\n          { text: 'Lead', value: 'Head' },\r\n          { text: 'Senior Engineer', value: 'Senior' },\r\n          { text: 'Junior Engineer', value: 'Junior' },\r\n          { text: 'Designer', value: 'Designer' },\r\n        ]}\r\n        onFilter={(value, record) => record.roleTitle === value}\r\n      />\r\n      <Column title=\"Reporting To\" key=\"reported_to\" dataIndex=\"reported_to\"></Column>\r\n      <Column title=\"Email\" key=\"email\" dataIndex=\"email\"></Column>\r\n\r\n    title={() => 'All Users'}\r\n    footer={() => 'You may filter users based on department and roles'}\r\n\r\n    </Table> */}\r\n\r\n<Table\r\n      dataSource={data}\r\n      columns={columns}\r\n      title={() => 'All Users'}\r\n      footer={() => 'You may filter users based on department and roles'}\r\n    />\r\n      </div>\r\n    }\r\n    <ProtectedAppPage />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n//   {\r\n//     title: \"Role\",\r\n//     dataIndex: \"roleTitle\",\r\n//     key: \"roleTitle\",\r\n    // filters: [\r\n\r\n    //   {\r\n    //     text: 'Lead',\r\n    //     value: 'Head',\r\n    //   },\r\n    //   {\r\n    //     text: 'Senior Engineer',\r\n    //     value: 'Senior',\r\n    //   },\r\n    //   {\r\n    //     text: 'Junior Engineer',\r\n    //     value: 'Junior',\r\n    //   },\r\n    //   {\r\n    //     text: 'Designer',\r\n    //     value: 'Designer',\r\n    //   },\r\n    // ],\r\n    // onFilter:  (value, record) =>record.roleTitle === value,\r\n\r\n//   },\r\n\r\n//   {\r\n//     title: \"Reporting To\",\r\n//     dataIndex: \"reported_to\",\r\n//     key: \"reported_to\",\r\n//   },\r\n//   {\r\n//     title: \"Email\",\r\n//     dataIndex: \"email\",\r\n//     key: \"email\",\r\n//   },\r\n\r\n//   {\r\n//     title: \"Action\",\r\n//     key: \"action\",\r\n//     render: (_, record) => (\r\n//       <Space size=\"middle\">\r\n//         <a>Delete</a>\r\n//       </Space>\r\n//     ),\r\n//   },\r\n// ];\r\n\r\n"],"names":["ProtectedAppPage","_localStorage","isLogIn","localStorage","getItem","console","log","_jsx","Redirect","to","_ref","employees","user","setUser","useState","JSON","parse","name","setName","useEffect","fetchName","async","_user$user","response","axios","concat","companyId","headers","Authorization","accessToken","data","error","message","findParentNode","employeesMap","employee","values","find","node","department","roleId","renderChartNode","isLeafNode","children","length","_jsxs","TreeNode","label","style","backgroundColor","layer","getLayerColor","padding","borderRadius","fontWeight","cursor","lastName","roleTitle","FaLeaf","marginLeft","fontSize","color","map","child","id","toString","overflowX","Tree","employeeMap","Map","forEach","set","tree","push","parentNode","buildTree","Users","_location$state","_user$user5","_user$user6","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","useRef","location","useLocation","image","setImage","loading","setLoading","displayNames","setDisplayNames","selectedDepartments","setSelectedDepartments","selectedDepartment","setSelectedDepartment","departmentOptions","setDepartmentOptions","userModalVisible","setUserModalVisible","departmentWise","setDepartmentWise","email","setEmail","role","setRole","firstName","setFirstName","setLastName","isEmailValid","test","setData","dataArray","setDataArray","showTreeView","setShowTreeView","users","state","imageUrl","setImageUrl","timeout","setTimeout","option","clearTimeout","UserModalCancel","departmentWiseCancel","handleSearch","selectedKeys","confirm","dataIndex","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","close","Input","ref","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","Space","Button","type","onClick","icon","SearchOutlined","size","width","handleReset","filterIcon","filtered","undefined","onFilter","record","toLowerCase","includes","onFilterDropdownOpenChange","visible","_searchInput$current","current","select","render","text","Highlighter","highlightStyle","searchWords","autoEscape","textToHighlight","columns","title","key","filters","_","fetchData","_user$user3","departmentId","_user$user4","roleOrder","sort","a","b","indexOf","filterData","filteredData","filter","_localStorage2","options","item","fetchDepartments","_Fragment","Modal","centered","onCancel","footer","closeIcon","RiCloseFill","className","Form","layout","encType","Item","rules","required","Select","defaultValue","Checkbox","Group","Row","Col","md","span","block","htmlType","_user$user2","_response$data","roleOptions","success","addUser","disabled","margin","handleDepartmentClick","textAlign","UserModalShow","handleUserTreeViewClick","onDoubleClick","handleDoubleClick","OrganizationChart","Table","dataSource"],"sourceRoot":""}